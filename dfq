[1mdiff --git a/nongjang/necessity/models.py b/nongjang/necessity/models.py[m
[1mindex e2b04c1..e96fcbb 100644[m
[1m--- a/nongjang/necessity/models.py[m
[1m+++ b/nongjang/necessity/models.py[m
[36m@@ -13,7 +13,6 @@[m [mclass NecessityUser(models.Model):[m
     user = models.ForeignKey(User, related_name='necessities', on_delete=models.CASCADE)[m
     necessity = models.ForeignKey(Necessity, related_name='users', on_delete=models.CASCADE)[m
     count = models.PositiveIntegerField(default=0)[m
[31m-    used = models.BooleanField(default=True)[m
 [m
     class Meta:[m
         unique_together = [[m
[1mdiff --git a/nongjang/necessity/serializers.py b/nongjang/necessity/serializers.py[m
[1mindex cf12ad0..1250811 100644[m
[1m--- a/nongjang/necessity/serializers.py[m
[1m+++ b/nongjang/necessity/serializers.py[m
[36m@@ -1,29 +1,32 @@[m
 from rest_framework import serializers[m
 from django.contrib.auth.models import User[m
 [m
[31m-from necessity.models import Necessity, NecessityUser, NecessityUserLog[m
[32m+[m[32mfrom necessity.models import Necessity, NecessityUserLog[m
 [m
 [m
 class NecessitySerializer(serializers.ModelSerializer):[m
[31m-    count = serializers.SerializerMethodField()[m
[32m+[m[32m    necessity_user = serializers.SerializerMethodField()[m
 [m
     class Meta:[m
         model = Necessity[m
         fields = ([m
             'id',[m
[31m-            'name',         # ÏÉÅÌíàÎ™Ö[m
[31m-            'option',       # size[m
[31m-            'description',  # ÏÉÅÌíà ÏÑ§Î™Ö[m
[31m-            'price',         # Í∞úÎãπ Í∞ÄÍ≤©[m
[31m-            'count'[m
[31m-        )[m
[32m+[m[32m            'name',             # ÏÉÅÌíàÎ™Ö[m
[32m+[m[32m            'option',           # size[m
[32m+[m[32m            'description',      # ÏÉÅÌíà ÏÑ§Î™Ö[m
[32m+[m[32m            'price',            # Í∞úÎãπ Í∞ÄÍ≤©[m
[32m+[m[32m            'necessity_user',   # Ìï¥Îãπ ÏÇ¨Ïö©ÏûêÏùò ÏÉùÌïÑÌíà[m
[32m+[m[32m         )[m
[32m+[m
[32m+[m[32m    def get_necessity_user(self, necessity_user):[m
[32m+[m[32m        user = necessity_user.necessity_user[m
[32m+[m[32m        if not necessity_user:[m
[32m+[m[32m            raise Exception("no necessity user")[m
[32m+[m[32m        return {[m
[32m+[m[32m            "necessity_user_id": user.id,[m
[32m+[m[32m            "necessity_user_count": user.count,[m
[32m+[m[32m        }[m
 [m
[31m-    def get_count(self, necessity):[m
[31m-        try:[m
[31m-            necessity_user = NecessityUser.objects.get(necessity=necessity, user=self.context['request'].user)[m
[31m-        except NecessityUser.DoesNotExist:[m
[31m-            return 0[m
[31m-        return necessity_user.count[m
 [m
 class NecessityUserLogSerializer(serializers.ModelSerializer):[m
     user = serializers.SerializerMethodField()[m
[1mdiff --git a/nongjang/necessity/views.py b/nongjang/necessity/views.py[m
[1mindex 058851b..36cecc9 100644[m
[1m--- a/nongjang/necessity/views.py[m
[1m+++ b/nongjang/necessity/views.py[m
[36m@@ -66,14 +66,13 @@[m [mclass NecessityViewSet(viewsets.GenericViewSet):[m
         return Response(self.get_serializer(necessities, many=True).data)[m
 [m
     # DELETE /api/v1/necessity/{necessity_id}/[m
[31m-    @action(methods=['PUT'], detail=False)[m
[31m-    def delete(self, request, pk=None):[m
[32m+[m[32m    def destroy(self, request, pk=None):[m
         try:[m
             necessity_user = NecessityUser.objects.get(pk=pk)[m
[31m-            necessity_user.used = False[m
[31m-            necessity_user.save()[m
[32m+[m[32m            necessity_user.delete()[m
[32m+[m[32m            return Response(status=status.HTTP_204_NO_CONTENT)[m
 [m
[31m-        except Necessity.DoesNotExist:[m
[32m+[m[32m        except NecessityUser.DoesNotExist:[m
             return Response(status=status.HTTP_404_NOT_FOUND)[m
 [m
     # GET /api/v1/necessity/log/[m
[1mdiff --git a/orange/src/components/Necessity/NecessityItem/NecessityItem.tsx b/orange/src/components/Necessity/NecessityItem/NecessityItem.tsx[m
[1mindex d62bd45..4c87369 100644[m
[1m--- a/orange/src/components/Necessity/NecessityItem/NecessityItem.tsx[m
[1m+++ b/orange/src/components/Necessity/NecessityItem/NecessityItem.tsx[m
[36m@@ -50,19 +50,7 @@[m [minterface Props {[m
   remove(id: number): any;[m
 }[m
 [m
[31m-interface State {[m
[31m-  key: number;[m
[31m-  id: number;[m
[31m-  name: string;[m
[31m-  option: string;[m
[31m-  price: number;[m
[31m-}[m
[31m-[m
 function NecessityItem(props: Props) {[m
[31m-  // {[m
[31m-  //   id, name, option, price,[m
[31m-  // }: { id: number; name: string; option: string; price: number })[m
[31m-[m
   return ([m
     <NecessityItemBlock id={`necessity-item-${props.id}`}>[m
       <Text>[m
[36m@@ -79,14 +67,14 @@[m [mfunction NecessityItem(props: Props) {[m
 }[m
 [m
 const mapDispatchToProps = (dispatch: Dispatch<any>) => ({[m
[31m-  remove: (): void => dispatch([m
[31m-    necessityActions.removeNecessity(),[m
[32m+[m[32m  remove: (id: number): void => dispatch([m
[32m+[m[32m    necessityActions.removeNecessity(id),[m
   ),[m
 });[m
 [m
[31m-const mapStateToProps = (state: any) => ({[m
[31m-  removeStatus: state.necessity.removeStatus,[m
[31m-  me: state.user.me,[m
[31m-});[m
[32m+[m[32m// const mapStateToProps = (state: any) => ({[m
[32m+[m[32m//   removeStatus: state.necessity.removeStatus,[m
[32m+[m[32m//   me: state.user.me,[m
[32m+[m[32m// });[m
 [m
[31m-export default connect(mapStateToProps, mapDispatchToProps)(NecessityItem);[m
[32m+[m[32mexport default connect(null, mapDispatchToProps)(NecessityItem);[m
[1mdiff --git a/orange/src/store/actions/necessity/necessity.tsx b/orange/src/store/actions/necessity/necessity.tsx[m
[1mindex c70797c..6a7762d 100644[m
[1m--- a/orange/src/store/actions/necessity/necessity.tsx[m
[1m+++ b/orange/src/store/actions/necessity/necessity.tsx[m
[36m@@ -69,7 +69,7 @@[m [mexport const createNecessity = ([m
   .then((createResponse) => dispatch(createSuccess(createResponse.data)))[m
   .catch((createError) => dispatch(createFailure(createError)));[m
 [m
[31m-export const removeNecessity = () => (dispatch: Dispatch) => axios.patch('/api/v1/necessity/{necessity_id}/')[m
[32m+[m[32mexport const removeNecessity = (id: number) => (dispatch: Dispatch) => axios.delete(`/api/v1/necessity/${id}/`)[m
   .then((removeResponse) => dispatch(removeSuccess(removeResponse.data)))[m
   .catch((removeError) => dispatch(removeFailure(removeError)));[m
 [m
