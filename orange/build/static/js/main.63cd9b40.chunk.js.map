{"version":3,"sources":["components/Header/Header.tsx","components/StudyInfo/StudyInfo.tsx","constants/constants.ts","store/actions/actionTypes.ts","store/actions/index.ts","store/actions/user/user.tsx","components/Login/Login.tsx","components/Articles/Articles.tsx","containers/Main/Main.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["Header","props","className","title","StudyInfo","onClick","window","open","userStatus","userConstants","userActions","username","password","dispatch","axios","put","then","res","user","data","type","target","catch","err","error","response","status","Login","state","this","onLogin","loginStatus","console","log","id","placeholder","onChange","e","setState","value","disabled","clickLoginHandler","Component","connect","login","Articles","Main","App","history","Boolean","location","hostname","match","initialState","me","reducer","action","email","lastLogin","last_login","dateJoined","date_joined","rootReducer","combineReducers","userReducer","router","connectRouter","createBrowserHistory","middlewares","store","next","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.63cd9b40.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ArticleProps } from '../Article/Article';\nimport './Header.css';\n\n// each HTML component\nfunction Header(props: ArticleProps) {\n    return (\n      <header className={props.className}>\n        <h1>{props.title}</h1>\n        {/* 소개글 넣기 */}\n        <p>Since. 2020.04.12.</p>\n      </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport { ArticleProps } from '../Article/Article';\nimport './StudyInfo.css';\n\nfunction StudyInfo(props: ArticleProps) {\n    return (\n      <div className={props.className}>\n        <section>\n          <h2 className=\"deep-orange\">스터디 멤버</h2>\n          <ul>\n            <strong>웹 개발 참여</strong>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/davin111\")}\n              > 다빈\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/palpitate2015\")}\n              > 상현\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/YeonghyeonKO\")}\n              > 영현\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/JSKeum\")}\n              > 진섭\n              </a>\n            </li>\n            <br />\n            <strong>세미나 참여</strong>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/anneKwon\")}\n              > 민재\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/Eunsung-k\")}\n              > 은성\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/jadeyyun\")}\n              > 재연\n              </a>\n            </li>          \n          </ul>\n        </section>\n        <section>\n          <h2 className=\"deep-orange\">GitHub</h2>\n          <ul>\n            <li>\n              <a\n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/gongmyeong-study\")}\n              >\n                GitHub 방문하기\n              </a>\n            </li>\n          </ul>\n        </section>\n        <section>\n          <h2 className=\"deep-orange\">Slack</h2>\n          <ul>\n            <li>\n              <a\n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://gongmyeongstudy.slack.com\")}\n              >\n                Slack 방문하기\n              </a>\n            </li>       \n          </ul>\n        </section>  \n      </div>\n    );\n}\n\nexport default StudyInfo;\n","export const userStatus = {\n    NONE: 'NONE',\n    WAITING: 'WAITING',\n    SUCCESS: 'SUCCESS',\n    FAILURE: 'FAILURE',\n};\n","export const userConstants = {\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\n    LOGIN_FAILURE_USERNAME: 'LOGIN_FAILURE_USERNAME',\n};\n","import {\n    login,\n} from './user/user';\n\nexport const userActions = {\n    login,\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { userConstants } from '../actionTypes';\n\n\nconst loginSuccess = (user: any) => ({\n  type: userConstants.LOGIN_SUCCESS,\n  target: user,\n});\n\nconst loginFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = userConstants.LOGIN_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const login = (\n  username: string, password: string,\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\n  .then((res) => dispatch(loginSuccess(res.data)))\n  .catch((err) => dispatch(loginFailure(err)));\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\n\nimport { userStatus } from '../../constants/constants';\nimport { userActions } from '../../store/actions';\nimport './Login.css';\n\ninterface Props {\n  loginStatus: string;\n  onLogin: (username: string, password: string) => any;\n}\n\ninterface State {\n  username: string;\n  password: string;\n}\n\nclass Login extends Component<Props, State> {\n  // NOTE: this Login Component is just for example about api call. it can be changed completely differently.\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  clickLoginHandler() {\n    this.props.onLogin(this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.loginStatus === userStatus.SUCCESS) {\n          // NOTE: just friendly logging - please remove below logging line later\n          console.log(\"SUCCESSFULLY LOGGED IN!\")\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n      <h1>Login</h1>\n        <div className=\"LoginField\">\n          <input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"username\"\n            onChange={(e) => this.setState({ username: e.target.value })}\n          />\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => this.setState({ password: e.target.value })}\n          />\n        </div>\n        <button\n          className=\"LoginButton\"\n          disabled={!this.state.username || !this.state.password}\n          onClick={() => this.clickLoginHandler()}\n        >\n          go\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginStatus: state.user.loginStatus,\n  user: state.user.login,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onLogin: (username: string, password: string) => dispatch(userActions.login(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { ArticleProps } from '../Article/Article';\nimport Login from '../Login/Login';\n\nfunction Articles(props: ArticleProps) {\n    return (\n      <div className={props.className}>\n        <article>\n          <Login />\n        </article>\n      </div>\n    );\n}\n\nexport default Articles;\n","import React, { Component } from 'react';\n\nimport { Header, StudyInfo, Articles } from '../../components';\nimport './Main.css';\n\nclass Main extends Component {\n  render() {\n    return(\n      <div className=\"main-ui\">\n        <Header className=\"main-header\" title=\"오렌지 농장\"/>\n        <main>\n          <StudyInfo className=\"left-info\" />\n          <Articles className=\"right-articles\" />  \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { Main } from './containers';\nimport './App.css';\n\ninterface Props {\n  history: any;\n}\n\nfunction App(props: Props): JSX.Element {\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={props.history}>\n        <Main />\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userConstants } from '../../actions/actionTypes';\nimport { userStatus } from '../../../constants/constants';\n\nconst initialState = {\n  me: {},\n  loginStatus: userStatus.NONE,\n};\n\nconst reducer = (state = initialState, action: any) => {\n  const data = action.target;\n  switch (action.type) {\n    case userConstants.LOGIN_SUCCESS:\n        // NOTE: just friendly logging - please remove below logging line later\n        console.log(data);\n        return {\n            ...state,\n            loginStatus: userStatus.SUCCESS,\n            me: {\n                id: data.id,\n                username: data.username,\n                email: data.email,\n                lastLogin: data.last_login,\n                dateJoined: data.date_joined,\n            },\n        };\n    case userConstants.LOGIN_FAILURE:\n      return { ...state, loginStatus: userStatus.FAILURE };\n    default:\n      return { ...state };\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport userReducer from './user/user';\n\nconst rootReducer = (history: any) => combineReducers({\n  user: userReducer,\n  router: connectRouter(history),\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from './reducers/index';\n\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  window.console.log('[Middleware] Dispatching', action);\n  const result = next(action);\n  window.console.log('[Middleware] Next State', store.getState());\n  return result;\n};\n\nexport const history = createBrowserHistory();\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\n\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App history={history} />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}