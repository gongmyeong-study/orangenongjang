{"version":3,"sources":["store/actions/actionTypes.ts","store/actions/index.ts","store/actions/user/user.tsx","store/actions/necessity/necessity.tsx","constants/constants.ts","components/Header/Header.tsx","components/Login/Login.tsx","components/Necessity/NecessityCreateModal/NecessityCreateModal.tsx","components/Necessity/NecessityUpdateModal/NecessityUpdateModal.tsx","components/Necessity/NecessityItem/NecessityItem.tsx","components/Necessity/NecessityCounter/NecessityCounter.tsx","components/Necessity/NecessityList/NecessityList.tsx","components/Necessity/PlaceBox/PlaceBox.tsx","components/Necessity/NecessityTemplate/NecessityTemplate.tsx","components/SignUpModal/SignUpModal.tsx","components/StudyInfo/StudyInfo.tsx","components/LogList/LogList.tsx","containers/NecessityPage/NecessityPage.tsx","containers/StatisticsPage/StatisticsPage.tsx","containers/TimelinePage/TimelinePage.tsx","containers/WorkPage/WorkPage.tsx","containers/MainPage/MainPage.tsx","containers/IntroPage/IntroPage.tsx","containers/InfoPage/InfoPage.tsx","containers/HousePage/HousePage.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/necessity/necessity.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["userConstants","necessityConstants","userActions","email","username","password","dispatch","axios","post","then","res","user","data","type","target","catch","err","error","actionType","response","status","signupFailure","put","loginFailure","get","necessityActions","placeId","name","option","description","price","count","createResponse","place","createError","createNecessityPlaceFailure","houseId","getResponse","house","getError","getHouseFailure","necessityId","delete","removeResponse","window","alert","removeError","removeNecessityPlaceFailure","countResponse","necessity","countError","countNecessityPlaceFailure","updateResponse","updateError","updateNecessityPlaceFailure","userStatus","necessityStatus","necessityUserLogStatus","Header","this","props","onGetMe","whereToGo","whereToGoDisplay","logoutButton","getMeStatus","pathname","history","push","className","onClick","onLogout","logoutStatus","location","reload","helloUser","me","Component","connect","state","router","loginStatus","Login","onLogin","id","placeholder","onChange","e","setState","value","disabled","clickLoginHandler","NecessityCreateModal","onCreateNecessityPlace","createStatus","restoreModal","appearing","style","display","title","background","border","htmlFor","required","min","step","parseFloat","parseInt","NaN","NecessityUpdateModal","restoreUpdateModal","String","updateNecessityPlace","place_id","NecessityItemRemove","styled","div","NecessityItemBlock","Text","updateStatus","onRemoveNecessityPlace","onUpdateNecessityPlace","useState","showNecessityUpdateModal","setShowNecessityUpdateModal","NecessityItemCount","onCountNecessityPlace","key","onSubmit","NecessityList","necessities","length","map","CircleButton","button","places","showNecessityCreateModal","setShowNecessityCreateModal","NecessityTemplate","children","SignUpModal","signUp","signupStatus","StudyInfo","open","LogList","logs","necessityname","createdAt","Date","created_at","toLocaleString","action","activityCategory","GlobalStyle","createGlobalStyle","onGetHouse","dateString","toLocaleDateString","year","month","day","useEffect","StatisticsPage","TimelinePage","getLogStatus","logList","log","WorkPage","MainPage","activeTab","Number","match","params","body","backgroundColor","IntroPage","showSignUpModal","setShowSignUpModal","InfoPage","HousePage","houses","setHouses","nameToCreate","setNameToCreate","introductionToCreate","setIntroductionToCreate","source","CancelToken","cancelToken","token","cancel","goToTheRoom","url","showUserHouses","index","introduction","event","preventDefault","App","exact","path","component","hisory","to","Boolean","hostname","initialState","userReducer","getStatus","removeStatus","countStatus","PlaceResponseCases","NecessityResponseCases","necessityreducer","includes","newPlace","rootReducer","combineReducers","necessityReducer","connectRouter","createBrowserHistory","middlewares","store","next","console","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.88d0b680.chunk.js","sourcesContent":["export const userConstants = {\n  SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\n  SIGNUP_FAILURE: 'SIGNUP_FAILURE',\n  SIGNUP_FAILURE_USERNAME: 'SIGNUP_FAILURE_USERNAME',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGIN_FAILURE_USERNAME: 'LOGIN_FAILURE_USERNAME',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_FAILURE: 'LOGOUT_FAILURE',\n  GET_ME_SUCCESS: 'GET_ME_SUCCESS',\n  GET_ME_FAILURE: 'GET_ME_FAILURE',\n};\n\nexport const necessityConstants = {\n  CREATE_NECESSITYPLACE_SUCCESS: 'CREATE_NECESSITYPLACE_SUCCESS',\n  CREATE_NECESSITYPLACE_FAILURE: 'CREATE_NECESSITYPLACE_FAILURE',\n  CREATE_NECESSITYPLACE_FAILURE_NAME: 'CREATE_NECESSITYPLACE_FAILURE_NAME',\n  REMOVE_NECESSITYPLACE_SUCCESS: 'REMOVE_NECESSITYPLACE_SUCCESS',\n  REMOVE_NECESSITYPLACE_FAILURE: 'REMOVE_NECESSITYPLACE_FAILURE',\n  GET_HOUSE_SUCCESS: 'GET_HOUSE_SUCCESS',\n  GET_HOUSE_FAILURE: 'GET_HOUSE_FAILURE',\n  COUNT_NECESSITYPLACE_SUCCESS: 'COUNT_NECESSITYPLACE_SUCCESS',\n  COUNT_NECESSITYPLACE_FAILURE: 'COUNT_NECESSITYPLACE_FAILURE',\n  UPDATE_NECESSITYPLACE_SUCCESS: 'UPDATE_NECESSITYPLACE_SUCCESS',\n  UPDATE_NECESSITYPLACE_FAILURE: 'UPDATE_NECESSITYPLACE_FAILURE',\n};\n","import {\n  signUp,\n  login,\n  logout,\n  getMe,\n} from './user/user';\n\nimport {\n  createNecessityPlace,\n  getHouse,\n  removeNecessityPlace,\n  countNecessityPlace,\n  updateNecessityPlace,\n} from './necessity/necessity';\n\nexport const userActions = {\n  signUp,\n  login,\n  logout,\n  getMe,\n};\n\nexport const necessityActions = {\n  createNecessityPlace,\n  getHouse,\n  removeNecessityPlace,\n  countNecessityPlace,\n  updateNecessityPlace,\n};\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport { userConstants } from '../actionTypes';\nimport { User } from '../../../api';\n\nconst signupSuccess = (user: User) => ({\n  type: userConstants.SIGNUP_SUCCESS,\n  target: user,\n});\n\nconst signupFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    case 409:\n      actionType = userConstants.SIGNUP_FAILURE_USERNAME;\n      break;\n    default:\n      actionType = userConstants.SIGNUP_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const signUp = (\n  email: string, username: string, password: string,\n) => (dispatch: Dispatch) => axios.post('/api/v1/user/', { email, username, password })\n  .then((res: AxiosResponse<User>) => dispatch(signupSuccess(res.data)))\n  .catch((err) => dispatch(signupFailure(err)));\n\nconst loginSuccess = (user: User) => ({\n  type: userConstants.LOGIN_SUCCESS,\n  target: user,\n});\n\nconst loginFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = userConstants.LOGIN_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const login = (\n  username: string, password: string,\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\n  .then((res: AxiosResponse<User>) => dispatch(loginSuccess(res.data)))\n  .catch((err) => dispatch(loginFailure(err)));\n\nconst logoutSuccess = () => ({\n  type: userConstants.LOGOUT_SUCCESS,\n  target: null,\n});\n\nconst logoutFailure = (error: AxiosError) => ({\n  type: userConstants.LOGOUT_FAILURE,\n  target: error,\n});\n\nexport const logout = () => (dispatch: Dispatch) => axios.get('/api/v1/user/logout/')\n  .then(() => dispatch(logoutSuccess()))\n  .catch((err) => dispatch(logoutFailure(err)));\n\nconst getMeSuccess = (user: User) => ({\n  type: userConstants.GET_ME_SUCCESS,\n  target: user,\n});\n\nconst getMeFailure = (error: AxiosError) => ({\n  type: userConstants.GET_ME_FAILURE,\n  target: error,\n});\n\nexport const getMe = () => (dispatch: Dispatch) => axios.get('/api/v1/user/me/')\n  .then((res: AxiosResponse<User>) => dispatch(getMeSuccess(res.data)))\n  .catch((err) => dispatch(getMeFailure(err)));\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport { necessityConstants } from '../actionTypes';\nimport { House, Necessity, Place } from '../../../api';\n\nconst getHouseSuccess = (house: House) => ({\n  type: necessityConstants.GET_HOUSE_SUCCESS,\n  target: house,\n});\n\nconst getHouseFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.GET_HOUSE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const getHouse = (houseId: number) => (dispatch: Dispatch) => axios.get(`/api/v1/house/${houseId}/`)\n  .then((getResponse: AxiosResponse<House>) => {\n    dispatch(getHouseSuccess(getResponse.data));\n  })\n  .catch((getError) => dispatch(getHouseFailure(getError)));\n\nconst createNecessityPlaceSuccess = (place: Place) => ({\n  type: necessityConstants.CREATE_NECESSITYPLACE_SUCCESS,\n  target: place,\n});\n\nconst createNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    case 409:\n      actionType = necessityConstants.CREATE_NECESSITYPLACE_FAILURE_NAME;\n      break;\n    default:\n      actionType = necessityConstants.CREATE_NECESSITYPLACE_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const createNecessityPlace = (\n  placeId: number, name: string, option: string, description: string, price: number, count: number,\n) => (dispatch: Dispatch) => axios.post(`/api/v1/place/${placeId}/necessity/`, {\n  placeId, name, option, description, price, count,\n})\n  .then((createResponse: AxiosResponse<Place>) => {\n    dispatch(createNecessityPlaceSuccess(createResponse.data));\n  })\n  .catch((createError) => dispatch(createNecessityPlaceFailure(createError)));\n\nconst countNecessityPlaceSuccess = (necessity: Necessity) => ({\n  type: necessityConstants.COUNT_NECESSITYPLACE_SUCCESS,\n  target: necessity,\n});\n\nconst countNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.COUNT_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const countNecessityPlace = (\n  placeId: number, necessityId: number, count: number,\n) => (dispatch: Dispatch) => axios.put(`/api/v1/place/${placeId}/necessity/${necessityId}/count/`, { count })\n  .then((countResponse: AxiosResponse<Necessity>) => {\n    dispatch(countNecessityPlaceSuccess(countResponse.data));\n  })\n  .catch((countError) => dispatch(countNecessityPlaceFailure(countError)));\n\nconst updateNecessityPlaceSuccess = (necessity: Necessity) => ({\n  type: necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS,\n  target: necessity,\n});\n\nconst updateNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  window.alert('수정 내역을 다시 확인해주세요.');\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.UPDATE_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const updateNecessityPlace = (\n  placeId: number, necessityId: number, description: string, price?: number,\n) => (dispatch: Dispatch) => axios.put(`/api/v1/place/${placeId}/necessity/${necessityId}/`, { description, price })\n  .then((updateResponse: AxiosResponse<Necessity>) => {\n    dispatch(updateNecessityPlaceSuccess(updateResponse.data));\n  })\n  .catch((updateError) => dispatch(updateNecessityPlaceFailure(updateError)));\n\nconst removeNecessityPlaceSuccess = (place: Place) => {\n  window.alert('삭제되었습니다!');\n  return {\n    type: necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS,\n    target: place,\n  };\n};\n\nconst removeNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      window.alert('실패!');\n      actionType = necessityConstants.REMOVE_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const removeNecessityPlace = (\n  placeId: number, necessityId: number,\n) => (dispatch: Dispatch) => axios.delete(`/api/v1/place/${placeId}/necessity/${necessityId}/`)\n  .then((removeResponse: AxiosResponse<Place>) => {\n    dispatch(removeNecessityPlaceSuccess(removeResponse.data));\n  })\n  .catch((removeError) => dispatch(removeNecessityPlaceFailure(removeError)));\n","export const userStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_USERNAME: 'FAILURE_USERNAME',\n};\n\nexport const necessityStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_NAME: 'FAILURE_NAME',\n};\n\nexport const necessityUserLogStatus = {\n  NONE: 'NONE',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n};\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\n\nimport { userActions } from '../../store/actions';\nimport { userStatus } from '../../constants/constants';\nimport './Header.css';\nimport { User } from '../../api';\n\ninterface Props {\n  history: History;\n  pathname: string;\n  loginStatus: string;\n  logoutStatus: string;\n  getMeStatus: string;\n  me: User;\n  onGetMe: () => any;\n  onLogout: () => any;\n}\n\nclass Header extends Component<Props> {\n  componentDidMount() {\n    this.props.onGetMe();\n  }\n\n  render() {\n    let whereToGo = '/info';\n    let whereToGoDisplay = '오렌지농장 소개';\n    let logoutButton = null;\n\n    // if not logged-in, userStatus would be FAILURE\n    if (this.props.getMeStatus === userStatus.FAILURE) {\n      if (this.props.pathname === '/info') {\n        // anonymous user can access InfoPage\n        whereToGo = '/intro';\n        whereToGoDisplay = '로그인';\n      } else {\n        // force anonymous user to redirect to IntroPage\n        this.props.history.push('/intro');\n      }\n    } else {\n      // if logged-in, there should be logout button\n      logoutButton = (\n        <li className=\"main-header-li\">\n          <button\n            className=\"logout-button\"\n            type=\"button\"\n            onClick={() => this.props.onLogout()\n              .then(() => {\n                if (this.props.logoutStatus === userStatus.SUCCESS) {\n                  this.props.history.push('/intro');\n                  window.location.reload();\n                }\n              })}\n          >\n            로그아웃\n          </button>\n        </li>\n      );\n      if (this.props.pathname === '/intro') {\n      // force logged-in user to redirect to MainPage\n        this.props.history.push('/');\n      } else if (this.props.pathname !== '/') {\n        whereToGo = '/';\n        whereToGoDisplay = '메인 페이지';\n      }\n    }\n\n    let helloUser = null;\n    if (this.props.pathname !== '/intro' && this.props.pathname !== '/info') {\n      helloUser = (\n        <li className=\"main-header-li main-header-li-hello\">\n          {this.props.me.username}\n          님 안녕하세요!&nbsp;&nbsp;\n        </li>\n      );\n    }\n\n    return (\n      <ul className=\"main-header\">\n        {helloUser}\n        <li className=\"main-header-li\">\n          <button\n            className=\"header-page-button\"\n            type=\"button\"\n            onClick={() => this.props.history.push(whereToGo)}\n          >\n            {whereToGoDisplay}\n          </button>\n        </li>\n        {logoutButton}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  pathname: state.router.location.pathname,\n  getMeStatus: state.user.getMeStatus,\n  loginStatus: state.user.loginStatus,\n  logoutStatus: state.user.logoutStatus,\n  me: state.user.me,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onGetMe: () => dispatch(userActions.getMe()),\n  onLogout: () => dispatch(userActions.logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\n\nimport { userStatus } from '../../constants/constants';\nimport { userActions } from '../../store/actions';\nimport './Login.css';\nimport { OrangeGlobalState } from '../../store/state';\n\ninterface Props {\n  history: History;\n  loginStatus: string;\n  onLogin: (username: string, password: string) => any;\n}\n\ninterface State {\n  username: string;\n  password: string;\n}\n\nclass Login extends Component<Props, State> {\n  // NOTE: this Login Component is just for example about api call.\n  //       it can be changed completely differently.\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  clickLoginHandler() {\n    this.props.onLogin(this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.loginStatus === userStatus.SUCCESS) {\n          this.props.history.push('/');\n          window.location.reload();\n        } else {\n          alert('로그인에 실패하였습니다. \\n이름과 비밀번호를 확인해 주세요!');\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Login</h1>\n        <div className=\"LoginField\">\n          <input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"username\"\n            onChange={(e) => this.setState({ username: e.target.value })}\n          />\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => this.setState({ password: e.target.value })}\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"LoginButton\"\n          disabled={!this.state.username || !this.state.password}\n          onClick={() => this.clickLoginHandler()}\n        >\n          go\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  loginStatus: state.user.loginStatus,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onLogin: (username: string, password: string) => dispatch(userActions.login(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component, Dispatch } from 'react';\nimport { History } from 'history';\nimport { connect } from 'react-redux';\n\nimport { necessityActions } from '../../../store/actions';\nimport { necessityStatus } from '../../../constants/constants';\nimport './NecessityCreateModal.css';\nimport { User } from '../../../api';\nimport { OrangeGlobalState } from '../../../store/state';\n\ninterface Props {\n  history: History;\n  onCreateNecessityPlace: (\n    placeId: number,\n    name: string,\n    option: string,\n    description: string,\n    price: number,\n    count: number,\n  ) => any;\n  me: User ;\n  createStatus: string;\n  restoreModal: any;\n  placeId: number;\n}\n\ninterface State {\n  appearing: boolean; // for modal appearing\n  name: string;\n  option: string;\n  description: string;\n  price: number;\n  count: number;\n}\n\nclass NecessityCreateModal extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      appearing: true,\n      name: '',\n      option: '',\n      description: '',\n      price: 0,\n      count: 1,\n    };\n  }\n\n  onCreateNecessityPlace = (): void => {\n    this.props.onCreateNecessityPlace(\n      this.props.placeId,\n      this.state.name,\n      this.state.option,\n      this.state.description,\n      this.state.price,\n      this.state.count,\n    )\n      .then(() => {\n        if (this.props.createStatus === necessityStatus.SUCCESS) {\n          window.alert('입력 완료!');\n          this.props.restoreModal();\n        } else if (this.props.createStatus === necessityStatus.FAILURE_NAME) {\n          window.alert('이미 존재하는 생필품입니다.');\n        } else {\n          window.alert('실패!');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"necessity-create-modal\"\n        style={this.state.appearing ? { display: 'block' } : { display: 'none' }}\n      >\n        <form>\n          <button\n            className=\"necessity-create-close\"\n            onClick={() => this.props.restoreModal}\n            type=\"submit\"\n            title=\"Close Modal\"\n            style={{ background: 'none', border: 'none' }}\n          >\n            &times;\n          </button>\n        </form>\n\n        <form className=\"necessity-create-modal-content\">\n          <div className=\"necessity-create-container\">\n            <p>생필품 정보를 입력해주세요.</p>\n            <hr />\n            <label htmlFor=\"name\">\n              <b>생필품 (Necessity)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"오렌지\"\n              required\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n\n            <label htmlFor=\"count\">\n              <b>개수 (Count)</b>\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"1\"\n              placeholder=\"1\"\n              required\n            />\n\n            <label htmlFor=\"option\">\n              <b>옵션 (Option)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"발렌시아 품종\"\n              required\n              onChange={(e) => this.setState({ option: e.target.value })}\n            />\n\n            <label htmlFor=\"description\">\n              <b>설명 (Description)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"식후 비타민 C 섭취용\"\n              required\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n\n            <label htmlFor=\"price\">\n              <b>가격 (Price)</b>\n            </label>\n            <input\n              type=\"number\"\n              placeholder=\"2900\"\n              required\n              onChange={(e) => this.setState({\n                price: (parseFloat(e.target.value) === parseInt(e.target.value, 10))\n                  ? parseFloat(e.target.value) : NaN,\n              })}\n            />\n\n            <div className=\"necessity-create-clearfix\">\n              <button\n                type=\"button\"\n                className=\"necessity-create-createbtn\"\n                disabled={this.state.name === ''}\n                onClick={this.onCreateNecessityPlace}\n              >\n                생필품 등록\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onCreateNecessityPlace: (\n    placeId: number, name: string, option: string,\n    description: string, price: number, count: number,\n  ): void => dispatch(\n    necessityActions.createNecessityPlace(placeId, name, option, description, price, count),\n  ),\n});\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  createStatus: state.necessity.createStatus,\n  me: state.user.me,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityCreateModal);\n","import React, { Component } from 'react';\nimport { Necessity } from '../../../api';\n\nimport './NecessityUpdateModal.css';\n\ninterface Props {\n  necessity: Necessity;\n  updateNecessityPlace: (\n    placeId: number,\n    necessityId: number,\n    description: string,\n    price?: number) => any;\n  restoreUpdateModal: () => void;\n}\n\ninterface State {\n  description: string;\n  price?: number;\n}\n\nclass NecessityUpdateModal extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: props.necessity.description,\n      price: props.necessity.price,\n    };\n  }\n\n  render() {\n    const update = () => {\n      this.props.updateNecessityPlace(\n        this.props.necessity.place_id,\n        this.props.necessity.id,\n        this.state.description,\n        this.state.price,\n      );\n    };\n    return (\n      <div\n        className=\"necessity-update-modal\"\n        style={{ display: 'block' }}\n      >\n        <form>\n          <button\n            className=\"necessity-update-close\"\n            type=\"submit\"\n            title=\"Close Modal\"\n            style={{ background: 'none', border: 'none' }}\n            onClick={() => this.props.restoreUpdateModal}\n          >\n            &times;\n          </button>\n        </form>\n\n        <form className=\"necessity-update-modal-content\">\n          <div className=\"necessity-update-container\">\n            <p>\n              {this.props.necessity.name}\n              의 설명 또는 가격을 수정해주세요.\n            </p>\n            <hr />\n\n            <label htmlFor=\"name\">\n              <b>생필품 (Necessity)</b>\n            </label>\n            <input\n              type=\"text\"\n              value={this.props.necessity.name}\n              disabled\n            />\n\n            <label htmlFor=\"option\">\n              <b>옵션 (Option)</b>\n            </label>\n            <input\n              type=\"text\"\n              value={this.props.necessity.option}\n              disabled\n            />\n\n            <label htmlFor=\"description\">\n              <b>설명 (Description)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder={this.props.necessity.description}\n              required\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n\n            <label htmlFor=\"price\">\n              <b>가격 (Price)</b>\n            </label>\n            <input\n              type=\"number\"\n              placeholder={String(this.props.necessity.price)}\n              required\n              onChange={(e) => this.setState({\n                price: (parseFloat(e.target.value) === parseInt(e.target.value, 10))\n                  ? parseFloat(e.target.value) : NaN,\n              })}\n            />\n\n            <div className=\"necessity-update-clearfix\">\n              <button\n                type=\"button\"\n                className=\"necessity-update-createbtn\"\n                onClick={update}\n              >\n                생필품 수정\n              </button>\n            </div>\n          </div>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default NecessityUpdateModal;\n","import React, { Dispatch, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { MdDelete } from 'react-icons/md';\nimport { necessityActions } from '../../../store/actions';\nimport NecessityUpdateModal from '../NecessityUpdateModal/NecessityUpdateModal';\nimport { Necessity } from '../../../api';\nimport { OrangeGlobalState } from '../../../store/state';\n\nconst NecessityItemRemove = styled.div`\n    display: none;\n    align-items: center;\n    justify-content: center;\n    color: #F1948A;\n    font-size: 20px;\n    float: right;\n    cursor: pointer;\n    &:hover {\n        color: #B03A2E;\n    }\n`;\n\nconst NecessityItemBlock = styled.div`\n    display: inline-flex;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    &:hover {\n        ${NecessityItemRemove}{\n            display: inline-flex;\n            float: right;\n        }\n    }\n`;\n\nconst Text = styled.div`\n    flex: 1;\n    font-size: 21px;\n    color: #495057;\n    .option {\n      color: #868e96;\n      font-size: 12px;\n    }\n}\n`;\n\ninterface Props {\n  necessity: Necessity;\n  onRemoveNecessityPlace(placeId: number, necessityId: number): any;\n  onUpdateNecessityPlace: (\n    placeId: number,\n    necessityId: number,\n    description: string,\n    price?: number) => any;\n  updateStatus?: string;\n}\n\nfunction NecessityItem(props: Props) {\n  const [showNecessityUpdateModal, setShowNecessityUpdateModal] = useState(false);\n  const showUpdateModal = (): void => setShowNecessityUpdateModal(true);\n  const restoreUpdateModal = () => {\n    setShowNecessityUpdateModal(false);\n  };\n\n  const updateNecessityPlace = (placeId: number,\n    necessityId: number,\n    description: string,\n    price?: number) => {\n    props.onUpdateNecessityPlace(placeId, necessityId, description, price)\n      .then(() => {\n        restoreUpdateModal();\n      });\n  };\n\n  return (\n    <NecessityItemBlock id={`necessity-item-${props.necessity.id}`}>\n      <div onClick={showUpdateModal}>\n        {showNecessityUpdateModal ? (\n          <NecessityUpdateModal\n            necessity={props.necessity}\n            restoreUpdateModal={restoreUpdateModal}\n            updateNecessityPlace={updateNecessityPlace}\n          />\n        ) : null}\n\n        <Text>\n          {`${props.necessity.name}`}\n          <span className=\"option\">\n            <br />\n            {` ${props.necessity.count}개 / ${props.necessity.price}원 / ${props.necessity.option} `}\n          </span>\n        </Text>\n      </div>\n\n      <NecessityItemRemove\n        onClick={() => {\n          props.onRemoveNecessityPlace(props.necessity.place_id, props.necessity.id);\n        }}\n      >\n        <MdDelete />\n      </NecessityItemRemove>\n    </NecessityItemBlock>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onRemoveNecessityPlace: (placeId: number, necessityId: number): void => dispatch(\n    necessityActions.removeNecessityPlace(placeId, necessityId),\n  ),\n  onUpdateNecessityPlace: (\n    placeId: number, necessityId: number, description: string, price?: number,\n  ): void => dispatch(\n    necessityActions.updateNecessityPlace(placeId, necessityId, description, price),\n  ),\n});\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  updateStatus: state.necessity.updateStatus,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityItem);\n","import React, { Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { necessityActions } from '../../../store/actions';\n\nconst NecessityItemCount = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #ffa500;\n    font-size: 20px;\n    cursor: text\n    &:hover {\n        color: #B03A2E;\n    }\n`;\n\nconst NecessityItemBlock = styled.div`\n    display: flex;\n    align-items: center;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    &:hover {\n        ${NecessityItemCount}{\n            display: initial;\n        }\n    }\n`;\n\ninterface Props {\n  key: number;\n  placeId: number;\n  necessityId: number;\n  count: number;\n  onCountNecessityPlace(placeId: number, necessityId: number, count: number): any;\n}\n\nfunction NecessityCounter(props: Props) {\n  return (\n    <NecessityItemBlock key={props.key}>\n      <div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              props.onCountNecessityPlace(props.placeId, props.necessityId, props.count + 1);\n            }}\n          >\n            +\n          </button>\n        </div>\n\n        <div>\n          <NecessityItemCount\n            onSubmit={() => props.onCountNecessityPlace(\n              props.placeId, props.necessityId, props.count,\n            )}\n          >\n            {props.count}\n          </NecessityItemCount>\n        </div>\n\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              props.onCountNecessityPlace(props.placeId, props.necessityId, props.count - 1);\n            }}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    </NecessityItemBlock>\n\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onCountNecessityPlace: (placeId: number, necessityId: number, count: number): void => dispatch(\n    necessityActions.countNecessityPlace(placeId, necessityId, count),\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(NecessityCounter);\n","import React from 'react';\nimport './NecessityList.css';\nimport { Necessity } from '../../../api';\nimport NecessityItem from '../NecessityItem/NecessityItem';\nimport NecessityCounter from '../NecessityCounter/NecessityCounter';\n\ninterface Props {\n  necessities: Necessity[];\n}\n\nfunction NecessityList(props: Props) {\n  return (\n    <>\n      { props.necessities?.length ? props.necessities.map((necessity) => (\n        <div\n          className=\"necessity-list-block\"\n          key={necessity.id}\n        >\n          <div className=\"necessity-item-block\">\n            <NecessityItem\n              necessity={necessity}\n            />\n          </div>\n          <div>\n            <NecessityCounter\n              key={necessity.id}\n              placeId={necessity.place_id}\n              necessityId={necessity.id}\n              count={necessity.count}\n            />\n          </div>\n        </div>\n      )) : (\n        <h2>\n          첫 생필품을 추가해보세요!\n        </h2>\n      )}\n    </>\n  );\n}\n\nexport default NecessityList;\n","import React, { useState } from 'react';\nimport { History } from 'history';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { Necessity, Place } from '../../../api';\nimport { OrangeGlobalState } from '../../../store/state';\nimport NecessityList from '../NecessityList/NecessityList';\nimport './PlaceBox.css';\nimport NecessityCreateModal from '../NecessityCreateModal/NecessityCreateModal';\n\nconst CircleButton = styled.button`\n    background: lightgray;\n    transition: 0.3s;\n    &:hover {\n        background: gray;\n    }\n    &:active {\n        opacity: 0.2;\n        background: gray;\n    }\n    \n    z-index: 0;\n    cursor: pointer;\n    width: 160px;\n    height: 137.69px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 60px;\n    position : static;\n    left: 10%;\n    bottom: 20px;\n    color: white;\n    border-radius: 10%;\n    border: none;\n    outline: none;\n`;\n\ninterface Props {\n  history: History;\n  places: Place[];\n}\n\nfunction PlaceBox(props: Props) {\n  let name = '';\n  let necessities: Necessity[] = [];\n  let placeId = 0;\n\n  // FIXME: 하나의 house 내 여러 개의 place를 보여주는 것은 구현이 안 되어있고, 항상 첫 번째 place를 보여줌\n  if (props.places.length) {\n    name = props.places[0].name;\n    necessities = props.places[0].necessities;\n    placeId = props.places[0].id;\n  }\n\n  const [showNecessityCreateModal, setShowNecessityCreateModal] = useState(false);\n  const showModal = (): void => setShowNecessityCreateModal(true);\n\n  const restoreModal = () => {\n    setShowNecessityCreateModal(false);\n  };\n\n  return (\n    <div\n      className=\"PlaceBox\"\n    >\n      <h1>{name}</h1>\n      <NecessityList necessities={necessities} />\n      <div className=\"necessity-list-column\">\n        <CircleButton onClick={showModal}>\n          <MdAdd />\n        </CircleButton>\n        {showNecessityCreateModal ? (\n          <NecessityCreateModal\n            history={props.history}\n            restoreModal={restoreModal}\n            placeId={placeId}\n          />\n        ) : null}\n      </div>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  places: state.necessity.places,\n});\n\nexport default connect(mapStateToProps)(PlaceBox);\n","import React from 'react';\nimport './NecessityTemplate.css';\n\ninterface Props {\n  children: any;\n}\n\nfunction NecessityTemplate({ children }: Props) {\n  return (\n    <div\n      className=\"necessity-template-block\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default NecessityTemplate;\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\nimport { userActions } from '../../store/actions';\nimport { userStatus } from '../../constants/constants';\nimport './SignUpModal.css';\nimport { User } from '../../api';\nimport { OrangeGlobalState } from '../../store/state';\n\ninterface Props {\n  history?: History;\n  signUp: (email: string, username: string, password: string) => any; // for redux dispatch\n  me: User;\n  signupStatus: string;\n}\n\ninterface State {\n  appearing: boolean; // for modal appearing\n  email: string;\n  username: string;\n  password: string;\n}\n\nclass SignUpModal extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      appearing: true,\n      email: '',\n      username: '',\n      password: '',\n    };\n  }\n\n  signUp = () => {\n    this.props.signUp(this.state.email, this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.signupStatus === userStatus.SUCCESS) {\n          window.alert('성공!');\n          this.setState({ appearing: false });\n          this.props.history?.push('/');\n        } else if (this.props.signupStatus === userStatus.FAILURE_USERNAME) {\n          window.alert('중복된 사용자 이름!');\n        } else {\n          window.alert('실패!');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal\"\n        style={this.state.appearing ? { display: 'block' } : { display: 'none' }}\n      >\n        <form>\n          <button\n            type=\"submit\"\n            className=\"close\"\n            title=\"Close Modal\"\n            style={{ background: 'none', border: 'none' }}\n          >\n            &times;\n          </button>\n        </form>\n        <form className=\"modal-content\">\n          <div className=\"container\">\n            <p>오렌지 농장을 이용하기 전에 회원가입을 해주세요</p>\n            <hr />\n            <label htmlFor=\"email\">\n              <b>이메일 (Email)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"haksaeng@snu.ac.kr\"\n              required\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n\n            <label htmlFor=\"email\">\n              <b>이름 (Name)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Jinsup\"\n              required\n              onChange={(e) => this.setState({ username: e.target.value })}\n            />\n\n            <label htmlFor=\"psw\">\n              <b>비밀번호 (Password)</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              required\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n\n            {/* <label htmlFor=\"psw-repeat\">\n              <b>비밀번호 확인 (Repeat Password)</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Repeat Password\"\n              name=\"psw-repeat\"\n              required\n            /> */}\n\n            <div className=\"clearfix\">\n              <button\n                type=\"button\"\n                className=\"signupbtn\"\n                disabled={this.state.email === '' || this.state.password === '' || this.state.username === ''}\n                onClick={this.signUp}\n              >\n                회원가입\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  signUp: (email: string, username: string, password: string) => dispatch(\n    userActions.signUp(email, username, password),\n  ),\n});\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  signupStatus: state.user.signupStatus,\n  me: state.user.me,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpModal);\n","import React from 'react';\n\nimport './StudyInfo.css';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nfunction StudyInfo() {\n  return (\n    <div className=\"study-info\">\n      <section>\n        <h2 className=\"deep-orange\">스터디 멤버</h2>\n        <ul>\n          <strong>웹 개발 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/davin111')}\n            >\n              {' '}\n              다빈\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/YeonghyeonKO')}\n            >\n              {' '}\n              영현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/JSKeum')}\n            >\n              {' '}\n              진섭\n            </a>\n          </li>\n          <br />\n          <strong>세미나 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/anneKwon')}\n            >\n              {' '}\n              민재\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/palpitate2015')}\n            >\n              {' '}\n              상현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/Eunsung-k')}\n            >\n              {' '}\n              은성\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/jadeyyun')}\n            >\n              {' '}\n              재연\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">GitHub</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/gongmyeong-study')}\n            >\n              GitHub 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">Slack</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://gongmyeongstudy.slack.com')}\n            >\n              Slack 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default StudyInfo;\n","import React from 'react';\nimport { NecessityLog } from '../../api';\n\ninterface Props {\n  logs: NecessityLog;\n}\n\nfunction LogList(props: Props) {\n  const { username } = props.logs.user;\n  const necessityname = props.logs.necessity?.name;\n  const createdAt = (new Date(props.logs.created_at)).toLocaleString();\n\n  const activityCategory = () => {\n    switch (props.logs.action) {\n      case 'CREATE':\n        return '을(를) 생필품 목록에 추가했습니다.';\n      case 'UPDATE':\n        return '을(를) 수정했습니다.';\n      case 'DELETE':\n        return '을(를) 생필품 목록에서 삭제했습니다.';\n      case 'COUNT':\n        return '의 수량을 변경했습니다.';\n      default:\n        return '을(를) 수정했습니다.';\n    }\n  };\n\n  return (\n    <div className=\"logList\">\n      <p>\n        {username}\n        {' '}\n        이(가)\n        {' '}\n        &apos;\n        {necessityname}\n        &apos;\n        {activityCategory()}\n        {' '}\n        (\n        {createdAt}\n        )\n      </p>\n    </div>\n  );\n}\n\nexport default LogList;\n","import React, { Dispatch, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\nimport { NecessityTemplate, PlaceBox } from '../../components';\nimport { necessityActions } from '../../store/actions';\nimport { Place } from '../../api';\nimport { OrangeGlobalState } from '../../store/state';\nimport './NecessityPage.css';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        background: #e9ecef;\n    }\n`;\n\ninterface Props {\n  history: History;\n  onGetHouse(houseId: number): void;\n  places: Place[];\n  houseId: number;\n}\n\nfunction NecessityPage(props: Props) {\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const fetchHouse = () => {\n    props.onGetHouse(props.houseId);\n  };\n\n  useEffect(() => {\n    fetchHouse();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <span>\n        <h1 className=\"NecessityPageBlock\">{dateString}</h1>\n      </span>\n\n      <GlobalStyle />\n      <NecessityTemplate>\n        <PlaceBox history={props.history} />\n      </NecessityTemplate>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: OrangeGlobalState) => ({\n  places: state.necessity.places,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onGetHouse: (houseId: number) => dispatch(\n    necessityActions.getHouse(houseId),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityPage);\n","import React, { Component } from 'react';\n\nclass StatisticsPage extends Component {\n  render() {\n    return (\n      <div className=\"statistics-page\">\n        통계 페이지\n      </div>\n    );\n  }\n}\n\nexport default StatisticsPage;\n","import React, { Component } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { History } from 'history';\n\nimport { LogList } from '../../components';\nimport { necessityUserLogStatus } from '../../constants/constants';\nimport { NecessityLog } from '../../api';\n\ninterface Props {\n  history: History;\n  houseId: number;\n}\n\ninterface State {\n  logs: Array<NecessityLog>;\n  getLogStatus: string;\n}\n\nclass TimelinePage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logs: [],\n      getLogStatus: necessityUserLogStatus.NONE,\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`/api/v1/house/${this.props.houseId}/necessity_log/`)\n      .then((res: AxiosResponse<[NecessityLog]>) => {\n        if (res.status === 200) {\n          this.setState({ logs: res.data, getLogStatus: necessityUserLogStatus.SUCCESS });\n        }\n      });\n  }\n\n  render() {\n    const { logs, getLogStatus } = this.state;\n    const logList = logs.map((log) => <LogList key={log.id} logs={log} />);\n\n    return (\n      <div className=\"timeline-page\">\n        타임라인 페이지\n        {getLogStatus === necessityUserLogStatus.SUCCESS ? logList : null}\n      </div>\n    );\n  }\n}\n\nexport default TimelinePage;\n","import React, { Component } from 'react';\n\nclass WorkPage extends Component {\n  render() {\n    return (\n      <div className=\"work-page\">\n        가사노동 관리 페이지\n      </div>\n    );\n  }\n}\n\nexport default WorkPage;\n","import React, { Component } from 'react';\nimport { History } from 'history';\nimport { match } from 'react-router-dom';\n\nimport NecessityPage from '../NecessityPage/NecessityPage';\nimport StatisticsPage from '../StatisticsPage/StatisticsPage';\nimport TimelinePage from '../TimelinePage/TimelinePage';\nimport WorkPage from '../WorkPage/WorkPage';\nimport './MainPage.css';\n\ninterface DetailParams {\n  id: string;\n}\n\ninterface Props {\n  history: History;\n  match: match<DetailParams>;\n}\n\ninterface State {\n  activeTab: number;\n}\n\nclass MainPage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTab: 0,\n    };\n  }\n\n  render() {\n    const houseId = Number(this.props.match.params.id);\n\n    let body = null;\n    switch (this.state.activeTab) {\n      case 1:\n        body = <WorkPage />;\n        break;\n      case 2:\n        body = <TimelinePage history={this.props.history} houseId={houseId} />;\n        break;\n      case 3:\n        body = <StatisticsPage />;\n        break;\n      default:\n        body = <NecessityPage history={this.props.history} houseId={houseId} />;\n    }\n\n    return (\n      <div className=\"main-page\">\n        <div\n          className=\"main-tabs\"\n        >\n          <div\n            className=\"main-tab\"\n            id=\"necessity-tab\"\n            onClick={() => this.setState({ activeTab: 0 })}\n            style={this.state.activeTab === 0 ? { backgroundColor: 'orange' } : {}}\n          >\n            생필품 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"work-tab\"\n            onClick={() => this.setState({ activeTab: 1 })}\n            style={this.state.activeTab === 1 ? { backgroundColor: 'orange' } : {}}\n          >\n            가사노동 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"timeline-tab\"\n            onClick={() => this.setState({ activeTab: 2 })}\n            style={this.state.activeTab === 2 ? { backgroundColor: 'orange' } : {}}\n          >\n            타임라인\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"statistics-tab\"\n            onClick={() => this.setState({ activeTab: 3 })}\n            style={this.state.activeTab === 3 ? { backgroundColor: 'orange' } : {}}\n          >\n            통계\n          </div>\n        </div>\n        {body}\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { useState } from 'react';\nimport { History } from 'history';\n\nimport { Login, SignUpModal } from '../../components/index';\n\ninterface Props {\n  history: History;\n}\n\nfunction IntroPage(props: Props) {\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const showModal = () => setShowSignUpModal(true);\n  return (\n    <div>\n      <Login history={props.history} />\n      <button\n        onClick={showModal}\n        type=\"button\"\n      >\n        회원가입\n        {' '}\n      </button>\n      {showSignUpModal ? <SignUpModal history={props.history} /> : null}\n    </div>\n  );\n}\n\nexport default IntroPage;\n","import React, { Component } from 'react';\n\nimport { StudyInfo } from '../../components';\nimport './InfoPage.css';\n\nclass InfoPage extends Component {\n  render() {\n    return (\n      <div className=\"info-ui\">\n        <main>\n          <StudyInfo />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default InfoPage;\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { History } from 'history';\nimport { House } from '../../api';\n\ninterface Props {\n  history: History;\n}\n\nfunction HousePage(props: Props) {\n  const [houses, setHouses] = useState<[House]>();\n  const [nameToCreate, setNameToCreate] = useState('');\n  const [introductionToCreate, setIntroductionToCreate] = useState('');\n\n  useEffect(() => {\n    const { CancelToken } = axios;\n    const source = CancelToken.source();\n\n    axios.get('/api/v1/house/', { cancelToken: source.token })\n      .then((res) => setHouses(res.data));\n\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  const goToTheRoom = (houseId: number) => {\n    const url = `/main/${houseId}`;\n    props.history.push(url);\n  };\n\n  const createHouse = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    axios.post('/api/v1/house/', { name: nameToCreate, introduction: introductionToCreate })\n      .then((res) => {\n        const { data } = res;\n        goToTheRoom(data.id);\n      });\n  };\n\n  const showUserHouses = houses?.map((house, index) => (\n    <div key={index}>\n      <h1>\n        {house.name}\n      </h1>\n      <h2>\n        {house.introduction}\n      </h2>\n      <button\n        type=\"button\"\n        onClick={() => goToTheRoom(house.id)}\n      >\n        들어가기\n      </button>\n      <hr />\n    </div>\n  ));\n\n  return (\n    <main>\n      <section>\n        <form onSubmit={createHouse}>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              onChange={(e) => setNameToCreate(e.target.value)}\n              placeholder=\"예쁜 우리집\"\n            />\n          </label>\n          <label>\n            Introduction:\n            <input\n              type=\"text\"\n              onChange={(e) => setIntroductionToCreate(e.target.value)}\n              placeholder=\"친구들과 함께 사는 공간\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </section>\n      <section>\n        {showUserHouses}\n      </section>\n    </main>\n  );\n}\n\nexport default HousePage;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { History } from 'history';\n\nimport { Header } from './components';\nimport {\n  MainPage, IntroPage, InfoPage, HousePage,\n} from './containers';\nimport './App.css';\n\ninterface Props {\n  history: History;\n}\n\nfunction App(props: Props): JSX.Element {\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={props.history}>\n        <Header history={props.history} />\n        <Switch>\n          <Route exact path=\"/\" component={HousePage} hisory={props.history} />\n          <Route exact path=\"/main/:id\" component={MainPage} history={props.history} />\n          <Route exact path=\"/intro\" component={IntroPage} history={props.history} />\n          <Route exact path=\"/info\" component={InfoPage} />\n          <Route exact path=\"/house\" component={HousePage} history={props.history} />\n          <Redirect exact to=\"/intro\" />\n        </Switch>\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userConstants } from '../../actions/actionTypes';\nimport { userStatus } from '../../../constants/constants';\nimport { User } from '../../../api';\nimport { UserState } from '../../state';\n\ntype Action = {\n  type: string;\n  target: User;\n};\n\nconst initialState: UserState = {\n  me: {} as User,\n  signupStatus: userStatus.NONE,\n  loginStatus: userStatus.NONE,\n  logoutStatus: userStatus.NONE,\n  getMeStatus: userStatus.NONE,\n};\n\nconst userReducer = (state = initialState, action: Action): UserState => {\n  const data = action.target;\n  switch (action.type) {\n    case userConstants.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupStatus: userStatus.SUCCESS,\n        me: data,\n      };\n    case userConstants.SIGNUP_FAILURE_USERNAME:\n      return { ...state, signupStatus: userStatus.FAILURE_USERNAME };\n    case userConstants.SIGNUP_FAILURE:\n      return { ...state, signupStatus: userStatus.FAILURE };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginStatus: userStatus.SUCCESS,\n        me: data,\n      };\n    case userConstants.LOGIN_FAILURE:\n      return { ...state, loginStatus: userStatus.FAILURE };\n    case userConstants.LOGOUT_SUCCESS:\n      return { ...state, logoutStatus: userStatus.SUCCESS };\n    case userConstants.LOGOUT_FAILURE:\n      return { ...state, logoutStatus: userStatus.FAILURE };\n    case userConstants.GET_ME_SUCCESS:\n      return {\n        ...state,\n        me: data,\n        getMeStatus: userStatus.SUCCESS,\n      };\n    case userConstants.GET_ME_FAILURE:\n      return { ...state, getMeStatus: userStatus.FAILURE };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userReducer;\n","import { necessityConstants } from '../../actions/actionTypes';\nimport { necessityStatus } from '../../../constants/constants';\nimport {\n  House, Necessity, Place,\n} from '../../../api';\nimport { NecessityState } from '../../state';\n\ntype Action = {\n  type: string;\n  target: House | Necessity | Place;\n};\n\nconst initialState: NecessityState = {\n  createStatus: necessityStatus.NONE,\n  getStatus: necessityStatus.NONE,\n  removeStatus: necessityStatus.NONE,\n  countStatus: necessityStatus.NONE,\n  updateStatus: necessityStatus.NONE,\n  places: [],\n};\n\nconst PlaceResponseCases = [\n  necessityConstants.CREATE_NECESSITYPLACE_SUCCESS,\n  necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS,\n];\n\nconst NecessityResponseCases = [\n  necessityConstants.COUNT_NECESSITYPLACE_SUCCESS,\n  necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS,\n];\n\nfunction necessityreducer(state = initialState, action: Action): NecessityState {\n  if (action.type === necessityConstants.GET_HOUSE_SUCCESS) {\n    const house = action.target as House;\n    return {\n      ...state,\n      getStatus: necessityStatus.SUCCESS,\n      places: house.places,\n    };\n  }\n\n  if (PlaceResponseCases.includes(action.type)) {\n    let { places } = state;\n    const data = action.target as Place;\n    places = places.map((place) => (place.id === data.id ? data : place));\n\n    if (action.type === necessityConstants.CREATE_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        createStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    if (action.type === necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        removeStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    return {\n      ...state,\n    };\n  }\n\n  if (NecessityResponseCases.includes(action.type)) {\n    let { places } = state;\n    const data = action.target as Necessity;\n    places = places.map((place) => {\n      if (place.id === data.place_id) {\n        const newPlace = place;\n        newPlace.necessities = place.necessities.map((necessity) => (\n          necessity.id === data.id ? data : necessity));\n        return newPlace;\n      }\n      return place;\n    });\n\n    if (action.type === necessityConstants.COUNT_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        countStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    if (action.type === necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        updateStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    return {\n      ...state,\n    };\n  }\n\n  switch (action.type) {\n    case necessityConstants.GET_HOUSE_FAILURE:\n      return {\n        ...state,\n        getStatus: necessityStatus.FAILURE,\n      };\n\n    case necessityConstants.CREATE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE,\n      };\n    case necessityConstants.CREATE_NECESSITYPLACE_FAILURE_NAME:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE_NAME,\n      };\n    case necessityConstants.REMOVE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        removeStatus: necessityStatus.FAILURE,\n      };\n\n    case necessityConstants.COUNT_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        countStatus: necessityStatus.FAILURE,\n      };\n    case necessityConstants.UPDATE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        updateStatus: necessityStatus.FAILURE,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default necessityreducer;\n","import { History } from 'history';\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport userReducer from './user/user';\nimport necessityReducer from './necessity/necessity';\n\nconst rootReducer = (history: History) => combineReducers({\n  user: userReducer,\n  necessity: necessityReducer,\n  router: connectRouter(history),\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from './reducers/index';\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  window.console.log('[Middleware] Dispatching', action);\n  const result = next(action);\n  window.console.log('[Middleware] Next State', store.getState());\n  return result;\n};\n\nexport const history = createBrowserHistory();\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\n\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root'),\n);\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}