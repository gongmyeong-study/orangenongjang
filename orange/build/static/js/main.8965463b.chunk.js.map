{"version":3,"sources":["components/Necessity/NecessityItem.tsx","components/Necessity/NecessityList.tsx","components/Necessity/NecessityTemplate.tsx","components/Necessity/NecessityHead.tsx","constants/constants.ts","store/actions/actionTypes.ts","store/actions/index.ts","store/actions/user/user.tsx","store/actions/necessity/necessity.tsx","components/Necessity/NecessityCreate.tsx","containers/Main/Main.tsx","components/Header/Header.tsx","components/StudyInfo/StudyInfo.tsx","components/Articles/Articles.tsx","components/Login/Login.tsx","components/SignUpModal/SignUpModal.tsx","containers/SignUp/SiginUp.tsx","containers/Info/Info.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/necessity/necessity.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["Remove","styled","div","NecessityItemBlock","CheckCircle","props","done","css","Text","React","memo","id","text","NecessityListBlock","connect","state","necessities","necessity","map","key","NecessityTemplateBlock","NecessityTemplate","children","NecessityHeadBlock","NecessityHead","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","userStatus","necessityStatus","userConstants","necessityConstants","userActions","username","password","dispatch","axios","put","then","res","user","data","type","target","catch","err","error","response","status","email","post","actionType","signupFailure","necessityActions","name","createResponse","createError","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","loginStatus","createStatus","onCreateNecessity","useState","setOpen","value","setValue","onChange","e","onClick","preventDefault","console","log","autoFocus","placeholder","GlobalStyle","createGlobalStyle","Main","Fragment","Header","title","StudyInfo","window","Articles","Login","this","onLogin","setState","disabled","clickLoginHandler","Component","login","signupStatus","me","signUp","setEmail","setUsername","passward","setPassward","style","appearing","display","background","border","htmlFor","required","alert","SignUp","showSignUpModal","setShowSignUpModal","Info","App","history","exact","path","component","Boolean","location","hostname","match","initialState","reducer","action","lastLogin","last_login","dateJoined","date_joined","necessityreducer","actiontarget","actiontype","toggleStatue","rootReducer","combineReducers","userReducer","necessityReducer","router","connectRouter","createBrowserHistory","middlewares","store","next","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8965463b.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\n\n\nconst Remove = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #F1948A;\n    font-size: 24px;\n    cursor: pointer;\n    &:hover {\n        color: #B03A2E;\n    }\n    display: none;\n`;\n\nconst NecessityItemBlock = styled.div`\n    display: flex;\n    align-items: center;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    &:hover {\n        ${Remove}{\n            display: initial;\n        }\n    }\n`;\n\n\ninterface INecessityItemProps {\n  cursor?: any;\n  done?: boolean;\n}\n\nconst CheckCircle = styled.div<INecessityItemProps>`\n    width: 32px;\n    height: 32px;\n    border-radius: 10px;\n    border: 1px solid #ced4da;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n    cursor: pointer;\n    ${props => \n        props.done &&\n        css`\n            border: 1px solid #38d9a9;\n            color: #38d9a9;\n        `}\n`;\n\ninterface ITextProps {\n  color?: string;\n  done?: boolean;\n}\n\nconst Text = styled.div<ITextProps>`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${props =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\n\nfunction NecessityItem({id, done, text} : { id:number, done: boolean, text: string }) {\n  //const onToggleNecessity = () => dispatch({ type: 'TOGGLE', id });\n  // const onRemove = () => dispatch({ type: 'REMOVE', id });  \n  \n  return (\n    <NecessityItemBlock>\n      {<CheckCircle done={done} /*onClick={onToggleNecessity}*/>\n        {done && <MdDone />}\n      </CheckCircle>}\n      <Text done={done}>{text}</Text>\n      {<Remove /*onClick={onRemove}*/>\n        <MdDelete />\n      </Remove>}\n    </NecessityItemBlock>\n  );\n}\n  \nexport default React.memo(NecessityItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport NecessityItem from './NecessityItem';\n\n\nconst NecessityListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\n\n\ninterface Props {\n  necessities: any;\n}\n\nfunction NecessityList(props: Props) {\n  var necessities = props.necessities;\n\n  return (\n    <NecessityListBlock>\n      {necessities.map((necessity: any) => (\n        <NecessityItem\n          key={necessity.id}\n          id={necessity.id}\n          text={necessity.text}\n          done={necessity.done}\n        />\n      ))}\n    </NecessityListBlock>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  necessities: state.necessity.necessities,\n});\n\nexport default connect(mapStateToProps)(NecessityList);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n    children: any;\n}\n\nconst NecessityTemplateBlock = styled.div`\n    width: 512px;\n    height: 768px;\n\n    position: relative;\n    // 박스 하단에 추가 버튼 위치시키기 위한 설정\n\n    background: white;\n    border-radius: 16px;\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n    margin: 0 auto;\n    // 페이지 중앙에 나타나도록 설정\n\n    margin-top: 96px;\n    margin-bottom: 32px;\n    display: flex;\n    flex-direction: column;\n`;\n\nfunction NecessityTemplate({ children, ...props }: IProps) {\n    return <NecessityTemplateBlock {...props}>{children}</NecessityTemplateBlock>;\n}\n\nexport default NecessityTemplate;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst NecessityHeadBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #20c997;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\n\n\nfunction NecessityHead() {\n  // const Necessity = useTodoState();\n  // const undoneTasks = Necessity.filter(Necessity => !Necessity.done);\n  // console.log(Necessity)\n\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\n  \n  return (\n    <NecessityHeadBlock>\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">구매할 것 {}개 남음</div>\n    </NecessityHeadBlock>\n  );\n}\n\nexport default NecessityHead;\n","export const userStatus = {\n    NONE: 'NONE',\n    WAITING: 'WAITING',\n    SUCCESS: 'SUCCESS',\n    FAILURE: 'FAILURE',\n    FAILURE_USERNAME: 'FAILURE_USERNAME',\n};\n\nexport const necessityStatus = {\n    NONE: 'NONE',\n    WAITING: 'WAITING',\n    SUCCESS: 'SUCCESS',\n    FAILURE: 'FAILURE',\n}\n","export const userConstants = {\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\n    LOGIN_FAILURE_USERNAME: 'LOGIN_FAILURE_USERNAME',\n    SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\n    SIGNUP_FAILURE: 'SIGNUP_FAILURE',\n    SIGNUP_FAILURE_USERNAME: 'SIGNUP_FAILURE_USERNAME',\n};\n\nexport const necessityConstants = {\n    CREATE_SUCCESS: 'CREATE_SUCCESS',\n    CREATE_FAILURE: 'CREATE_FAILURE',\n    TOGGLE_SUCCESS: 'TOGGLE_SUCCESS',\n    TOGGLE_FAILURE: 'TOGGLE_FAILURE',\n};\n","import {\n    login,\n    signUp\n} from './user/user';\n\nimport {\n    createNecessity,\n    toggleNecessity\n} from './necessity/necessity';\n\nexport const userActions = {\n    login,\n    signUp,\n};\n\nexport const necessityActions = {\n    createNecessity,\n    toggleNecessity,\n}\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { userConstants } from '../actionTypes';\n\n\nconst loginSuccess = (user: any) => ({\n  type: userConstants.LOGIN_SUCCESS,\n  target: user,\n});\n\nconst loginFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = userConstants.LOGIN_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nconst signupSuccess = (user: any) => ({\n  type: userConstants.SIGNUP_SUCCESS,\n  target: user,\n});\n\nconst signupFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    case 409:\n      actionType = userConstants.SIGNUP_FAILURE_USERNAME;\n      break;\n    default:\n      actionType = userConstants.SIGNUP_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const login = (\n  username: string, password: string,\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\n  .then((res) => dispatch(loginSuccess(res.data)))\n  .catch((err) => dispatch(loginFailure(err)));\n\nexport const signUp = (\n  email: string, username: string, password: string,\n) => (dispatch: Dispatch) => axios.post('/api/v1/user/', { email, username, password })\n  .then((res) => dispatch(signupSuccess(res.data)))\n  .catch((err) => dispatch(signupFailure(err)));\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { necessityConstants } from '../actionTypes';\n\n\n// 생필품 구매목록 추가 기능\n\nconst createSuccess = (necessities: any) => ({\n  type: necessityConstants.CREATE_SUCCESS,\n  target: necessities,\n});\n\nconst createFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = necessityConstants.CREATE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const createNecessity = (\n  name: string,\n) => (dispatch: Dispatch) => axios.post('/api/v1/necessity/', { name })\n  .then((createResponse) => dispatch(createSuccess(createResponse.data)))\n  .catch((createError) => dispatch(createFailure(createError)));\n\n\n// 생필품 구매여부 체크 기능\n\nconst toggleSuccess = (necessities: any) => ({\n  type: necessityConstants.TOGGLE_SUCCESS,\n  target: necessities,\n});\n\nconst toggleFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = necessityConstants.TOGGLE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };  \n};\n\nexport const toggleNecessity = (\n  name: string,\n) => (dispatch: Dispatch) => axios.post('api/v1/necessity/', { name })\n  .then((toggleResponse) => dispatch(toggleSuccess(toggleResponse.data)))\n  .catch((toggleError) => dispatch(toggleFailure(toggleError)));\n","import React, { useState, Dispatch } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { necessityStatus } from '../../constants/constants';\nimport { necessityActions } from '../../store/actions';\nimport { connect } from 'react-redux';\n\ninterface ICircleButtonProps {\n    transition? : any;\n    open?: any;\n}\n\nconst CircleButton = styled.button<ICircleButtonProps>`\n  \tbackground: #38d9a9;\n  \t&:hover {\n  \t \t background: #63e6be;\n  \t}\n  \t&:active {\n   \t\t background: #20c997;\n  \t}\n\n  \tz-index: 5;\n  \tcursor: pointer;\n  \twidth: 80px;\n \theight: 80px;\n  \tdisplay: block;\n  \talign-items: center;\n  \tjustify-content: center;\n  \tfont-size: 60px;\n  \tposition: absolute;\n  \tleft: 50%;\n  \tbottom: 0px;\n  \ttransform: translate(-50%, 50%);\n\tcolor: white;\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\ttransition: 0.125s all ease-in;\n\t${props =>\n\t\tprops.open &&\n\t\tcss`\n\t\tbackground: #ff6b6b;\n\t\t&:hover {\n\t\t\tbackground: #ff8787;\n\t\t}\n\t\t&:active {\n\t\t\tbackground: #fa5252;\n\t\t}\n\t\ttransform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n\twidth: 100%;\n\tbottom: 0;\n\tleft: 0;\n\tposition: absolute;\n`;\n\nconst InsertForm = styled.form`\n\tbackground: #f8f9fa;\n\tpadding-left: 32px;\n\tpadding-top: 32px;\n\tpadding-right: 32px;\n\tpadding-bottom: 72px;\n\n\tborder-bottom-left-radius: 16px;\n\tborder-bottom-right-radius: 16px;\n\tborder-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n\tpadding: 12px;\n\tborder-radius: 4px;\n\tborder: 1px solid #dee2e6;\n\twidth: 100%;\n\toutline: none;\n\tfont-size: 18px;\n\tbox-sizing: border-box;\n`;\n\nexport interface INecessity {\n    id: number;\n    text: string;\n    done: boolean;\n};\n\ninterface IProps {\n    onCreateNecessity: (text: string) => any;\n    createStatus: string;\n    necessities: any;\n}\n\nfunction NecessityCreate(props: IProps) {\n    const [open, setOpen] = useState(false);\n    const [value, setValue ] = useState('');\n\n    const onToggle = () => setOpen(!open);\n    const onChange = (e: any) => setValue(e.target.value);\n    const onSubmit = (e: any) => {\n\n    \te.preventDefault();\n    \tprops.onCreateNecessity(value)\n    \t.then(() => {\n        \tif (props.createStatus === necessityStatus.SUCCESS) {\n        \t\tconsole.log(\"CREATED!\")\n      \t\t}\n      \t\telse  {\n        \t\tconsole.log(\"FAILED TO CREATE!\")\n      \t\t}\n    \t});\n    setValue('');\n    setOpen(false);\n    };\n\n\treturn (\n    <>\n    {open && (\n\t\t<InsertFormPositioner>\n        \t<InsertForm>\n            \t<Input \n            \tonChange={onChange}\n            \tonClick={onSubmit} autoFocus placeholder=\"구매할 생필품을 입력 후, Enter 를 누르세요\" />\n            </InsertForm>\n        </InsertFormPositioner>\n      )}\n        <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n        </CircleButton>\n    </>\n    );\n}\n\nconst mapStateToProps = (state: any) => ({\n    loginStatus: state.user.loginStatus,\n    createStatus: state.necessity.createStatus,\n    necessities: state.necessity.necessities,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    onCreateNecessity: (text: string) => dispatch(necessityActions.createNecessity(text)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityCreate);\n","import React from 'react';\nimport NecessityList from '../../components/Necessity/NecessityList'\nimport { createGlobalStyle } from 'styled-components';\nimport NecessityTemplate from '../../components/Necessity/NecessityTemplate';\nimport NecessityHead from '../../components/Necessity/NecessityHead';\nimport NecessityCreate from '../../components/Necessity/NecessityCreate';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction Main() {\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <h1>Main page</h1>\n        <NecessityTemplate>\n          <NecessityHead />\n          <NecessityList />\n          <NecessityCreate />\n        </NecessityTemplate>\n    </React.Fragment>\n  )\n}\n\nexport default Main;\n","import React from 'react';\n\nimport { ArticleProps } from '../Article/Article';\nimport './Header.css';\n\n// each HTML component\nfunction Header(props: ArticleProps) {\n    return (\n      <header className={props.className}>\n        <h1>{props.title}</h1>\n        {/* 소개글 넣기 */}\n        <p>Since. 2020.04.12.</p>\n      </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport { ArticleProps } from '../Article/Article';\nimport './StudyInfo.css';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nfunction StudyInfo(props: ArticleProps) {\n    return (\n      <div className={props.className}>\n        <section>\n          <h2 className=\"deep-orange\">스터디 멤버</h2>\n          <ul>\n            <strong>웹 개발 참여</strong>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/davin111\")}\n              > 다빈\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/palpitate2015\")}\n              > 상현\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/YeonghyeonKO\")}\n              > 영현\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/JSKeum\")}\n              > 진섭\n              </a>\n            </li>\n            <br />\n            <strong>세미나 참여</strong>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/anneKwon\")}\n              > 민재\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/Eunsung-k\")}\n              > 은성\n              </a>\n            </li>\n            <li>\n              <a \n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/jadeyyun\")}\n              > 재연\n              </a>\n            </li>          \n          </ul>\n        </section>\n        <section>\n          <h2 className=\"deep-orange\">GitHub</h2>\n          <ul>\n            <li>\n              <a\n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://github.com/gongmyeong-study\")}\n              >\n                GitHub 방문하기\n              </a>\n            </li>\n          </ul>\n        </section>\n        <section>\n          <h2 className=\"deep-orange\">Slack</h2>\n          <ul>\n            <li>\n              <a\n                className=\"VisitLink\"\n                onClick={() => window.open(\"https://gongmyeongstudy.slack.com\")}\n              >\n                Slack 방문하기\n              </a>\n            </li>       \n          </ul>\n        </section>  \n      </div>\n    );\n}\n\nexport default StudyInfo;\n","import React from 'react';\nimport { ArticleProps } from '../Article/Article';\n\nfunction Articles(props: ArticleProps) {\n    return (\n      <div className={props.className}>\n        <article>\n        </article>\n      </div>\n    );\n}\n\nexport default Articles;\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\n\nimport { userStatus } from '../../constants/constants';\nimport { userActions } from '../../store/actions';\nimport './Login.css';\n\ninterface Props {\n  loginStatus: string;\n  onLogin: (username: string, password: string) => any;\n}\n\ninterface State {\n  username: string;\n  password: string;\n}\n\nclass Login extends Component<Props, State> {\n  // NOTE: this Login Component is just for example about api call. it can be changed completely differently.\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  clickLoginHandler() {\n    this.props.onLogin(this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.loginStatus === userStatus.SUCCESS) {\n          // NOTE: just friendly logging - please remove below logging line later\n          console.log(\"SUCCESSFULLY LOGGED IN!\")\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n      <h1>Login</h1>\n        <div className=\"LoginField\">\n          <input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"username\"\n            onChange={(e) => this.setState({ username: e.target.value })}\n          />\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => this.setState({ password: e.target.value })}\n          />\n        </div>\n        <button\n          className=\"LoginButton\"\n          disabled={!this.state.username || !this.state.password}\n          onClick={() => this.clickLoginHandler()}\n        >\n          go\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginStatus: state.user.loginStatus,\n  user: state.user.login,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onLogin: (username: string, password: string) => dispatch(userActions.login(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, Dispatch } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userActions } from \"../../store/actions\";\nimport { userStatus } from \"../../constants/constants\";\nimport \"./SignUpModal.css\";\n\ninterface Props {\n  appearing: Boolean; // for modal appearing\n  signUp: (email: string, username: string, password: string) => any; // for redux dispatch\n  me: any;\n  signupStatus: string;\n}\n\nfunction SignUpModal(props: Props) {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [passward, setPassward] = useState(\"\");\n\n  const onChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeUserName = (e: any) => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassward = (e: any) => {\n    setPassward(e.target.value);\n  };\n\n  const signUp = () => {\n    props.signUp(email, username, passward)\n    .then(() => {\n      console.log(props.signupStatus);\n      console.log(userStatus.SUCCESS);\n      if (props.signupStatus === userStatus.SUCCESS) {\n        window.alert(\"성공!\");\n      }\n      else {\n        window.alert(\"실패!\");\n      }\n    });\n  };\n  \n  return (\n    <div\n      className=\"modal\"\n      style={props.appearing ? { display: \"block\" } : { display: \"none\" }}\n    >\n      <form>\n        <button\n          type=\"submit\"\n          className=\"close\"\n          title=\"Close Modal\"\n          style={{ background: \"none\", border: \"none\" }}\n        >\n          &times;\n        </button>\n      </form>\n      <form className=\"modal-content\">\n        <div className=\"container\">\n          <p>오렌지 농장을 이용하기 전에 회원가입을 해주세요</p>\n          <hr />\n          <label htmlFor=\"email\">\n            <b>이메일 (Email)</b>\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"haksaeng@snu.ac.kr\"\n            required\n            onChange={onChangeEmail}\n          />\n\n          <label htmlFor=\"email\">\n            <b>이름 (Name)</b>\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Jinsup\"\n            required\n            onChange={onChangeUserName}\n          />\n\n          <label htmlFor=\"psw\">\n            <b>비밀번호 (Password)</b>\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            required\n            onChange={onChangePassward}\n          />\n\n          {/* <label htmlFor=\"psw-repeat\">\n            <b>비밀번호 확인 (Repeat Password)</b>\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Repeat Password\"\n            name=\"psw-repeat\"\n            required\n          /> */}\n\n          <div className=\"clearfix\">\n            {/* <button type=\"button\" onClick={() => setAppearing(false)} className=\"cancelbtn\">Cancel</button> */}\n            <button\n              // type=\"submit\"\n              type=\"button\"\n              className=\"signupbtn\"\n              onClick={signUp}\n            >\n              회원가입\n              {props.signupStatus}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  signUp: (email: string, username: string, password: string) =>\n    dispatch(userActions.signUp(email, username, password)),\n});\n\nconst mapStateToProps = (state: any) => ({\n  signupStatus: state.user.signupStatus,\n  me: state.user.me,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpModal);\n","import React, { useState } from \"react\";\n\nimport { Login, SignUpModal } from \"../../components/index\";\n\nfunction SignUp() {\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const showModal = () => setShowSignUpModal(true);\n\n  return (\n    <div>\n      <Login />\n      <button onClick={showModal}>회원가입 </button>\n      {showSignUpModal ? <SignUpModal appearing={true} /> : null}\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\n\nimport { Header, StudyInfo, Articles } from '../../components';\nimport './Info.css';\n\nclass Info extends Component {\n  render() {\n    return(\n      <div className=\"info-ui\">\n        <Header className=\"main-header\" title=\"오렌지 농장\"/>\n        <main>\n          <StudyInfo className=\"left-info\" />\n          <Articles className=\"right-articles\" />  \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Info;\n","import React from \"react\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Route } from \"react-router-dom\";\n\nimport { Main, SignUp, Info } from \"./containers\";\nimport \"./App.css\";\n\ninterface Props {\n  history: any;\n}\n\nfunction App(props: Props): JSX.Element {\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={props.history}>\n        <Route exact path={[\"/\", \"/main\"]} component={Main} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/info\" component={Info} />\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userConstants } from '../../actions/actionTypes';\nimport { userStatus } from '../../../constants/constants';\n\nconst initialState = {\n  me: {},\n  loginStatus: userStatus.NONE,\n  signupStatus: userStatus.NONE,\n};\n\nconst reducer = (state = initialState, action: any) => {\n  const data = action.target;\n  switch (action.type) {\n    case userConstants.LOGIN_SUCCESS:\n        // NOTE: just friendly logging - please remove below logging line later\n        console.log(data);\n        return {\n            ...state,\n            loginStatus: userStatus.SUCCESS,\n            me: {\n                id: data.id,\n                username: data.username,\n                email: data.email,\n                lastLogin: data.last_login,\n                dateJoined: data.date_joined,\n            },\n        };\n    case userConstants.LOGIN_FAILURE:\n      return { ...state, loginStatus: userStatus.FAILURE };\n    case userConstants.SIGNUP_SUCCESS:\n      return { ...state,\n        signupStatus: userStatus.SUCCESS,\n        me: {\n          id: data.id,\n          username: data.username,\n          email: data.email,\n          lastLogin: data.last_login,\n          dateJoined: data.date_joined,\n        }\n      };\n    case userConstants.SIGNUP_FAILURE_USERNAME:\n      return { ...state, signupStatus: userStatus.FAILURE_USERNAME };\n    case userConstants.SIGNUP_FAILURE:\n      return { ...state, signupStatus: userStatus.FAILURE };\n    default:\n      return { ...state };\n  }\n};\n\nexport default reducer;\n","import { necessityConstants } from '../../actions/actionTypes';\nimport { necessityStatus } from '../../../constants/constants';\n\n\ntype Action = { \n  actiontype: string; \n  actiontarget: any;\n}\n\nconst initialState = {\n    createStatus: necessityStatus.NONE,\n    necessities: [\n        {\n          id: 1,\n          text: '크리넥스 티슈',\n          done: true\n        },\n        {\n          id: 2,\n          text: '섬유유연제',\n          done: true\n        },\n        {\n            id: 3,\n          text: '삼다수 2L',\n          done: false\n        },\n        {\n            id: 4,\n          text: 'AAA 건전지',\n          done: false\n        }\n    ],\n};\n\n\n\nfunction necessityreducer (state = initialState, action: Action) {\n    const data = action.actiontarget;\n    switch (action.actiontype) {\n\n\t\t// 생필품 추가\n        case necessityConstants.CREATE_SUCCESS:\n            return {\n                createStatus: necessityStatus.SUCCESS,\n                necessities: data,\n            };\n        case necessityConstants.CREATE_FAILURE:\n            return {\n                ...state,\n                createStatus: necessityStatus.FAILURE,\n            };\n\t\t\n\t\t// 생필품 구매여부 체크\n        case necessityConstants.TOGGLE_SUCCESS:\n          \treturn {\n\t\t\t\t  toggleStatue: necessityStatus.SUCCESS,\n\t\t\t\t  necessities: data,\n\t\t\t};\n\t\tcase necessityConstants.TOGGLE_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoggleStatue: necessityStatus.FAILURE,\n\t\t\t};\n\n        // case 'REMOVE':\n        //     return state.filter(Necessity => Necessity.id !== action.id);\n\t\t\n\t\tdefault:\n            return { ...state }\n    }\n}\n\nexport default necessityreducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport userReducer from './user/user';\nimport necessityReducer from './necessity/necessity';\n\nconst rootReducer = (history: any) => combineReducers({\n  user: userReducer,\n  necessity: necessityReducer,\n  router: connectRouter(history),\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from './reducers/index';\n\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  window.console.log('[Middleware] Dispatching', action);\n  const result = next(action);\n  window.console.log('[Middleware] Next State', store.getState());\n  return result;\n};\n\nexport const history = createBrowserHistory();\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\n\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App history={history} />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}