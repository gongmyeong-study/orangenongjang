{"version":3,"sources":["store/actions/actionTypes.ts","store/actions/user/user.tsx","store/actions/necessity/necessity.tsx","store/actions/index.ts","constants/constants.ts","components/Header/Header.tsx","components/Login/Login.tsx","components/Necessity/NecessityCreateOrUpdateForm/NecessityCreateOrUpdateForm.tsx","components/Necessity/NecessityItem/NecessityItem.tsx","components/Necessity/NecessityRemoveButton/NecessityRemoveButton.tsx","components/Necessity/NecessityUpdateButton/NecessityUpdateButton.tsx","components/Necessity/NecessityCounterButton/NecessityCounterButton.tsx","components/Necessity/NecessityList/NecessityList.tsx","components/PlaceBox/PlaceBox.tsx","components/SignUpModal/SignUpModal.tsx","components/StudyInfo/StudyInfo.tsx","components/LogList/LogList.tsx","components/PlaceCreateForm/PlaceCreateForm.tsx","containers/NecessityPage/NecessityPage.tsx","containers/StatisticsPage/StatisticsPage.tsx","containers/TimelinePage/TimelinePage.tsx","containers/WorkPage/WorkPage.tsx","containers/MainPage/MainPage.tsx","containers/IntroPage/IntroPage.tsx","containers/InfoPage/InfoPage.tsx","containers/HousePage/HousePage.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/necessity/necessity.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["userConstants","necessityConstants","signUp","email","username","password","dispatch","axios","post","then","res","user","data","type","target","catch","err","error","actionType","response","status","signupFailure","login","put","loginFailure","getHouse","houseId","get","getResponse","house","getError","getHouseFailure","createNecessityPlace","placeId","name","option","description","price","count","createResponse","place","createError","createNecessityPlaceFailure","countNecessityPlace","necessityId","countResponse","necessity","countError","countNecessityPlaceFailure","updateNecessityPlace","updateResponse","updateError","window","alert","updateNecessityPlaceFailure","removeNecessityPlace","delete","removeResponse","removeError","removeNecessityPlaceFailure","createPlace","createPlaceFailure","userActions","userStatus","necessityStatus","necessityUserLogStatus","Header","this","props","onGetMe","whereToGo","whereToGoDisplay","logoutButton","getMeStatus","pathname","history","push","className","onClick","onLogout","logoutStatus","location","reload","helloUser","me","Component","connect","state","router","loginStatus","Login","useForm","register","handleSubmit","errors","onSubmit","onLogin","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","variant","inputRef","required","Boolean","helperText","Button","NecessityCreateOrUpdateForm","necessityToBeUpdated","useDispatch","onSubmitToCreate","onSubmitToUpdate","id","formTitle","submitIcon","style","marginRight","defaultValue","disabled","NecessityItem","NecessityRemoveButton","color","necesstiyId","NecessityUpdateButton","updateNecessity","NecessityCounterButton","onCountNecessityPlace","countType","NecessityList","createNecessity","necessities","length","map","key","PlaceBox","useState","isModalOpen","setModalOpen","setNecessityToBeUpdated","useSelector","createStatus","updateStatus","closeModal","undefined","useEffect","Modal","setAppElement","isOpen","onRequestClose","overlayClassName","SignUpModal","onSignUp","value","message","pattern","StudyInfo","open","LogList","logs","necessityname","necessityplace","place_name","createdAt","Date","created_at","toLocaleString","Timeline","TimelineItem","TimelineOppositeContent","Typography","TimelineSeparator","action","activityIcon","TimelineConnector","TimelineContent","Paper","elevation","component","activityCategory","PlaceCreateForm","NecessityPage","places","dots","slidesToShow","slidesToScroll","infinite","display","justifyContent","StatisticsPage","TimelinePage","getLogStatus","setState","logList","log","WorkPage","MainPage","activeTab","Number","match","params","body","backgroundColor","IntroPage","showSignUpModal","setShowSignUpModal","signupStatus","InfoPage","HousePage","houses","setHouses","nameToCreate","setNameToCreate","introductionToCreate","setIntroductionToCreate","source","CancelToken","cancelToken","token","cancel","goToTheRoom","url","showUserHouses","index","introduction","event","preventDefault","onChange","e","App","exact","path","hisory","to","hostname","initialState","userReducer","getStatus","removeStatus","countStatus","PlaceResponseCases","NecessityResponseCases","necessityreducer","includes","place_id","newPlace","rootReducer","combineReducers","necessityReducer","connectRouter","createBrowserHistory","middlewares","store","next","console","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qmBAAaA,EACK,iBADLA,EAEK,iBAFLA,EAGK,iBAHLA,EAIoB,gCAJpBA,EAKc,0BALdA,EAMW,uBANXA,EAOI,gBAPJA,EAQI,gBARJA,EASa,yBATbA,EAUS,qBAVTA,EAWK,iBAXLA,EAYK,iBAZLA,EAaK,iBAbLA,EAcK,iBAGLC,EACoB,gCADpBA,EAEoB,gCAFpBA,EAGyB,qCAHzBA,EAIoB,gCAJpBA,EAKoB,gCALpBA,EAMQ,oBANRA,EAOQ,oBAPRA,EAQmB,+BARnBA,EASmB,+BATnBA,EAUoB,gCAVpBA,EAWoB,gCAXpBA,EAYW,uBAZXA,EAaW,uBCIXC,EAAS,SACpBC,EAAeC,EAAkBC,GADb,OAEjB,SAACC,GAAD,OAAwBC,IAAMC,KAAK,gBAAiB,CAAEL,QAAOC,WAAUC,aACzEI,MAAK,SAACC,GAAD,OAA8BJ,GAhCfK,EAgCsCD,EAAIE,KAhC1B,CACrCC,KAAMb,EACNc,OAAQH,KAFY,IAACA,KAiCpBI,OAAM,SAACC,GAAD,OAASV,EA5BI,SAACW,GAAuB,IAAD,EACvCC,EAAa,KACjB,iBAAQD,EAAME,gBAAd,aAAQ,EAAgBC,QACtB,KAAK,IACHF,EAAalB,EACb,MACF,KAAK,IACHkB,EAAalB,EACb,MACF,KAAK,IACHkB,EAAalB,EACb,MACF,KAAK,IACHkB,EAAalB,EACb,MACF,QACEkB,EAAalB,EAEjB,MAAO,CACLa,KAAMK,EACNJ,OAAQG,GAQeI,CAAcL,SA0B5BM,EAAQ,SACnBlB,EAAkBC,GADC,OAEhB,SAACC,GAAD,OAAwBC,IAAMgB,IAAI,sBAAuB,CAAEnB,WAAUC,aACvEI,MAAK,SAACC,GAAD,OAA8BJ,GA3BhBK,EA2BsCD,EAAIE,KA3B1B,CACpCC,KAAMb,EACNc,OAAQH,KAFW,IAACA,KA4BnBI,OAAM,SAACC,GAAD,OAASV,EAvBG,SAACW,GAAuB,IAAD,EACtCC,EAAa,KACjB,iBAAQD,EAAME,gBAAd,aAAQ,EAAgBC,QACtB,KAAK,IACHF,EAAalB,EACb,MACF,KAAK,IACHkB,EAAalB,EACb,MACF,QACEkB,EAAalB,EAGjB,MAAO,CACLa,KAAMK,EACNJ,OAAQG,GAQeO,CAAaR,SC7C3BS,EAAW,SAACC,GAAD,OAAqB,SAACpB,GAAD,OAAwBC,IAAMoB,IAAN,wBAA2BD,EAA3B,MAClEjB,MAAK,SAACmB,GAnBe,IAACC,EAoBrBvB,GApBqBuB,EAoBID,EAAYhB,KApBE,CACzCC,KAAMZ,EACNa,OAAQe,QAoBPd,OAAM,SAACe,GAAD,OAAcxB,EAjBC,SAACW,GAAuB,IAAD,EAO7C,OALA,UAAQA,EAAME,gBAAd,OAAQ,EAAgBC,OAKjB,CACLP,KAJeZ,EAKfa,OAAQG,GAQoBc,CAAgBD,SAsBnCE,EAAuB,SAClCC,EAAiBC,EAAcC,EAAgBC,EAAqBC,EAAeC,GADjD,OAE/B,SAAChC,GAAD,OAAwBC,IAAMC,KAAN,wBAA4ByB,EAA5B,eAAkD,CAC7EA,UAASC,OAAMC,SAAQC,cAAaC,QAAOC,UAE1C7B,MAAK,SAAC8B,GAzB2B,IAACC,EA0BjClC,GA1BiCkC,EA0BID,EAAe3B,KA1BD,CACrDC,KAAMZ,EACNa,OAAQ0B,QA0BPzB,OAAM,SAAC0B,GAAD,OAAiBnC,EAvBU,SAACW,GAAuB,IAAD,EACrDC,EAAa,KACjB,iBAAQD,EAAME,gBAAd,aAAQ,EAAgBC,QACtB,KAAK,IACHF,EAAajB,EACb,MACF,QACEiB,EAAajB,EAEjB,MAAO,CACLY,KAAMK,EACNJ,OAAQG,GAYuByB,CAA4BD,SAoBlDE,EAAsB,SACjCV,EAAiBW,EAAqBN,GADL,OAE9B,SAAChC,GAAD,OAAwBC,IAAMgB,IAAN,wBAA2BU,EAA3B,sBAAgDW,EAAhD,WAAsE,CAAEN,UAClG7B,MAAK,SAACoC,GArB0B,IAACC,EAsBhCxC,GAtBgCwC,EAsBID,EAAcjC,KAtBQ,CAC5DC,KAAMZ,EACNa,OAAQgC,QAsBP/B,OAAM,SAACgC,GAAD,OAAgBzC,EAnBU,SAACW,GAAuB,IAAD,EAOxD,OALA,UAAQA,EAAME,gBAAd,OAAQ,EAAgBC,OAKjB,CACLP,KAJeZ,EAKfa,OAAQG,GAUsB+B,CAA2BD,SAqBhDE,EAAuB,SAClChB,EAAiBW,EAAqBR,EAAqBC,EAAgBC,GADzC,OAE/B,SAAChC,GAAD,OAAwBC,IAAMgB,IAAN,wBAA2BU,EAA3B,sBAAgDW,EAAhD,KAAgE,CAAER,cAAaC,QAAOC,UAChH7B,MAAK,SAACyC,GAtB2B,IAACJ,EAuBjCxC,GAvBiCwC,EAuBII,EAAetC,KAvBO,CAC7DC,KAAMZ,EACNa,OAAQgC,QAuBP/B,OAAM,SAACoC,GAAD,OAAiB7C,EApBU,SAACW,GAAuB,IAAD,EAQzD,OANAmC,OAAOC,MAAM,sFACb,UAAQpC,EAAME,gBAAd,OAAQ,EAAgBC,OAKjB,CACLP,KAJeZ,EAKfa,OAAQG,GAUuBqC,CAA4BH,SAwBlDI,EAAuB,SAClCtB,EAAiBW,GADiB,OAE/B,SAACtC,GAAD,OAAwBC,IAAMiD,OAAN,wBAA8BvB,EAA9B,sBAAmDW,EAAnD,MAC1BnC,MAAK,SAACgD,GAzB2B,IAACjB,EA0BjClC,GA1BiCkC,EA0BIiB,EAAe7C,KAzBtDwC,OAAOC,MAAM,+CACN,CACLxC,KAAMZ,EACNa,OAAQ0B,QAwBTzB,OAAM,SAAC2C,GAAD,OAAiBpD,EApBU,SAACW,GAAuB,IAAD,EAQzD,OANA,UAAQA,EAAME,gBAAd,OAAQ,EAAgBC,OAEpBgC,OAAOC,MAAM,iBAIV,CACLxC,KAJeZ,EAKfa,OAAQG,GAUuB0C,CAA4BD,SAoBlDE,EAAc,SAAClC,EAAiBQ,GAAlB,OAAmC,SAAC5B,GAAD,OAAwBC,IAAMC,KAAN,wBAA4BkB,EAA5B,WAA8C,CAAEQ,SAAQzB,MAAK,SAAC8B,GAlBzH,IAACC,EAmB1BlC,GAnB0BkC,EAmBED,EAAe3B,KAnBC,CAC5CC,KAAMZ,EACNa,OAAQ0B,QAmBPzB,OAAM,SAAC0B,GAAD,OAAiBnC,EAhBC,SAACW,GAAuB,IAAD,EAOhD,OALA,UAAQA,EAAME,gBAAd,OAAQ,EAAgBC,OAKjB,CACLP,KAJeZ,EAKfa,OAAQG,GAOuB4C,CAAmBpB,SCpJzCqB,EFiES,kBAAM,SAACxD,GAAD,OAAwBC,IAAMoB,IAAI,wBAC3DlB,MAAK,kBAAMH,EAXe,CAC3BO,KAAMb,EACNc,OAAQ,UAUPC,OAAM,SAACC,GAAD,OAASV,EAP4B,CAC5CO,KAAMb,EACNc,OAKuCE,SEnE5B8C,EF+EQ,kBAAM,SAACxD,GAAD,OAAwBC,IAAMoB,IAAI,oBAC1DlB,MAAK,SAACC,GAAD,OAA8BJ,GAXhBK,EAWsCD,EAAIE,KAX1B,CACpCC,KAAMb,EACNc,OAAQH,KAFW,IAACA,KAYnBI,OAAM,SAACC,GAAD,OAASV,EAP2B,CAC3CO,KAAMb,EACNc,OAKsCE,SGhG3B+C,EACL,OADKA,GAEF,UAFEA,GAGF,UAHEA,GAIF,UAJEA,GAKa,yBALbA,GAMO,mBANPA,GAOG,eAPHA,GAQO,mBARPA,GASI,gBAGJC,GACL,OADKA,GAGF,UAHEA,GAIF,UAJEA,GAKG,eAGHC,GACL,OADKA,GAEF,UCFLC,I,yLAEFC,KAAKC,MAAMC,Y,+BAGH,IAAD,OACHC,EAAY,QACZC,EAAmB,8CACnBC,EAAe,KAGfL,KAAKC,MAAMK,cAAgBV,GACD,UAAxBI,KAAKC,MAAMM,UAEbJ,EAAY,SACZC,EAAmB,sBAGnBJ,KAAKC,MAAMO,QAAQC,KAAK,WAI1BJ,EACE,wBAAIK,UAAU,kBACZ,4BACEA,UAAU,gBACVhE,KAAK,SACLiE,QAAS,kBAAM,EAAKV,MAAMW,WACvBtE,MAAK,WACA,EAAK2D,MAAMY,eAAiBjB,KAC9B,EAAKK,MAAMO,QAAQC,KAAK,UACxBxB,OAAO6B,SAASC,eAPxB,6BAewB,WAAxBf,KAAKC,MAAMM,SAEbP,KAAKC,MAAMO,QAAQC,KAAK,KACS,MAAxBT,KAAKC,MAAMM,WACpBJ,EAAY,IACZC,EAAmB,oCAIvB,IAAIY,EAAY,KAUhB,MAT4B,WAAxBhB,KAAKC,MAAMM,UAAiD,UAAxBP,KAAKC,MAAMM,WACjDS,EACE,wBAAIN,UAAU,uCACXV,KAAKC,MAAMgB,GAAGhF,SADjB,mDAQF,wBAAIyE,UAAU,eACXM,EACD,wBAAIN,UAAU,kBACZ,4BACEA,UAAU,qBACVhE,KAAK,SACLiE,QAAS,kBAAM,EAAKV,MAAMO,QAAQC,KAAKN,KAEtCC,IAGJC,O,GAtEYa,cAyFNC,gBAbS,SAACC,GAAD,MAAiB,CACvCb,SAAUa,EAAMC,OAAOP,SAASP,SAChCD,YAAac,EAAM5E,KAAK8D,YACxBgB,YAAaF,EAAM5E,KAAK8E,YACxBT,aAAcO,EAAM5E,KAAKqE,aACzBI,GAAIG,EAAM5E,KAAKyE,OAGU,SAAC9E,GAAD,MAA8B,CACvD+D,QAAS,kBAAM/D,EAASwD,MACxBiB,SAAU,kBAAMzE,EAASwD,SAGZwB,CAA6CpB,I,sFC3C7CwB,OA/Cf,SAAetB,GAAe,IAAD,EAGvBuB,eADFC,EAFyB,EAEzBA,SAAUC,EAFe,EAEfA,aAAcC,EAFC,EAEDA,OAK1B,OACE,oCACE,0BAAMC,SAAUF,GAJH,SAACjF,GAAD,OAAyBwD,EAAM4B,QAAQpF,EAAKR,SAAUQ,EAAKP,cAKtE,kBAAC4F,GAAA,EAAD,CACE/D,KAAK,WACLgE,YAAY,eACZC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,QAINC,QAAQ,WACRC,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAO1F,UACtBuG,WAAYb,EAAO1F,UAAY,6DAEjC,kBAAC6F,GAAA,EAAD,CACE/D,KAAK,WACLgE,YAAY,2BACZC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,QAINzF,KAAK,WACL0F,QAAQ,WACRC,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAOzF,UACtBsG,WAAYb,EAAOzF,UAAY,yEAEjC,kBAACuG,GAAA,EAAD,CAAQ/F,KAAK,UAAb,yB,OCoGOgG,OAtIf,SAAqCzC,GAAe,IAC1C0C,EAAyB1C,EAAzB0C,qBADyC,EAI7CnB,eADFC,EAH+C,EAG/CA,SAAUC,EAHqC,EAGrCA,aAAcC,EAHuB,EAGvBA,OAGpBxF,EAAWyG,cAuBXC,EAAmB,SAACpG,GAAD,OApBvBqB,EAqBAmC,EAAMnC,QApBNC,EAoBetB,EAAKsB,KAnBpBC,EAmB0BvB,EAAKuB,OAlB/BC,EAkBuCxB,EAAKwB,YAjB5CC,EAiByDzB,EAAKyB,MAhB9DC,EAgBqE1B,EAAK0B,WAd1EhC,EAAS0B,EAAqBC,EAASC,EAAMC,EAAQC,EAAaC,EAAOC,IAR5C,IAC7BL,EACAC,EACAC,EACAC,EACAC,EACAC,GAmBI2E,EAAmB,SAACrG,GAAD,OAbvBqB,EAeAmC,EAAMnC,QAdNW,EAcewB,EAAM0C,qBAAsBI,GAb3C9E,EAa+CxB,EAAKwB,YAZpDC,EAYiEzB,EAAKyB,MAXtEC,EAW6E1B,EAAK0B,WATlFhC,EAAS2C,EAAqBhB,EAASW,EAAaR,EAAaC,EAAOC,IAP3C,IAC7BL,EACAW,EACAR,EACAC,EACAC,GAsBI6E,EAA2B,WAAf/C,EAAMvD,KAAoB,2FAAuB,wEAC7DuG,EAA4B,WAAfhD,EAAMvD,KAAoB,uBAAGgE,UAAU,6BAAgC,uBAAGA,UAAU,sBAEvG,OACE,oCACE,wBAAIA,UAAU,qBAAqBsC,GACnC,0BAAMpB,SAAUF,GAdH,SAACjF,GACG,WAAfwD,EAAMvD,KACRmG,EAAiBpG,GAEjBqG,EAAiBrG,MAUuBiE,UAAU,eAChD,kBAACoB,GAAA,EAAD,CACE/D,KAAK,OACLiE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,kBAINd,SAAUZ,EAAS,CAAEa,UAAU,IAC/Bc,aAAcT,GAAwBA,EAAqB5E,KAC3DsF,SAAUd,QAAQI,GAClB7F,MAAOyF,QAAQZ,EAAO5D,MACtByE,WAAYb,EAAO5D,MAAQ,8EAC3B2C,UAAU,eAEZ,kBAACoB,GAAA,EAAD,CACEE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,kBAINpF,KAAK,SACLsE,SAAUZ,EACV2B,aAAcT,GAAwBA,EAAqB3E,OAC3DqF,SAAUd,QAAQI,GAClBjC,UAAU,eAEZ,kBAACoB,GAAA,EAAD,CACEE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,kBAINpF,KAAK,cACLsE,SAAUZ,EACV2B,aAAcT,GAAwBA,EAAqB1E,YAC3DyC,UAAU,eAEZ,kBAACoB,GAAA,EAAD,CACEE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,kBAINpF,KAAK,QACLsE,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAOzD,OACtBxB,KAAK,SACL0G,aAAcT,GAAwBA,EAAqBzE,MAC3DwC,UAAU,aACV8B,WAAYb,EAAOxD,OAAS,6DAE9B,kBAAC2D,GAAA,EAAD,CACEE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,kBAINpF,KAAK,QACLrB,KAAK,SACL2F,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAOxD,OACtBuC,UAAU,aACV0C,aAAcT,GAAwBA,EAAqBxE,MAC3DqE,WAAYb,EAAOxD,OAAS,6DAE9B,kBAACsE,GAAA,EAAD,CAAQ/F,KAAK,UAAUuG,M,2CC1IhBK,OARf,SAAuBrD,GACrB,OACE,yBAAKS,UAAU,aACb,4BAAKT,EAAMtB,UAAUZ,QCUZwF,OAZf,SAA+BtD,GAC7B,IAAM9D,EAAWyG,cAMjB,OACE,uBAAGlC,UAAU,yBAAyBwC,MAAO,CAAEM,MAAO,OAAS7C,QAAS,kBAL1C7C,EAKuEmC,EAAMnC,QAL5DW,EAKqEwB,EAAMwD,iBAJ1HtH,EAASiD,EAAqBtB,EAASW,IADV,IAACX,EAAiBW,MCEpCiF,OANf,SAA+BzD,GAC7B,OACE,uBAAGS,UAAU,oBAAoBC,QAAS,kBAAMV,EAAM0D,gBAAgB1D,EAAMtB,eC0BjEiF,OAtBf,SAAgC3D,GAC9B,IAAM9D,EAAWyG,cAEXiB,EAAwB,SAAC/F,EAAiBW,EAAqBN,GACnEhC,EAASqC,EAAoBV,EAASW,EAAaN,KAWrD,OACE,kBAACsE,GAAA,EAAD,CAAQ9B,QAA6B,QAApBV,EAAM6D,UATR,WACfD,EAAsB5D,EAAMnC,QAASmC,EAAMxB,YAAawB,EAAM9B,MAAQ,IAGlD,WACpB0F,EAAsB5D,EAAMnC,QAASmC,EAAMxB,YAAawB,EAAM9B,MAAQ,KAKpE,uBAAGuC,UAAS,cAA6B,QAApBT,EAAM6D,UAAsB,iBAAmB,kBAAxD,cCwCHC,OAxDf,SAAuB9D,GAAe,IAC5B5B,EAAU4B,EAAV5B,MAER,OACE,oCACE,6BAASqC,UAAU,kBACjB,yBAAKA,UAAU,0BACb,kBAAC+B,GAAA,EAAD,CAAQ9B,QAASV,EAAM+D,iBACrB,uBAAGtD,UAAU,kBAGfrC,EAAM4F,YAAYC,OAChB7F,EAAM4F,YAAYE,KAAI,SAACxF,GAAD,OACtB,yBAAK+B,UAAU,qCAAqC0D,IAAKzF,EAAUoE,IACjE,yBAAKrC,UAAU,0BACb,kBAAC,GAAD,CAAe/B,UAAWA,IAC1B,yBAAK+B,UAAU,gBACb,kBAAC,GAAD,CACEiD,gBAAiB1D,EAAM0D,gBACvBhF,UAAWA,IAEb,kBAAC,GAAD,CAAuBb,QAASO,EAAM0E,GAAIU,YAAa9E,EAAUoE,OAGrE,yBAAKrC,UAAU,mBACb,kBAAC,GAAD,CACE5C,QAASO,EAAM0E,GACftE,YAAaE,EAAUoE,GACvB5E,MAAOQ,EAAUR,MACjB2F,UAAU,QAEZ,4BACGnF,EAAUR,MADb,UAIA,kBAAC,GAAD,CACEL,QAASO,EAAM0E,GACftE,YAAaE,EAAUoE,GACvB5E,MAAOQ,EAAUR,MACjB2F,UAAU,kBAMhB,4BACGzF,EAAMN,KADT,mF,OCeGsG,OA3Df,SAAkBpE,GAAe,IAAD,EACMqE,oBAAS,GADf,oBACvBC,EADuB,KACVC,EADU,OAE0BF,qBAF1B,oBAEvB3B,EAFuB,KAED8B,EAFC,OAISC,aAAY,SAACtD,GAAD,OAA8BA,EAAMzC,aAA/EgG,EAJsB,EAItBA,aAAcC,EAJQ,EAIRA,aAEdvG,EAAU4B,EAAV5B,MAWFwG,EAAa,WACjBJ,OAAwBK,GACxBN,GAAa,IAkBf,OAfAO,qBAAU,WACRC,KAAMC,cAAc,QAEhBN,IAAiB9E,IACnBgF,IACIF,IAAiB9E,IACrBX,MAAM,yHAAD,OAAgCyF,IAEnCC,IAAiB/E,IACnBgF,IACID,IAAiB/E,IACrBX,MAAM,wHAAD,OAA+B0F,MAErC,CAACD,EAAcC,IAGhB,yBACElE,UAAU,YAEV,kBAAC,KAAD,CACEwE,OAAQX,EACRY,eAAgBN,EAChBnE,UAAU,eACV0E,iBAAiB,wBAEjB,kBAAC,GAAD,CAA6BtH,QAASO,EAAM0E,GAAIJ,qBAAsBA,EAAsBjG,KAAMiG,EAAuB,SAAW,YAEtI,4BAAKtE,EAAMN,MACX,kBAAC,GAAD,CACEM,MAAOA,EACPsF,gBA5CkB,SAAChF,GACvB8F,EAAwB9F,GACxB6F,GAAa,IA2CTR,gBAxCkB,WACtBQ,GAAa,Q,6BC2DFa,OAvEf,SAAqBpF,GAAe,IAAD,EAG7BuB,eADFC,EAF+B,EAE/BA,SAAUC,EAFqB,EAErBA,aAAcC,EAFO,EAEPA,OAO1B,OACE,oCACE,0BAAMC,SAAUF,GANH,SAACjF,GAAD,OAA0BwD,EAAMqF,SAC/C7I,EAAKT,MAAOS,EAAKR,SAAUQ,EAAKP,cAM5B,kBAAC4F,GAAA,EAAD,CACE/D,KAAK,QACLgE,YAAY,qBACZC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,QAINC,QAAQ,WACRC,SAAUZ,EAAS,CACjBa,SAAU,CAAEiD,OAAO,EAAMC,QAAS,kEAClCC,QAAS,CAEPF,MAAO,oCACPC,QAAS,kFAGb1I,MAAOyF,QAAQZ,EAAO3F,OACtBwG,WAAYb,EAAO3F,OAAS2F,EAAO3F,MAAMwJ,UAE3C,kBAAC1D,GAAA,EAAD,CACE/D,KAAK,WACLgE,YAAY,eACZC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,QAINC,QAAQ,WACRC,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAO1F,UACtBuG,WAAYb,EAAO1F,UAAY,6DAEjC,kBAAC6F,GAAA,EAAD,CACE/D,KAAK,WACLgE,YAAY,2BACZC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,QAINzF,KAAK,WACL0F,QAAQ,WACRC,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAOzF,UACtBsG,WAAYb,EAAOzF,UAAY,yEAEjC,kBAACuG,GAAA,EAAD,CAAQ/F,KAAK,UAAb,6C,OC0BOgJ,OAxGf,WACE,OACE,yBAAKhF,UAAU,cACb,iCACE,wBAAIA,UAAU,eAAd,mCACA,4BACE,oEACA,4BACE,uBACEA,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,iCAE1B,IAJH,iBAQF,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,qCAE1B,IAJH,iBAQF,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,+BAE1B,IAJH,iBAQF,6BACA,mEACA,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,iCAE1B,IAJH,iBAQF,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,sCAE1B,IAJH,iBAQF,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,kCAE1B,IAJH,iBAQF,4BACE,uBACEjF,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,iCAE1B,IAJH,mBAUN,iCACE,wBAAIjF,UAAU,eAAd,UACA,4BACE,4BACE,uBACEA,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,yCAF7B,sCASN,iCACE,wBAAIjF,UAAU,eAAd,SACA,4BACE,4BACE,uBACEA,UAAU,YACVC,QAAS,kBAAM1B,OAAO0G,KAAK,uCAF7B,uC,uKCPGC,OAnEf,SAAiB3F,GAAe,IAAD,IACrBhE,EAAagE,EAAM4F,KAAKrJ,KAAxBP,SACF6J,EAAa,UAAG7F,EAAM4F,KAAKlH,iBAAd,aAAG,EAAsBZ,KACtCgI,EAAc,UAAG9F,EAAM4F,KAAKlH,iBAAd,aAAG,EAAsBqH,WACvCC,EAAa,IAAIC,KAAKjG,EAAM4F,KAAKM,YAAaC,iBAiCpD,OACE,yBAAK1F,UAAU,WACb,kBAAC2F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYhD,MAAM,iBAAiByC,IAErC,kBAACQ,GAAA,EAAD,KAvBa,WAEnB,OAAQxG,EAAM4F,KAAKa,QACjB,IAAK,SACH,OAAO,kBAAC,KAAD,MACT,IAAK,SACH,OAAO,kBAAC,KAAD,MACT,IAAK,SACH,OAAO,kBAAC,KAAD,MACT,IAAK,QACH,OAAO,kBAAC,KAAD,MACT,QACE,OAAO,kBAAC,KAAD,OAYFC,GACD,kBAACC,GAAA,EAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,UAAW,EAAGrG,UAAU,eAC7B,kBAAC8F,GAAA,EAAD,CAAYpE,QAAQ,KAAK4E,UAAU,MA5CtB,WACvB,OAAQ/G,EAAM4F,KAAKa,QACjB,IAAK,SACH,MAAM,GAAN,OAAUX,EAAV,kBAA6BD,EAA7B,iBACF,IAAK,SACH,MAAM,GAAN,OAAUC,EAAV,wBAA8BD,EAA9B,8BACF,IAAK,SACH,MAAM,GAAN,OAAUC,EAAV,wBAA8BD,EAA9B,iBACF,IAAK,QACH,MAAM,GAAN,OAAUC,EAAV,wBAA8BD,EAA9B,oCACF,QACE,MAAM,GAAN,OAAUC,EAAV,wBAA8BD,EAA9B,+BAkCSmB,GACA,KAEH,kBAACT,GAAA,EAAD,eAEGvK,IAGL,kBAACuK,GAAA,EAAD,W,OCzBGU,OAzCf,SAAyBjH,GACvB,IAAM9D,EAAWyG,cADoB,EAYjCpB,eADFC,EAXmC,EAWnCA,SAAUC,EAXyB,EAWzBA,aAAcC,EAXW,EAWXA,OAO1B,OACE,0BAAMjB,UAAU,oBAAoBkB,SAAUF,GAL/B,SAACjF,GAXI,IACpBc,EACAQ,EADAR,EAWc0C,EAAM1C,QAVpBQ,EAU6BtB,EAAKsB,KARlC5B,EAASsD,EAAYlC,EAASQ,QAa5B,kBAAC+D,GAAA,EAAD,CACE/D,KAAK,OACLiE,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,wBAAIe,MAAO,CAAEC,YAAa,QAA1B,sCAINd,SAAUZ,EAAS,CAAEa,UAAU,IAC/BxF,MAAOyF,QAAQZ,EAAO5D,MACtByE,WAAYb,EAAO5D,MAAQ,wEAC3B2C,UAAU,eAEZ,kBAAC+B,GAAA,EAAD,CAAQ/F,KAAK,UACX,uBAAGgE,UAAU,yB,yCCoBNyG,OAnDf,SAAuBlH,GAAe,IAAD,EACCqE,oBAAS,GADV,oBAC5BC,EAD4B,KACfC,EADe,OAGFE,aAAY,SAACtD,GAAD,OAA8BA,EAAMzC,aAAzEgG,EAH2B,EAG3BA,aAAcyC,EAHa,EAGbA,OAChBjL,EAAWyG,cAgBjB,OARAmC,qBAAU,WANS,IACjBxH,IAMW0C,EAAM1C,QAJjBpB,EAASmB,EAASC,IAKdoH,IAAiB9E,IACnB2E,GAAa,KAGd,CAACG,IAGF,oCACE,kBAAC,KAAD,CACEO,OAAQX,EACRY,eAAgB,kBAAMX,GAAa,IACnC9D,UAAU,eACV0E,iBAAiB,wBAEjB,kBAAC,GAAD,CAAiB7H,QAAS0C,EAAM1C,WAElC,yBAAKmD,UAAU,oBACb,wBAAIA,UAAU,sBAAd,gBACA,kBAAC,KAAD,CAAQA,UAAU,SAAS2G,MAAI,EAACC,aAAc,IAAKC,eAAgB,EAAGC,UAAU,GAC7EjF,QAAQ6E,IAAWA,EAAOjD,KAAI,SAAC9F,GAAD,OAAW,kBAAC,GAAD,CAAUA,MAAOA,EAAO+F,IAAK/F,EAAM0E,QAC7E,yBACErC,UAAU,mBACVwC,MAAO,CACLuE,QAAS,OACTC,eAAgB,WAGlB,kBAACjF,GAAA,EAAD,CAAQ/B,UAAU,eAAeC,QAAS,kBAAM6D,GAAa,KAC3D,uBAAG9D,UAAU,4BCjDZiH,G,uKARX,OACE,yBAAKjH,UAAU,mBAAf,uC,GAHuBQ,aCuDd0G,I,yDApCb,WAAY3H,GAAe,IAAD,8BACxB,cAAMA,IACDmB,MAAQ,CACXyE,KAAM,GACNgC,aAAc/H,IAJQ,E,gEAQL,IAAD,OAClB1D,IAAMoB,IAAN,wBAA2BwC,KAAKC,MAAM1C,QAAtC,oBACGjB,MAAK,SAACC,GACc,MAAfA,EAAIU,QACN,EAAK6K,SAAS,CAAEjC,KAAMtJ,EAAIE,KAAMoL,aAAc/H,U,+BAK5C,IAAD,EACwBE,KAAKoB,MAA5ByE,EADD,EACCA,KAAMgC,EADP,EACOA,aACRE,EAAUlC,EAAK1B,KAAI,SAAC6D,GAAD,OACvB,yBAAKtH,UAAU,YACb,kBAAC,GAAD,CACE0D,IAAK4D,EAAIjF,GACT8C,KAAMmC,QAKZ,OACE,yBAAKtH,UAAU,iBACZmH,IAAiB/H,IAAkCiI,O,GA/BjC7G,cCRZ+G,G,uKARX,OACE,yBAAKvH,UAAU,aAAf,gE,GAHiBQ,aC2FRgH,I,yDArEb,WAAYjI,GAAe,IAAD,8BACxB,cAAMA,IACDmB,MAAQ,CACX+G,UAAW,GAHW,E,qDAOhB,IAAD,OACD5K,EAAU6K,OAAOpI,KAAKC,MAAMoI,MAAMC,OAAOvF,IAE3CwF,EAAO,KACX,OAAQvI,KAAKoB,MAAM+G,WACjB,KAAK,EACHI,EAAO,kBAAC,GAAD,MACP,MACF,KAAK,EACHA,EAAO,kBAAC,GAAD,CAAc/H,QAASR,KAAKC,MAAMO,QAASjD,QAASA,IAC3D,MACF,KAAK,EACHgL,EAAO,kBAAC,GAAD,MACP,MACF,QACEA,EAAO,kBAAC,GAAD,CAAe/H,QAASR,KAAKC,MAAMO,QAASjD,QAASA,IAGhE,OACE,yBAAKmD,UAAU,aACb,yBACEA,UAAU,aAEV,yBACEA,UAAU,WACVqC,GAAG,gBACHpC,QAAS,kBAAM,EAAKmH,SAAS,CAAEK,UAAW,KAC1CjF,MAAgC,IAAzBlD,KAAKoB,MAAM+G,UAAkB,CAAEK,gBAAiB,UAAa,IAJtE,mCAQA,yBACE9H,UAAU,WACVqC,GAAG,WACHpC,QAAS,kBAAM,EAAKmH,SAAS,CAAEK,UAAW,KAC1CjF,MAAgC,IAAzBlD,KAAKoB,MAAM+G,UAAkB,CAAEK,gBAAiB,UAAa,IAJtE,yCAQA,yBACE9H,UAAU,WACVqC,GAAG,eACHpC,QAAS,kBAAM,EAAKmH,SAAS,CAAEK,UAAW,KAC1CjF,MAAgC,IAAzBlD,KAAKoB,MAAM+G,UAAkB,CAAEK,gBAAiB,UAAa,IAJtE,4BAQA,yBACE9H,UAAU,WACVqC,GAAG,iBACHpC,QAAS,kBAAM,EAAKmH,SAAS,CAAEK,UAAW,KAC1CjF,MAAgC,IAAzBlD,KAAKoB,MAAM+G,UAAkB,CAAEK,gBAAiB,UAAa,IAJtE,iBASDD,O,GAhEcrH,cC+CRuH,OA5Df,WAAsB,IAAD,EAC2BnE,oBAAS,GADpC,oBACZoE,EADY,KACKC,EADL,KAIbxM,EAAWyG,cAJE,EAKmB8B,aAAY,SAACtD,GAAD,OAA8BA,EAAM5E,QAA9E8E,EALW,EAKXA,YAAasH,EALF,EAKEA,aAwCrB,OA9BA7D,qBAAU,WACJzD,IAAgB1B,IAClBX,OAAO6B,SAASC,SACZO,IAAgB1B,KACpBV,MAAM,yEACND,OAAO6B,SAASC,UACZO,IAAgB1B,KACpBV,MAAM,4FACND,OAAO6B,SAASC,UACZO,IAAgB1B,KACpBV,MAAM,4FACND,OAAO6B,SAASC,UAGd6H,IAAiBhJ,KACnBV,MAAM,4FACND,OAAO6B,SAASC,UACZ6H,IAAiBhJ,IACrBV,MAAM,6FACF0J,IAAiBhJ,IACrBV,MAAM,mIACF0J,IAAiBhJ,IACrBV,MAAM,mEACF0J,IAAiBhJ,IACrBV,MAAM,mEACF0J,IAAiBhJ,IACrBV,MAAM,mIAEP,CAACoC,EAAasH,IAGf,6BACE,kBAAC,GAAD,CAAO/G,QAxCK,SAAC5F,EAAkBC,GACjCC,EAASgB,EAAMlB,EAAUC,OAwCvB,4BACEyE,QA/CY,kBAAMgI,GAAmB,IAgDrCjM,KAAK,UAFP,2BAKG,KAEFgM,GAAmB,kBAAC,GAAD,CAAapD,SA5CpB,SAACtJ,EAAeC,EAAkBC,GACjDC,EAASJ,EAAOC,EAAOC,EAAUC,SCLtB2M,I,8KAVX,OACE,yBAAKnI,UAAU,WACb,8BACE,kBAAC,GAAD,Y,GALaQ,cCoFR4H,OAhFf,SAAmB7I,GAAe,IAAD,EACHqE,qBADG,oBACxByE,EADwB,KAChBC,EADgB,OAES1E,mBAAS,IAFlB,oBAExB2E,EAFwB,KAEVC,EAFU,OAGyB5E,mBAAS,IAHlC,oBAGxB6E,EAHwB,KAGFC,EAHE,KAK/BrE,qBAAU,WAAO,IAETsE,EADkBjN,IAAhBkN,YACmBD,SAK3B,OAHAjN,IAAMoB,IAAI,iBAAkB,CAAE+L,YAAaF,EAAOG,QAC/ClN,MAAK,SAACC,GAAD,OAASyM,EAAUzM,EAAIE,SAExB,WACL4M,EAAOI,YAER,IAEH,IAAMC,EAAc,SAACnM,GACnB,IAAMoM,EAAG,gBAAYpM,GACrB0C,EAAMO,QAAQC,KAAKkJ,IAefC,EAAc,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAQ5E,KAAI,SAACzG,EAAOmM,GAAR,OACjC,yBAAKzF,IAAKyF,GACR,4BACGnM,EAAMK,MAET,4BACGL,EAAMoM,cAET,4BACEpN,KAAK,SACLiE,QAAS,kBAAM+I,EAAYhM,EAAMqF,MAFnC,4BAMA,iCAIJ,OACE,8BACE,iCACE,0BAAMnB,SAjCQ,SAACmI,GACnBA,EAAMC,iBACN5N,IAAMC,KAAK,iBAAkB,CAAE0B,KAAMkL,EAAca,aAAcX,IAC9D7M,MAAK,SAACC,GAAS,IACNE,EAASF,EAATE,KACRiN,EAAYjN,EAAKsG,OAElBnG,OAAM,WACLqC,OAAOC,MAAM,2JA0BX,+CAEE,2BACExC,KAAK,OACLuN,SAAU,SAACC,GAAD,OAAOhB,EAAgBgB,EAAEvN,OAAO4I,WAG9C,+CAEE,2BACE7I,KAAK,OACLuN,SAAU,SAACC,GAAD,OAAOd,EAAwBc,EAAEvN,OAAO4I,WAGtD,2BAAO7I,KAAK,SAAS6I,MAAM,sBAAOlC,UAAW4F,MAGjD,iCACGW,K,OClDMO,OAlBf,SAAalK,GACX,OACE,yBAAKS,UAAU,OACb,kBAAC,IAAD,CAAiBF,QAASP,EAAMO,SAC9B,kBAAC,GAAD,CAAQA,QAASP,EAAMO,UACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,IAAIrD,UAAW8B,GAAWwB,OAAQrK,EAAMO,UAC1D,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,YAAYrD,UAAWkB,GAAU1H,QAASP,EAAMO,UAClE,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,SAASrD,UAAWyB,KACtC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,QAAQrD,UAAW6B,KACrC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASrD,UAAW8B,GAAWtI,QAASP,EAAMO,UAChE,kBAAC,IAAD,CAAU4J,OAAK,EAACG,GAAG,eCdThI,QACW,cAA7BtD,OAAO6B,SAAS0J,UAEkB,UAA7BvL,OAAO6B,SAAS0J,UAEhBvL,OAAO6B,SAAS0J,SAASnC,MAC1B,2D,gDCRAoC,GAA0B,CAC9BxJ,GAAI,GACJ2H,aAAchJ,EACd0B,YAAa1B,EACbiB,aAAcjB,EACdU,YAAaV,GAyDA8K,GAtDK,WAAsD,IAArDtJ,EAAoD,uDAA5CqJ,GAAc/D,EAA8B,uCACjEjK,EAAOiK,EAAO/J,OACpB,OAAQ+J,EAAOhK,MAEb,KAAKb,EACH,OAAO,6BACFuF,GADL,IAEEwH,aAAchJ,KAElB,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBwH,aAAchJ,KACnC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBwH,aAAchJ,KACnC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBwH,aAAchJ,KACnC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBwH,aAAchJ,KACnC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBwH,aAAchJ,KAGnC,KAAK/D,EACH,OAAO,6BACFuF,GADL,IAEEE,YAAa1B,GACbqB,GAAIxE,IAER,KAAKZ,EACH,OAAO,6BAAKuF,GAAZ,IAAmBE,YAAa1B,KAClC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBE,YAAa1B,KAClC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBE,YAAa1B,KAGlC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBP,aAAcjB,KACnC,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBP,aAAcjB,KAGnC,KAAK/D,EACH,OAAO,6BACFuF,GADL,IAEEH,GAAIxE,EACJ6D,YAAaV,KAEjB,KAAK/D,EACH,OAAO,6BAAKuF,GAAZ,IAAmBd,YAAaV,KAClC,QACE,OAAO,gBAAKwB,KCxDZqJ,GAA+B,CACnC9F,aAAc9E,GACd8K,UAAW9K,GACX+K,aAAc/K,GACdgL,YAAahL,GACb+E,aAAc/E,GACduH,OAAQ,IAGJ0D,GAAqB,CACzBhP,EACAA,EACAA,GAGIiP,GAAyB,CAC7BjP,EACAA,GA6GakP,OA1Gf,WAAiF,IAAvD5J,EAAsD,uDAA9CqJ,GAAc/D,EAAgC,uCAC9E,GAAIA,EAAOhK,OAASZ,EAAsC,CACxD,IAAM4B,EAAQgJ,EAAO/J,OACrB,OAAO,6BACFyE,GADL,IAEEuJ,UAAW9K,GACXuH,OAAQ1J,EAAM0J,SAIlB,GAAI0D,GAAmBG,SAASvE,EAAOhK,MAAO,CAAC,IACvC0K,EAAWhG,EAAXgG,OACA3K,EAAOiK,EAAO/J,OAGpB,OAFAyK,EAASA,EAAOjD,KAAI,SAAC9F,GAAD,OAAYA,EAAM0E,KAAOtG,EAAKsG,GAAKtG,EAAO4B,KAE1DqI,EAAOhK,OAASZ,GACf4K,EAAOhK,OAASZ,EACZ,6BACFsF,GADL,IAEEuD,aAAc9E,GACduH,WAGAV,EAAOhK,OAASZ,EACX,6BACFsF,GADL,IAEEwJ,aAAc/K,GACduH,WAGG,gBACFhG,GAIP,GAAI2J,GAAuBE,SAASvE,EAAOhK,MAAO,CAAC,IAC3C0K,EAAWhG,EAAXgG,OACA3K,EAAOiK,EAAO/J,OAWpB,OAVAyK,EAASA,EAAOjD,KAAI,SAAC9F,GACnB,GAAIA,EAAM0E,KAAOtG,EAAKyO,SAAU,CAC9B,IAAMC,EAAW9M,EAGjB,OAFA8M,EAASlH,YAAc5F,EAAM4F,YAAYE,KAAI,SAACxF,GAAD,OAC3CA,EAAUoE,KAAOtG,EAAKsG,GAAKtG,EAAOkC,KAC7BwM,EAET,OAAO9M,KAGLqI,EAAOhK,OAASZ,EACX,6BACFsF,GADL,IAEEyJ,YAAahL,GACbuH,WAGAV,EAAOhK,OAASZ,EACX,6BACFsF,GADL,IAEEwD,aAAc/E,GACduH,WAGG,gBACFhG,GAIP,OAAQsF,EAAOhK,MACb,KAAKZ,EACH,OAAO,6BACFsF,GADL,IAEEuJ,UAAW9K,KAGf,KAAK/D,EACH,OAAO,6BACFsF,GADL,IAEEuD,aAAc9E,KAElB,KAAK/D,EACH,OAAO,6BACFsF,GADL,IAEEuD,aAAc9E,KAElB,KAAK/D,EACH,OAAO,6BACFsF,GADL,IAEEwJ,aAAc/K,KAGlB,KAAK/D,EACH,OAAO,6BACFsF,GADL,IAEEyJ,YAAahL,KAEjB,KAAK/D,EACH,OAAO,6BACFsF,GADL,IAEEwD,aAAc/E,KAGlB,QACE,OAAO,gBAAKuB,KC3HHgK,GALK,SAAC5K,GAAD,OAAsB6K,aAAgB,CACxD7O,KAAMkO,GACN/L,UAAW2M,GACXjK,OAAQkK,YAAc/K,MCKXA,GAAUgL,eACVC,GAAc,CARZ,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACjF,GAC7CzH,OAAO2M,QAAQ5D,IAAI,2BAA4BtB,GAC/C,IAAMmF,EAASF,EAAKjF,GAEpB,OADAzH,OAAO2M,QAAQ5D,IAAI,0BAA2B0D,EAAMI,YAC7CD,KAI2BE,KAAOC,aAAiBxL,KAI7CkL,GAFDO,aAAYb,GAAY5K,IAAU0L,KAAe,WAAf,EAAmBT,KCPnEU,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,GAAD,CAAKlL,QAASA,MAEhB6L,SAASC,eAAe,SAG1BlQ,IAAMmQ,SAASC,eAAiB,cAChCpQ,IAAMmQ,SAASE,eAAiB,YLyH1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtQ,MAAK,SAACuQ,GACLA,EAAaC,gBAEdlQ,OAAM,SAACE,GACN8O,QAAQ9O,MAAMA,EAAM0I,c","file":"static/js/main.642d7bc0.chunk.js","sourcesContent":["export const userConstants = {\n  SIGNUP_SUCCESS: 'SIGNUP_SUCCESS', // 회원 인증 메일이 전송되었습니다.\n  SIGNUP_WAITING: 'SIGNUP_WAITING', // 이메일 인증을 완료해주세요.\n  SIGNUP_FAILURE: 'SIGNUP_FAILURE', // 회원가입을 실패했습니다. 다시 시도해주세요.\n  SIGNUP_FAILURE_AUTHENTICATION: 'SIGNUP_FAILURE_AUTHENTICATION', // 회원 인증에 문제가 있습니다. 다시 시도해주세요.\n  SIGNUP_FAILURE_USERNAME: 'SIGNUP_FAILURE_USERNAME', // 이미 등록된 이름입니다.\n  SIGNUP_FAILURE_EMAIL: 'SIGNUP_FAILURE_EMAIL', // 이미 등록된 이메일입니다.\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGIN_FAILURE_INACTIVE: 'LOGIN_FAILURE_INACTIVE', // 회원 인증을 완료해주세요!\n  LOGIN_FAILURE_INFO: 'LOGIN_FAILURE_INFO', // 잘못된 이름 또는 비밀번호입니다.\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_FAILURE: 'LOGOUT_FAILURE',\n  GET_ME_SUCCESS: 'GET_ME_SUCCESS',\n  GET_ME_FAILURE: 'GET_ME_FAILURE',\n};\n\nexport const necessityConstants = {\n  CREATE_NECESSITYPLACE_SUCCESS: 'CREATE_NECESSITYPLACE_SUCCESS',\n  CREATE_NECESSITYPLACE_FAILURE: 'CREATE_NECESSITYPLACE_FAILURE',\n  CREATE_NECESSITYPLACE_FAILURE_NAME: 'CREATE_NECESSITYPLACE_FAILURE_NAME',\n  REMOVE_NECESSITYPLACE_SUCCESS: 'REMOVE_NECESSITYPLACE_SUCCESS',\n  REMOVE_NECESSITYPLACE_FAILURE: 'REMOVE_NECESSITYPLACE_FAILURE',\n  GET_HOUSE_SUCCESS: 'GET_HOUSE_SUCCESS',\n  GET_HOUSE_FAILURE: 'GET_HOUSE_FAILURE',\n  COUNT_NECESSITYPLACE_SUCCESS: 'COUNT_NECESSITYPLACE_SUCCESS',\n  COUNT_NECESSITYPLACE_FAILURE: 'COUNT_NECESSITYPLACE_FAILURE',\n  UPDATE_NECESSITYPLACE_SUCCESS: 'UPDATE_NECESSITYPLACE_SUCCESS',\n  UPDATE_NECESSITYPLACE_FAILURE: 'UPDATE_NECESSITYPLACE_FAILURE',\n  CREATE_PLACE_FAILURE: 'CREATE_PLACE_FAILURE',\n  CREATE_PLACE_SUCCESS: 'CREATE_PLACE_SUCCESS',\n};\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport { userConstants } from '../actionTypes';\nimport { User } from '../../../api';\n\nconst signupSuccess = (user: User) => ({\n  type: userConstants.SIGNUP_SUCCESS,\n  target: user,\n});\n\nconst signupFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    case 400:\n      actionType = userConstants.SIGNUP_FAILURE_USERNAME;\n      break;\n    case 401:\n      actionType = userConstants.SIGNUP_WAITING;\n      break;\n    case 409:\n      actionType = userConstants.SIGNUP_FAILURE_EMAIL;\n      break;\n    case 503:\n      actionType = userConstants.SIGNUP_FAILURE_AUTHENTICATION;\n      break;\n    default:\n      actionType = userConstants.SIGNUP_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const signUp = (\n  email: string, username: string, password: string,\n) => (dispatch: Dispatch) => axios.post('/api/v1/user/', { email, username, password })\n  .then((res: AxiosResponse<User>) => dispatch(signupSuccess(res.data)))\n  .catch((err) => dispatch(signupFailure(err)));\n\nconst loginSuccess = (user: User) => ({\n  type: userConstants.LOGIN_SUCCESS,\n  target: user,\n});\n\nconst loginFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    case 401:\n      actionType = userConstants.LOGIN_FAILURE_INACTIVE;\n      break;\n    case 403:\n      actionType = userConstants.LOGIN_FAILURE_INFO;\n      break;\n    default:\n      actionType = userConstants.LOGIN_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const login = (\n  username: string, password: string,\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\n  .then((res: AxiosResponse<User>) => dispatch(loginSuccess(res.data)))\n  .catch((err) => dispatch(loginFailure(err)));\n\nconst logoutSuccess = () => ({\n  type: userConstants.LOGOUT_SUCCESS,\n  target: null,\n});\n\nconst logoutFailure = (error: AxiosError) => ({\n  type: userConstants.LOGOUT_FAILURE,\n  target: error,\n});\n\nexport const logout = () => (dispatch: Dispatch) => axios.get('/api/v1/user/logout/')\n  .then(() => dispatch(logoutSuccess()))\n  .catch((err) => dispatch(logoutFailure(err)));\n\nconst getMeSuccess = (user: User) => ({\n  type: userConstants.GET_ME_SUCCESS,\n  target: user,\n});\n\nconst getMeFailure = (error: AxiosError) => ({\n  type: userConstants.GET_ME_FAILURE,\n  target: error,\n});\n\nexport const getMe = () => (dispatch: Dispatch) => axios.get('/api/v1/user/me/')\n  .then((res: AxiosResponse<User>) => dispatch(getMeSuccess(res.data)))\n  .catch((err) => dispatch(getMeFailure(err)));\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport { necessityConstants } from '../actionTypes';\nimport { House, Necessity, Place } from '../../../api';\n\nconst getHouseSuccess = (house: House) => ({\n  type: necessityConstants.GET_HOUSE_SUCCESS,\n  target: house,\n});\n\nconst getHouseFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.GET_HOUSE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const getHouse = (houseId: number) => (dispatch: Dispatch) => axios.get(`/api/v1/house/${houseId}/`)\n  .then((getResponse: AxiosResponse<House>) => {\n    dispatch(getHouseSuccess(getResponse.data));\n  })\n  .catch((getError) => dispatch(getHouseFailure(getError)));\n\nconst createNecessityPlaceSuccess = (place: Place) => ({\n  type: necessityConstants.CREATE_NECESSITYPLACE_SUCCESS,\n  target: place,\n});\n\nconst createNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    case 409:\n      actionType = necessityConstants.CREATE_NECESSITYPLACE_FAILURE_NAME;\n      break;\n    default:\n      actionType = necessityConstants.CREATE_NECESSITYPLACE_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const createNecessityPlace = (\n  placeId: number, name: string, option: string, description: string, price: number, count: number,\n) => (dispatch: Dispatch) => axios.post(`/api/v1/place/${placeId}/necessity/`, {\n  placeId, name, option, description, price, count,\n})\n  .then((createResponse: AxiosResponse<Place>) => {\n    dispatch(createNecessityPlaceSuccess(createResponse.data));\n  })\n  .catch((createError) => dispatch(createNecessityPlaceFailure(createError)));\n\nconst countNecessityPlaceSuccess = (necessity: Necessity) => ({\n  type: necessityConstants.COUNT_NECESSITYPLACE_SUCCESS,\n  target: necessity,\n});\n\nconst countNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.COUNT_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const countNecessityPlace = (\n  placeId: number, necessityId: number, count: number,\n) => (dispatch: Dispatch) => axios.put(`/api/v1/place/${placeId}/necessity/${necessityId}/count/`, { count })\n  .then((countResponse: AxiosResponse<Necessity>) => {\n    dispatch(countNecessityPlaceSuccess(countResponse.data));\n  })\n  .catch((countError) => dispatch(countNecessityPlaceFailure(countError)));\n\nconst updateNecessityPlaceSuccess = (necessity: Necessity) => ({\n  type: necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS,\n  target: necessity,\n});\n\nconst updateNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  window.alert('수정 내역을 다시 확인해주세요.');\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.UPDATE_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const updateNecessityPlace = (\n  placeId: number, necessityId: number, description: string, price?: number, count?: number,\n) => (dispatch: Dispatch) => axios.put(`/api/v1/place/${placeId}/necessity/${necessityId}/`, { description, price, count })\n  .then((updateResponse: AxiosResponse<Necessity>) => {\n    dispatch(updateNecessityPlaceSuccess(updateResponse.data));\n  })\n  .catch((updateError) => dispatch(updateNecessityPlaceFailure(updateError)));\n\nconst removeNecessityPlaceSuccess = (place: Place) => {\n  window.alert('삭제되었습니다!');\n  return {\n    type: necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS,\n    target: place,\n  };\n};\n\nconst removeNecessityPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      window.alert('실패!');\n      actionType = necessityConstants.REMOVE_NECESSITYPLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const removeNecessityPlace = (\n  placeId: number, necessityId: number,\n) => (dispatch: Dispatch) => axios.delete(`/api/v1/place/${placeId}/necessity/${necessityId}/`)\n  .then((removeResponse: AxiosResponse<Place>) => {\n    dispatch(removeNecessityPlaceSuccess(removeResponse.data));\n  })\n  .catch((removeError) => dispatch(removeNecessityPlaceFailure(removeError)));\n\nconst createPlaceSuccess = (place: Place) => ({\n  type: necessityConstants.CREATE_PLACE_SUCCESS,\n  target: place,\n});\n\nconst createPlaceFailure = (error: AxiosError) => {\n  let actionType = null;\n  switch (error.response?.status) {\n    default:\n      actionType = necessityConstants.CREATE_PLACE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const createPlace = (houseId: number, name: string) => (dispatch: Dispatch) => axios.post(`/api/v1/house/${houseId}/place/`, { name }).then((createResponse: AxiosResponse<Place>) => {\n  dispatch(createPlaceSuccess(createResponse.data));\n})\n  .catch((createError) => dispatch(createPlaceFailure(createError)));\n","import {\n  signUp,\n  login,\n  logout,\n  getMe,\n} from './user/user';\n\nimport {\n  createNecessityPlace,\n  getHouse,\n  removeNecessityPlace,\n  countNecessityPlace,\n  updateNecessityPlace,\n} from './necessity/necessity';\n\nexport const userActions = {\n  signUp,\n  login,\n  logout,\n  getMe,\n};\n\nexport const necessityActions = {\n  createNecessityPlace,\n  getHouse,\n  removeNecessityPlace,\n  countNecessityPlace,\n  updateNecessityPlace,\n};\n","export const userStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_AUTHENTICATION: 'FAILURE_AUTHENTICATION',\n  FAILURE_INACTIVE: 'FAILURE_INACTIVE',\n  FAILURE_INFO: 'FAILURE_INFO',\n  FAILURE_USERNAME: 'FAILURE_USERNAME',\n  FAILURE_EMAIL: 'FAILURE_EMAIL',\n};\n\nexport const necessityStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_NAME: 'FAILURE_NAME',\n};\n\nexport const necessityUserLogStatus = {\n  NONE: 'NONE',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n};\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\n\nimport { userActions } from '../../store/actions';\nimport { userStatus } from '../../constants/constants';\nimport './Header.css';\nimport { User } from '../../api';\n\ninterface Props {\n  history: History;\n  pathname: string;\n  loginStatus: string;\n  logoutStatus: string;\n  getMeStatus: string;\n  me: User;\n  onGetMe: () => any;\n  onLogout: () => any;\n}\n\nclass Header extends Component<Props> {\n  componentDidMount() {\n    this.props.onGetMe();\n  }\n\n  render() {\n    let whereToGo = '/info';\n    let whereToGoDisplay = '오렌지농장 소개';\n    let logoutButton = null;\n\n    // if not logged-in, userStatus would be FAILURE\n    if (this.props.getMeStatus === userStatus.FAILURE) {\n      if (this.props.pathname === '/info') {\n        // anonymous user can access InfoPage\n        whereToGo = '/intro';\n        whereToGoDisplay = '로그인';\n      } else {\n        // force anonymous user to redirect to IntroPage\n        this.props.history.push('/intro');\n      }\n    } else {\n      // if logged-in, there should be logout button\n      logoutButton = (\n        <li className=\"main-header-li\">\n          <button\n            className=\"logout-button\"\n            type=\"button\"\n            onClick={() => this.props.onLogout()\n              .then(() => {\n                if (this.props.logoutStatus === userStatus.SUCCESS) {\n                  this.props.history.push('/intro');\n                  window.location.reload();\n                }\n              })}\n          >\n            로그아웃\n          </button>\n        </li>\n      );\n      if (this.props.pathname === '/intro') {\n      // force logged-in user to redirect to MainPage\n        this.props.history.push('/');\n      } else if (this.props.pathname !== '/') {\n        whereToGo = '/';\n        whereToGoDisplay = '메인 페이지';\n      }\n    }\n\n    let helloUser = null;\n    if (this.props.pathname !== '/intro' && this.props.pathname !== '/info') {\n      helloUser = (\n        <li className=\"main-header-li main-header-li-hello\">\n          {this.props.me.username}\n          님 안녕하세요!&nbsp;&nbsp;\n        </li>\n      );\n    }\n\n    return (\n      <ul className=\"main-header\">\n        {helloUser}\n        <li className=\"main-header-li\">\n          <button\n            className=\"header-page-button\"\n            type=\"button\"\n            onClick={() => this.props.history.push(whereToGo)}\n          >\n            {whereToGoDisplay}\n          </button>\n        </li>\n        {logoutButton}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  pathname: state.router.location.pathname,\n  getMeStatus: state.user.getMeStatus,\n  loginStatus: state.user.loginStatus,\n  logoutStatus: state.user.logoutStatus,\n  me: state.user.me,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onGetMe: () => dispatch(userActions.getMe()),\n  onLogout: () => dispatch(userActions.logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useForm } from 'react-hook-form';\n\nimport { Button } from '@material-ui/core';\nimport './Login.css';\n\ninterface Props {\n  onLogin: (username: string, password: string) => any;\n}\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\nfunction Login(props: Props) {\n  const {\n    register, handleSubmit, errors,\n  } = useForm<LoginFormData>();\n\n  const onSubmit = (data: LoginFormData) => props.onLogin(data.username, data.password);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          name=\"username\"\n          placeholder=\"이름\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountCircle />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.username)}\n          helperText={errors.username && '이름을 입력해주세요!'}\n        />\n        <TextField\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon />\n              </InputAdornment>\n            ),\n          }}\n          type=\"password\"\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.password)}\n          helperText={errors.password && '비밀번호를 입력해주세요!'}\n        />\n        <Button type=\"submit\">로그인</Button>\n      </form>\n    </>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport {\n  TextField, Button, InputAdornment,\n} from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport './NecessityCreateOrUpdateForm.css';\nimport { useDispatch } from 'react-redux';\nimport { Necessity } from '../../../api';\nimport { createNecessityPlace, updateNecessityPlace } from '../../../store/actions/necessity/necessity';\n\ntype CreateOrUpdate = 'CREATE' | 'UPDATE';\n\ninterface Props {\n  placeId: number;\n  necessityToBeUpdated?: Necessity;\n  type: CreateOrUpdate;\n}\n\ninterface NecessityCreateOrUpdateFormData {\n  name: string;\n  option: string;\n  description: string;\n  price: number;\n  count: number;\n}\n\nfunction NecessityCreateOrUpdateForm(props: Props) {\n  const { necessityToBeUpdated } = props;\n  const {\n    register, handleSubmit, errors,\n  } = useForm<NecessityCreateOrUpdateFormData>();\n\n  const dispatch = useDispatch();\n\n  const onCreateNecessityPlace = (\n    placeId: number,\n    name: string,\n    option: string,\n    description: string,\n    price: number,\n    count: number,\n  ) => {\n    dispatch(createNecessityPlace(placeId, name, option, description, price, count));\n  };\n\n  const onUpdateNecessityPlace = (\n    placeId: number,\n    necessityId: number,\n    description: string,\n    price: number,\n    count: number,\n  ) => {\n    dispatch(updateNecessityPlace(placeId, necessityId, description, price, count));\n  };\n\n  const onSubmitToCreate = (data: NecessityCreateOrUpdateFormData) => onCreateNecessityPlace(\n    props.placeId, data.name, data.option, data.description, data.price, data.count,\n  );\n\n  const onSubmitToUpdate = (data: NecessityCreateOrUpdateFormData) => onUpdateNecessityPlace(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    props.placeId, props.necessityToBeUpdated!.id, data.description, data.price, data.count,\n  );\n\n  const onSubmit = (data: NecessityCreateOrUpdateFormData) => {\n    if (props.type === 'CREATE') {\n      onSubmitToCreate(data);\n    } else {\n      onSubmitToUpdate(data);\n    }\n  };\n\n  const formTitle = props.type === 'CREATE' ? '집에 필요한 물품을 추가해보세요!' : '수정할 내용을 적어 주세요';\n  const submitIcon = props.type === 'CREATE' ? <i className=\"fas fa-plus-circle fa-4x\" /> : <i className=\"fas fa-edit fa-3x\" />;\n\n  return (\n    <>\n      <h3 className=\"create-form-title\">{formTitle}</h3>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"create-form\">\n        <TextField\n          name=\"name\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <h4 style={{ marginRight: '3em' }}>이름</h4>\n              </InputAdornment>\n            ),\n          }}\n          inputRef={register({ required: true })}\n          defaultValue={necessityToBeUpdated && necessityToBeUpdated.name}\n          disabled={Boolean(necessityToBeUpdated)}\n          error={Boolean(errors.name)}\n          helperText={errors.name && '생필품 이름을 입력해주세요!'}\n          className=\"text-input\"\n        />\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <h4 style={{ marginRight: '3em' }}>옵션</h4>\n              </InputAdornment>\n            ),\n          }}\n          name=\"option\"\n          inputRef={register}\n          defaultValue={necessityToBeUpdated && necessityToBeUpdated.option}\n          disabled={Boolean(necessityToBeUpdated)}\n          className=\"text-input\"\n        />\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <h4 style={{ marginRight: '3em' }}>설명</h4>\n              </InputAdornment>\n            ),\n          }}\n          name=\"description\"\n          inputRef={register}\n          defaultValue={necessityToBeUpdated && necessityToBeUpdated.description}\n          className=\"text-input\"\n        />\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <h4 style={{ marginRight: '3em' }}>가격</h4>\n              </InputAdornment>\n            ),\n          }}\n          name=\"price\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.price)}\n          type=\"number\"\n          defaultValue={necessityToBeUpdated && necessityToBeUpdated.price}\n          className=\"text-input\"\n          helperText={errors.count && '가격을 입력해주세요!'}\n        />\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <h4 style={{ marginRight: '3em' }}>개수</h4>\n              </InputAdornment>\n            ),\n          }}\n          name=\"count\"\n          type=\"number\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.count)}\n          className=\"text-input\"\n          defaultValue={necessityToBeUpdated && necessityToBeUpdated.count}\n          helperText={errors.count && '개수를 입력해주세요!'}\n        />\n        <Button type=\"submit\">{submitIcon}</Button>\n      </form>\n    </>\n  );\n}\n\nexport default NecessityCreateOrUpdateForm;\n","import React from 'react';\nimport { Necessity } from '../../../api';\nimport './NecessityItem.css';\n\ninterface Props {\n  necessity: Necessity;\n}\n\nfunction NecessityItem(props: Props) {\n  return (\n    <div className=\"necessity\">\n      <h4>{props.necessity.name}</h4>\n    </div>\n  );\n}\n\nexport default NecessityItem;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeNecessityPlace } from '../../../store/actions/necessity/necessity';\n\ninterface Props {\n  placeId: number;\n  necesstiyId: number;\n}\n\nfunction NecessityRemoveButton(props: Props) {\n  const dispatch = useDispatch();\n\n  const onRemoveNecessityPlace = (placeId: number, necessityId: number) => {\n    dispatch(removeNecessityPlace(placeId, necessityId));\n  };\n\n  return (\n    <i className=\"far fa-trash-alt fa-lg\" style={{ color: 'red' }} onClick={() => onRemoveNecessityPlace(props.placeId, props.necesstiyId)} />\n  );\n}\n\nexport default NecessityRemoveButton;\n","import React from 'react';\nimport { Necessity } from '../../../api';\n\ninterface Props {\n  updateNecessity: (necessity: Necessity) => void;\n  necessity: Necessity;\n}\n\nfunction NecessityUpdateButton(props: Props) {\n  return (\n    <i className=\"far fa-edit fa-lg\" onClick={() => props.updateNecessity(props.necessity)} />\n  );\n}\n\nexport default NecessityUpdateButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { countNecessityPlace } from '../../../store/actions/necessity/necessity';\n\ntype CountType = 'add' | 'subtract';\n\ninterface Props {\n  placeId: number;\n  necessityId: number;\n  count: number;\n  countType: CountType;\n}\n\nfunction NecessityCounterButton(props: Props) {\n  const dispatch = useDispatch();\n\n  const onCountNecessityPlace = (placeId: number, necessityId: number, count: number) => {\n    dispatch(countNecessityPlace(placeId, necessityId, count));\n  };\n\n  const addCount = () => {\n    onCountNecessityPlace(props.placeId, props.necessityId, props.count + 1);\n  };\n\n  const subtractCount = () => {\n    onCountNecessityPlace(props.placeId, props.necessityId, props.count - 1);\n  };\n\n  return (\n    <Button onClick={props.countType === 'add' ? addCount : subtractCount}>\n      <i className={`far ${props.countType === 'add' ? 'fa-plus-square' : 'fa-minus-square'} fa-2x`} />\n    </Button>\n  );\n}\n\nexport default NecessityCounterButton;\n","import React from 'react';\nimport './NecessityList.css';\nimport { Button } from '@material-ui/core';\nimport { Necessity, Place } from '../../../api';\nimport NecessityItem from '../NecessityItem/NecessityItem';\nimport NecessityRemoveButton from '../NecessityRemoveButton/NecessityRemoveButton';\nimport NecessityUpdateButton from '../NecessityUpdateButton/NecessityUpdateButton';\nimport NecessityCounterButton from '../NecessityCounterButton/NecessityCounterButton';\n\ninterface Props {\n  place: Place;\n  createNecessity: () => void;\n  updateNecessity: (necessity: Necessity) => void;\n}\n\nfunction NecessityList(props: Props) {\n  const { place } = props;\n\n  return (\n    <>\n      <section className=\"necessity-list\">\n        <div className=\"necessity-item-wrapper\">\n          <Button onClick={props.createNecessity}>\n            <i className=\"fas fa-plus\" />\n          </Button>\n        </div>\n        { place.necessities.length\n          ? place.necessities.map((necessity: Necessity) => (\n            <div className=\"necessity-item-and-counter-wrapper\" key={necessity.id}>\n              <div className=\"necessity-item-wrapper\">\n                <NecessityItem necessity={necessity} />\n                <div className=\"edit-wrapper\">\n                  <NecessityUpdateButton\n                    updateNecessity={props.updateNecessity}\n                    necessity={necessity}\n                  />\n                  <NecessityRemoveButton placeId={place.id} necesstiyId={necessity.id} />\n                </div>\n              </div>\n              <div className=\"counter-wrapper\">\n                <NecessityCounterButton\n                  placeId={place.id}\n                  necessityId={necessity.id}\n                  count={necessity.count}\n                  countType=\"add\"\n                />\n                <h5>\n                  {necessity.count}\n                  개\n                </h5>\n                <NecessityCounterButton\n                  placeId={place.id}\n                  necessityId={necessity.id}\n                  count={necessity.count}\n                  countType=\"subtract\"\n                />\n              </div>\n            </div>\n          ))\n          : (\n            <h2>\n              {place.name}\n              에\n              첫 생필품을 추가해보세요!\n            </h2>\n          )}\n      </section>\n    </>\n  );\n}\n\nexport default NecessityList;\n","import React, { useEffect, useState } from 'react';\nimport {\n  useSelector,\n} from 'react-redux';\nimport Modal from 'react-modal';\nimport { Necessity, Place } from '../../api';\nimport { OrangeGlobalState } from '../../store/state';\nimport NecessityList from '../Necessity/NecessityList/NecessityList';\nimport './PlaceBox.css';\nimport NecessityCreateOrUpdateForm from '../Necessity/NecessityCreateOrUpdateForm/NecessityCreateOrUpdateForm';\nimport { necessityStatus } from '../../constants/constants';\n\ninterface Props {\n  place: Place;\n}\n\nfunction PlaceBox(props: Props) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [necessityToBeUpdated, setNecessityToBeUpdated] = useState<Necessity>();\n\n  const { createStatus, updateStatus } = useSelector((state: OrangeGlobalState) => state.necessity);\n\n  const { place } = props;\n\n  const updateNecessity = (necessity: Necessity) => {\n    setNecessityToBeUpdated(necessity);\n    setModalOpen(true);\n  };\n\n  const createNecessity = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setNecessityToBeUpdated(undefined);\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    Modal.setAppElement('body');\n\n    if (createStatus === necessityStatus.SUCCESS) {\n      closeModal();\n    } if (createStatus === necessityStatus.FAILURE) {\n      alert(`생필품 생성에 실패했어요ㅠㅠ \\n 에러 메시지 : ${createStatus}`);\n    }\n    if (updateStatus === necessityStatus.SUCCESS) {\n      closeModal();\n    } if (updateStatus === necessityStatus.FAILURE) {\n      alert(`생필품 수정에 실패했어요ㅠㅠ\\n 에러 메시지 : ${updateStatus}`);\n    }\n  }, [createStatus, updateStatus]);\n\n  return (\n    <div\n      className=\"PlaceBox\"\n    >\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        className=\"create-modal\"\n        overlayClassName=\"create-modal-overlay\"\n      >\n        <NecessityCreateOrUpdateForm placeId={place.id} necessityToBeUpdated={necessityToBeUpdated} type={necessityToBeUpdated ? 'UPDATE' : 'CREATE'} />\n      </Modal>\n      <h1>{place.name}</h1>\n      <NecessityList\n        place={place}\n        updateNecessity={updateNecessity}\n        createNecessity={createNecessity}\n      />\n    </div>\n  );\n}\n\nexport default PlaceBox;\n","import React from 'react';\nimport './SignUpModal.css';\nimport { useForm } from 'react-hook-form';\nimport { Button, InputAdornment, TextField } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\ninterface Props {\n  onSignUp: (email: string, username: string, password: string) => any; // for redux dispatch\n}\n\ninterface SignUpFormData {\n  email: string;\n  username: string;\n  password: string;\n}\n\nfunction SignUpModal(props: Props) {\n  const {\n    register, handleSubmit, errors,\n  } = useForm<SignUpFormData>();\n\n  const onSubmit = (data: SignUpFormData) => props.onSignUp(\n    data.email, data.username, data.password,\n  );\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          name=\"email\"\n          placeholder=\"이메일\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MailOutlineIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"outlined\"\n          inputRef={register({\n            required: { value: true, message: '이메일을 입력해주세요!' },\n            pattern: {\n              // eslint-disable-next-line no-useless-escape\n              value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\n              message: '이메일 형식에 맞지 않습니다!',\n            },\n          })}\n          error={Boolean(errors.email)}\n          helperText={errors.email && errors.email.message}\n        />\n        <TextField\n          name=\"username\"\n          placeholder=\"이름\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountCircle />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.username)}\n          helperText={errors.username && '이름을 입력해주세요!'}\n        />\n        <TextField\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon />\n              </InputAdornment>\n            ),\n          }}\n          type=\"password\"\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.password)}\n          helperText={errors.password && '비밀번호를 입력해주세요!'}\n        />\n        <Button type=\"submit\">인증 메일 전송</Button>\n      </form>\n    </>\n  );\n}\n\nexport default SignUpModal;\n","import React from 'react';\n\nimport './StudyInfo.css';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nfunction StudyInfo() {\n  return (\n    <div className=\"study-info\">\n      <section>\n        <h2 className=\"deep-orange\">스터디 멤버</h2>\n        <ul>\n          <strong>웹 개발 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/davin111')}\n            >\n              {' '}\n              다빈\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/YeonghyeonKO')}\n            >\n              {' '}\n              영현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/JSKeum')}\n            >\n              {' '}\n              진섭\n            </a>\n          </li>\n          <br />\n          <strong>세미나 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/anneKwon')}\n            >\n              {' '}\n              민재\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/palpitate2015')}\n            >\n              {' '}\n              상현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/Eunsung-k')}\n            >\n              {' '}\n              은성\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/jadeyyun')}\n            >\n              {' '}\n              재연\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">GitHub</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/gongmyeong-study')}\n            >\n              GitHub 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">Slack</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://gongmyeongstudy.slack.com')}\n            >\n              Slack 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default StudyInfo;\n","import React from 'react';\n\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ExposureRoundedIcon from '@material-ui/icons/ExposureRounded';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Paper from '@material-ui/core/Paper';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NecessityLog } from '../../api';\nimport './LogList.css';\n\ninterface Props {\n  logs: NecessityLog;\n}\n\nfunction LogList(props: Props) {\n  const { username } = props.logs.user;\n  const necessityname = props.logs.necessity?.name;\n  const necessityplace = props.logs.necessity?.place_name;\n  const createdAt = (new Date(props.logs.created_at)).toLocaleString();\n\n  const activityCategory = () => {\n    switch (props.logs.action) {\n      case 'CREATE':\n        return `${necessityplace}에 ${necessityname} 추가`;\n      case 'UPDATE':\n        return `${necessityplace}에서 ${necessityname} 정보 수정`;\n      case 'DELETE':\n        return `${necessityplace}에서 ${necessityname} 삭제`;\n      case 'COUNT':\n        return `${necessityplace}에서 ${necessityname}의 수량 변경`;\n      default:\n        return `${necessityplace}에서 ${necessityname} 정보 수정`;\n    }\n  };\n\n  const activityIcon = () => {\n    // eslint-disable-next-line react/prop-types\n    switch (props.logs.action) {\n      case 'CREATE':\n        return <ShoppingCartIcon />;\n      case 'UPDATE':\n        return <AutorenewIcon />;\n      case 'DELETE':\n        return <DeleteForeverIcon />;\n      case 'COUNT':\n        return <ExposureRoundedIcon />;\n      default:\n        return <AutorenewIcon />;\n    }\n  };\n\n  return (\n    <div className=\"logList\">\n      <Timeline>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{createdAt}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            {activityIcon()}\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Paper elevation={3} className=\"log-message\">\n              <Typography variant=\"h5\" component=\"h1\">\n                {activityCategory()}\n                {' '}\n              </Typography>\n              <Typography>\n                by &nbsp;\n                {username}\n              </Typography>\n            </Paper>\n            <Typography />\n          </TimelineContent>\n        </TimelineItem>\n      </Timeline>\n    </div>\n  );\n}\n\nexport default LogList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './PlaceCreateForm.css';\nimport { TextField, InputAdornment, Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { createPlace } from '../../store/actions/necessity/necessity';\n\ninterface Props {\n  houseId: number;\n}\n\ninterface PlaceCreateFormData {\n  name: string;\n}\n\nfunction PlaceCreateForm(props: Props) {\n  const dispatch = useDispatch();\n\n  const onCreatePlace = (\n    houseId: number,\n    name: string,\n  ) => {\n    dispatch(createPlace(houseId, name));\n  };\n\n  const {\n    register, handleSubmit, errors,\n  } = useForm<PlaceCreateFormData>();\n\n  const onSubmit = (data: PlaceCreateFormData) => {\n    onCreatePlace(props.houseId, data.name);\n  };\n\n  return (\n    <form className=\"create-place-form\" onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        name=\"name\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <h3 style={{ marginRight: '3em' }}>새 공간 이름</h3>\n            </InputAdornment>\n          ),\n        }}\n        inputRef={register({ required: true })}\n        error={Boolean(errors.name)}\n        helperText={errors.name && '공간 이름을 입력해주세요!'}\n        className=\"text-input\"\n      />\n      <Button type=\"submit\">\n        <i className=\"fas fa-plus fa-4x\" />\n      </Button>\n    </form>\n  );\n}\n\nexport default PlaceCreateForm;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Slider from 'react-slick';\nimport Modal from 'react-modal';\nimport { History } from 'history';\nimport { Button } from '@material-ui/core';\nimport { PlaceBox, PlaceCreateForm } from '../../components';\nimport { OrangeGlobalState } from '../../store/state';\nimport './NecessityPage.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { getHouse } from '../../store/actions/necessity/necessity';\nimport { necessityStatus } from '../../constants/constants';\n\ninterface Props {\n  houseId: number;\n  history: History;\n}\n\nfunction NecessityPage(props: Props) {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const { createStatus, places } = useSelector((state: OrangeGlobalState) => state.necessity);\n  const dispatch = useDispatch();\n\n  const onGetHouse = (\n    houseId: number,\n  ) => {\n    dispatch(getHouse(houseId));\n  };\n\n  useEffect(() => {\n    onGetHouse(props.houseId);\n    if (createStatus === necessityStatus.SUCCESS) {\n      setModalOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [createStatus]);\n\n  return (\n    <>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setModalOpen(false)}\n        className=\"create-modal\"\n        overlayClassName=\"create-modal-overlay\"\n      >\n        <PlaceCreateForm houseId={props.houseId} />\n      </Modal>\n      <div className=\"placebox-wrapper\">\n        <h1 className=\"NecessityPageBlock\">집집</h1>\n        <Slider className=\"slider\" dots slidesToShow={1.6} slidesToScroll={1} infinite={false}>\n          {Boolean(places) && places.map((place) => <PlaceBox place={place} key={place.id} />)}\n          <div\n            className=\"create-place-box\"\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Button className=\"create-place\" onClick={() => setModalOpen(true)}>\n              <i className=\"fas fa-plus fa-7x\" />\n            </Button>\n          </div>\n        </Slider>\n      </div>\n    </>\n  );\n}\n\nexport default NecessityPage;\n","import React, { Component } from 'react';\n\nclass StatisticsPage extends Component {\n  render() {\n    return (\n      <div className=\"statistics-page\">\n        통계 페이지\n      </div>\n    );\n  }\n}\n\nexport default StatisticsPage;\n","import React, { Component } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { History } from 'history';\n\nimport { LogList } from '../../components';\nimport { necessityUserLogStatus } from '../../constants/constants';\nimport { NecessityLog } from '../../api';\n\nimport './TimelinePage.css';\n\ninterface Props {\n  history: History;\n  houseId: number;\n}\n\ninterface State {\n  logs: Array<NecessityLog>;\n  getLogStatus: string;\n}\n\nclass TimelinePage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logs: [],\n      getLogStatus: necessityUserLogStatus.NONE,\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`/api/v1/house/${this.props.houseId}/necessity_log/`)\n      .then((res: AxiosResponse<[NecessityLog]>) => {\n        if (res.status === 200) {\n          this.setState({ logs: res.data, getLogStatus: necessityUserLogStatus.SUCCESS });\n        }\n      });\n  }\n\n  render() {\n    const { logs, getLogStatus } = this.state;\n    const logList = logs.map((log) => (\n      <div className=\"log-list\">\n        <LogList\n          key={log.id}\n          logs={log}\n        />\n      </div>\n    ));\n\n    return (\n      <div className=\"timeline-page\">\n        {getLogStatus === necessityUserLogStatus.SUCCESS && logList}\n      </div>\n    );\n  }\n}\n\nexport default TimelinePage;\n","import React, { Component } from 'react';\n\nclass WorkPage extends Component {\n  render() {\n    return (\n      <div className=\"work-page\">\n        가사노동 관리 페이지\n      </div>\n    );\n  }\n}\n\nexport default WorkPage;\n","import React, { Component } from 'react';\nimport { History } from 'history';\nimport { match } from 'react-router-dom';\n\nimport NecessityPage from '../NecessityPage/NecessityPage';\nimport StatisticsPage from '../StatisticsPage/StatisticsPage';\nimport TimelinePage from '../TimelinePage/TimelinePage';\nimport WorkPage from '../WorkPage/WorkPage';\nimport './MainPage.css';\n\ninterface DetailParams {\n  id: string;\n}\n\ninterface Props {\n  history: History;\n  match: match<DetailParams>;\n}\n\ninterface State {\n  activeTab: number;\n}\n\nclass MainPage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTab: 0,\n    };\n  }\n\n  render() {\n    const houseId = Number(this.props.match.params.id);\n\n    let body = null;\n    switch (this.state.activeTab) {\n      case 1:\n        body = <WorkPage />;\n        break;\n      case 2:\n        body = <TimelinePage history={this.props.history} houseId={houseId} />;\n        break;\n      case 3:\n        body = <StatisticsPage />;\n        break;\n      default:\n        body = <NecessityPage history={this.props.history} houseId={houseId} />;\n    }\n\n    return (\n      <div className=\"main-page\">\n        <div\n          className=\"main-tabs\"\n        >\n          <div\n            className=\"main-tab\"\n            id=\"necessity-tab\"\n            onClick={() => this.setState({ activeTab: 0 })}\n            style={this.state.activeTab === 0 ? { backgroundColor: 'orange' } : {}}\n          >\n            생필품 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"work-tab\"\n            onClick={() => this.setState({ activeTab: 1 })}\n            style={this.state.activeTab === 1 ? { backgroundColor: 'orange' } : {}}\n          >\n            가사노동 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"timeline-tab\"\n            onClick={() => this.setState({ activeTab: 2 })}\n            style={this.state.activeTab === 2 ? { backgroundColor: 'orange' } : {}}\n          >\n            타임라인\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"statistics-tab\"\n            onClick={() => this.setState({ activeTab: 3 })}\n            style={this.state.activeTab === 3 ? { backgroundColor: 'orange' } : {}}\n          >\n            통계\n          </div>\n        </div>\n        {body}\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { useEffect, useState } from 'react';\nimport {\n  useSelector, useDispatch,\n} from 'react-redux';\n\nimport { Login, SignUpModal } from '../../components/index';\nimport { OrangeGlobalState } from '../../store/state';\nimport { userStatus } from '../../constants/constants';\nimport { login, signUp } from '../../store/actions/user/user';\n\nfunction IntroPage() {\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const showModal = () => setShowSignUpModal(true);\n\n  const dispatch = useDispatch();\n  const { loginStatus, signupStatus } = useSelector((state: OrangeGlobalState) => state.user);\n\n  const onLogin = (username: string, password: string) => {\n    dispatch(login(username, password));\n  };\n\n  const onSignUp = (email: string, username: string, password: string) => {\n    dispatch(signUp(email, username, password));\n  };\n\n  useEffect(() => {\n    if (loginStatus === userStatus.SUCCESS) {\n      window.location.reload();\n    } if (loginStatus === userStatus.FAILURE_INACTIVE) {\n      alert('회원 인증을 완료해주세요!');\n      window.location.reload();\n    } if (loginStatus === userStatus.FAILURE_INFO) {\n      alert('잘못된 이름 또는 비밀번호입니다.');\n      window.location.reload();\n    } if (loginStatus === userStatus.FAILURE) {\n      alert('잘못된 이름 또는 비밀번호입니다.');\n      window.location.reload();\n    }\n\n    if (signupStatus === userStatus.SUCCESS) {\n      alert('회원 인증 메일이 전송되었습니다!');\n      window.location.reload();\n    } if (signupStatus === userStatus.WAITING) {\n      alert('이미 인증이 진행 중인 회원입니다.');\n    } if (signupStatus === userStatus.FAILURE_AUTHENTICATION) {\n      alert('회원 인증에 문제가 있습니다. 다시 시도해주세요.');\n    } if (signupStatus === userStatus.FAILURE_EMAIL) {\n      alert('이미 등록된 메일입니다.');\n    } if (signupStatus === userStatus.FAILURE_USERNAME) {\n      alert('이미 등록된 이름입니다.');\n    } if (signupStatus === userStatus.FAILURE) {\n      alert('회원가입에 실패하였습니다. 다시 시도해주세요.');\n    }\n  }, [loginStatus, signupStatus]);\n\n  return (\n    <div>\n      <Login onLogin={onLogin} />\n      <button\n        onClick={showModal}\n        type=\"button\"\n      >\n        회원가입\n        {' '}\n      </button>\n      {showSignUpModal && <SignUpModal onSignUp={onSignUp} /> }\n    </div>\n  );\n}\n\nexport default IntroPage;\n","import React, { Component } from 'react';\n\nimport { StudyInfo } from '../../components';\nimport './InfoPage.css';\n\nclass InfoPage extends Component {\n  render() {\n    return (\n      <div className=\"info-ui\">\n        <main>\n          <StudyInfo />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default InfoPage;\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { History } from 'history';\nimport { House } from '../../api';\n\ninterface Props {\n  history: History;\n}\n\nfunction HousePage(props: Props) {\n  const [houses, setHouses] = useState<[House]>();\n  const [nameToCreate, setNameToCreate] = useState('');\n  const [introductionToCreate, setIntroductionToCreate] = useState('');\n\n  useEffect(() => {\n    const { CancelToken } = axios;\n    const source = CancelToken.source();\n\n    axios.get('/api/v1/house/', { cancelToken: source.token })\n      .then((res) => setHouses(res.data));\n\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  const goToTheRoom = (houseId: number) => {\n    const url = `/main/${houseId}`;\n    props.history.push(url);\n  };\n\n  const createHouse = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    axios.post('/api/v1/house/', { name: nameToCreate, introduction: introductionToCreate })\n      .then((res) => {\n        const { data } = res;\n        goToTheRoom(data.id);\n      })\n      .catch(() => {\n        window.alert('같은 이름의 집을 가지고 있거나 요청에 문제가 있습니다.');\n      });\n  };\n\n  const showUserHouses = houses?.map((house, index) => (\n    <div key={index}>\n      <h1>\n        {house.name}\n      </h1>\n      <h2>\n        {house.introduction}\n      </h2>\n      <button\n        type=\"button\"\n        onClick={() => goToTheRoom(house.id)}\n      >\n        들어가기\n      </button>\n      <hr />\n    </div>\n  ));\n\n  return (\n    <main>\n      <section>\n        <form onSubmit={createHouse}>\n          <label>\n            이름:\n            <input\n              type=\"text\"\n              onChange={(e) => setNameToCreate(e.target.value)}\n            />\n          </label>\n          <label>\n            소개:\n            <input\n              type=\"text\"\n              onChange={(e) => setIntroductionToCreate(e.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"집 생성\" disabled={!nameToCreate} />\n        </form>\n      </section>\n      <section>\n        {showUserHouses}\n      </section>\n    </main>\n  );\n}\n\nexport default HousePage;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { History } from 'history';\n\nimport { Header } from './components';\nimport {\n  MainPage, IntroPage, InfoPage, HousePage,\n} from './containers';\nimport './App.css';\n\ninterface Props {\n  history: History;\n}\n\nfunction App(props: Props): JSX.Element {\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={props.history}>\n        <Header history={props.history} />\n        <Switch>\n          <Route exact path=\"/\" component={HousePage} hisory={props.history} />\n          <Route exact path=\"/main/:id\" component={MainPage} history={props.history} />\n          <Route exact path=\"/intro\" component={IntroPage} />\n          <Route exact path=\"/info\" component={InfoPage} />\n          <Route exact path=\"/house\" component={HousePage} history={props.history} />\n          <Redirect exact to=\"/intro\" />\n        </Switch>\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userConstants } from '../../actions/actionTypes';\nimport { userStatus } from '../../../constants/constants';\nimport { User } from '../../../api';\nimport { UserState } from '../../state';\n\ntype Action = {\n  type: string;\n  target: User;\n};\n\nconst initialState: UserState = {\n  me: {} as User,\n  signupStatus: userStatus.NONE,\n  loginStatus: userStatus.NONE,\n  logoutStatus: userStatus.NONE,\n  getMeStatus: userStatus.NONE,\n};\n\nconst userReducer = (state = initialState, action: Action): UserState => {\n  const data = action.target;\n  switch (action.type) {\n    // SIGNUP\n    case userConstants.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupStatus: userStatus.SUCCESS,\n      };\n    case userConstants.SIGNUP_WAITING:\n      return { ...state, signupStatus: userStatus.WAITING };\n    case userConstants.SIGNUP_FAILURE_AUTHENTICATION:\n      return { ...state, signupStatus: userStatus.FAILURE_AUTHENTICATION };\n    case userConstants.SIGNUP_FAILURE_EMAIL:\n      return { ...state, signupStatus: userStatus.FAILURE_EMAIL };\n    case userConstants.SIGNUP_FAILURE_USERNAME:\n      return { ...state, signupStatus: userStatus.FAILURE_USERNAME };\n    case userConstants.SIGNUP_FAILURE:\n      return { ...state, signupStatus: userStatus.FAILURE };\n\n    // LOGIN\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginStatus: userStatus.SUCCESS,\n        me: data,\n      };\n    case userConstants.LOGIN_FAILURE:\n      return { ...state, loginStatus: userStatus.FAILURE };\n    case userConstants.LOGIN_FAILURE_INACTIVE:\n      return { ...state, loginStatus: userStatus.FAILURE_INACTIVE };\n    case userConstants.LOGIN_FAILURE_INFO:\n      return { ...state, loginStatus: userStatus.FAILURE_INFO };\n\n    // LOGOUT\n    case userConstants.LOGOUT_SUCCESS:\n      return { ...state, logoutStatus: userStatus.SUCCESS };\n    case userConstants.LOGOUT_FAILURE:\n      return { ...state, logoutStatus: userStatus.FAILURE };\n\n    // GET_ME\n    case userConstants.GET_ME_SUCCESS:\n      return {\n        ...state,\n        me: data,\n        getMeStatus: userStatus.SUCCESS,\n      };\n    case userConstants.GET_ME_FAILURE:\n      return { ...state, getMeStatus: userStatus.FAILURE };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userReducer;\n","import { necessityConstants } from '../../actions/actionTypes';\nimport { necessityStatus } from '../../../constants/constants';\nimport {\n  House, Necessity, Place,\n} from '../../../api';\nimport { NecessityState } from '../../state';\n\ntype Action = {\n  type: string;\n  target: House | Necessity | Place;\n};\n\nconst initialState: NecessityState = {\n  createStatus: necessityStatus.NONE,\n  getStatus: necessityStatus.NONE,\n  removeStatus: necessityStatus.NONE,\n  countStatus: necessityStatus.NONE,\n  updateStatus: necessityStatus.NONE,\n  places: [],\n};\n\nconst PlaceResponseCases = [\n  necessityConstants.CREATE_NECESSITYPLACE_SUCCESS,\n  necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS,\n  necessityConstants.CREATE_PLACE_SUCCESS,\n];\n\nconst NecessityResponseCases = [\n  necessityConstants.COUNT_NECESSITYPLACE_SUCCESS,\n  necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS,\n];\n\nfunction necessityreducer(state = initialState, action: Action): NecessityState {\n  if (action.type === necessityConstants.GET_HOUSE_SUCCESS) {\n    const house = action.target as House;\n    return {\n      ...state,\n      getStatus: necessityStatus.SUCCESS,\n      places: house.places,\n    };\n  }\n\n  if (PlaceResponseCases.includes(action.type)) {\n    let { places } = state;\n    const data = action.target as Place;\n    places = places.map((place) => (place.id === data.id ? data : place));\n\n    if (action.type === necessityConstants.CREATE_NECESSITYPLACE_SUCCESS\n      || action.type === necessityConstants.CREATE_PLACE_SUCCESS) {\n      return {\n        ...state,\n        createStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    if (action.type === necessityConstants.REMOVE_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        removeStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    return {\n      ...state,\n    };\n  }\n\n  if (NecessityResponseCases.includes(action.type)) {\n    let { places } = state;\n    const data = action.target as Necessity;\n    places = places.map((place) => {\n      if (place.id === data.place_id) {\n        const newPlace = place;\n        newPlace.necessities = place.necessities.map((necessity) => (\n          necessity.id === data.id ? data : necessity));\n        return newPlace;\n      }\n      return place;\n    });\n\n    if (action.type === necessityConstants.COUNT_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        countStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    if (action.type === necessityConstants.UPDATE_NECESSITYPLACE_SUCCESS) {\n      return {\n        ...state,\n        updateStatus: necessityStatus.SUCCESS,\n        places,\n      };\n    }\n    return {\n      ...state,\n    };\n  }\n\n  switch (action.type) {\n    case necessityConstants.GET_HOUSE_FAILURE:\n      return {\n        ...state,\n        getStatus: necessityStatus.FAILURE,\n      };\n\n    case necessityConstants.CREATE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE,\n      };\n    case necessityConstants.CREATE_NECESSITYPLACE_FAILURE_NAME:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE_NAME,\n      };\n    case necessityConstants.REMOVE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        removeStatus: necessityStatus.FAILURE,\n      };\n\n    case necessityConstants.COUNT_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        countStatus: necessityStatus.FAILURE,\n      };\n    case necessityConstants.UPDATE_NECESSITYPLACE_FAILURE:\n      return {\n        ...state,\n        updateStatus: necessityStatus.FAILURE,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default necessityreducer;\n","import { History } from 'history';\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport userReducer from './user/user';\nimport necessityReducer from './necessity/necessity';\n\nconst rootReducer = (history: History) => combineReducers({\n  user: userReducer,\n  necessity: necessityReducer,\n  router: connectRouter(history),\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from './reducers/index';\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  window.console.log('[Middleware] Dispatching', action);\n  const result = next(action);\n  window.console.log('[Middleware] Next State', store.getState());\n  return result;\n};\n\nexport const history = createBrowserHistory();\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\n\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root'),\n);\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}