{"version":3,"sources":["components/Necessity/NecessityItem.tsx","components/Necessity/NecessityList.tsx","components/Necessity/NecessityTemplate.tsx","components/Necessity/NecessityHead.tsx","components/Header/Header.tsx","components/StudyInfo/StudyInfo.tsx","components/Articles/Articles.tsx","constants/constants.ts","store/actions/actionTypes.ts","store/actions/index.ts","store/actions/user/user.tsx","store/actions/necessity/necessity.tsx","components/Login/Login.tsx","components/SignUpModal/SignUpModal.tsx","components/Necessity/NecessityCreateModal.tsx","containers/Main/Main.tsx","containers/SignUp/SiginUp.tsx","containers/Info/Info.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/necessity/necessity.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["Remove","styled","div","NecessityItemBlock","CheckCircle","props","done","css","Text","React","memo","id","text","NecessityListBlock","connect","state","necessities","necessity","map","key","NecessityTemplateBlock","NecessityTemplate","children","NecessityHeadBlock","NecessityHead","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","Header","title","StudyInfo","onClick","window","open","Articles","userStatus","necessityStatus","userConstants","necessityConstants","userActions","username","password","dispatch","axios","put","then","res","user","data","type","target","catch","err","error","response","status","email","post","actionType","signupFailure","necessityActions","name","option","description","price","createResponse","createError","Login","this","onLogin","loginStatus","alert","history","push","placeholder","onChange","e","setState","value","disabled","clickLoginHandler","Component","login","SignUpModal","signUp","signupStatus","appearing","style","display","background","border","htmlFor","required","me","NecessityCreateModal","create","console","log","createStatus","parseInt","CircleButton","button","GlobalStyle","createGlobalStyle","Main","useState","showNecessityCreateModal","setShowNecessityCreateModal","Fragment","SignUp","showSignUpModal","setShowSignUpModal","Info","App","exact","path","component","to","Boolean","location","hostname","match","initialState","reducer","action","lastLogin","last_login","dateJoined","date_joined","necessityreducer","actiontarget","actiontype","removeStatus","rootReducer","combineReducers","userReducer","necessityReducer","router","connectRouter","createBrowserHistory","middlewares","store","next","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.28ca1f74.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\n\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #F1948A;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #B03A2E;\r\n    }\r\n    display: none;\r\n`;\r\n\r\nconst NecessityItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${Remove}{\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\ninterface INecessityItemProps {\r\n  \tcursor?: any;\r\n  \tdone?: boolean;\r\n}\r\n\r\nconst CheckCircle = styled.div<INecessityItemProps>`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 10px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props => \r\n        props.done &&\r\n        css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n\t\t`\r\n\t}\r\n`;\r\n\r\ninterface ITextProps {\r\n  \tcolor?: string;\r\n  \tdone?: boolean;\r\n}\r\n\r\nconst Text = styled.div<ITextProps>`\r\n  \tflex: 1;\r\n  \tfont-size: 21px;\r\n  \tcolor: #495057;\r\n  \t${props =>\r\n    \tprops.done &&\r\n    \tcss`\r\n      \t\tcolor: #ced4da;\r\n\t\t`\r\n\t}\r\n`;\r\n\r\n\r\nfunction NecessityItem({id, done, text} : { id:number, done: boolean, text: string }) {\r\n  \treturn (\r\n    \t<NecessityItemBlock>\r\n      \t\t<CheckCircle done={done} /*onClick={onToggleNecessity}*/>\r\n        \t\t{done && <MdDone />}\r\n      \t\t</CheckCircle>\r\n      \t\t<Text done={done}>{text}</Text>\r\n      \t\t<Remove /*onClick={onRemove}*/>\r\n        \t\t<MdDelete />\r\n      \t\t</Remove>\r\n    \t</NecessityItemBlock>\r\n  \t);\r\n}\r\n  \r\nexport default React.memo(NecessityItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport NecessityItem from './NecessityItem';\r\n\r\n\r\nconst NecessityListBlock = styled.div`\r\n  \tflex: 1;\r\n  \tpadding: 20px 32px;\r\n  \tpadding-bottom: 48px;\r\n  \toverflow-y: auto;\r\n`;\r\n\r\n\r\n\r\ninterface Props {\r\n  \tnecessities: any;\r\n}\r\n\r\nfunction NecessityList(props: Props) {\r\n  \tvar necessities = props.necessities;\r\n\r\n  \treturn (\r\n    \t<NecessityListBlock>\r\n      \t\t{necessities.map((necessity: any) => (\r\n        \t<NecessityItem\r\n          \t\tkey={necessity.id}\r\n          \t\tid={necessity.id}\r\n          \t\ttext={necessity.text}\r\n          \t\tdone={necessity.done}\r\n        \t/>\r\n      \t))}\r\n    \t</NecessityListBlock>\r\n  \t)\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  \tnecessities: state.necessity.necessities,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NecessityList);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IProps {\r\n    children: any;\r\n}\r\n\r\nconst NecessityTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 600px;\r\n\r\n    position: relative;\r\n    // 박스 하단에 추가 버튼 위치시키기 위한 설정\r\n\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n    // 페이지 중앙에 나타나도록 설정\r\n\r\n    margin-top: 80px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction NecessityTemplate({ children, ...props }: IProps) {\r\n    return <NecessityTemplateBlock {...props}>{children}</NecessityTemplateBlock>;\r\n}\r\n\r\nexport default NecessityTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NecessityHeadBlock = styled.div`\r\n\tpadding-top: 48px;\r\n\tpadding-left: 32px;\r\n\tpadding-right: 32px;\r\n\tpadding-bottom: 24px;\r\n\tborder-bottom: 1px solid #e9ecef;\r\n\th1 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 36px;\r\n\t\tcolor: #343a40;\r\n\t}\r\n\t.day {\r\n\t\tmargin-top: 4px;\r\n\t\tcolor: #868e96;\r\n\t\tfont-size: 21px;\r\n\t}\r\n\t.tasks-left {\r\n\t\tcolor: #20c997;\r\n\t\tfont-size: 18px;\r\n\t\tmargin-top: 40px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n`;\r\n\r\nfunction NecessityHead() {\r\n\tconst today = new Date();\r\n\tconst dateString = today.toLocaleDateString('ko-KR', {\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tday: 'numeric'\r\n\t});\r\n  \tconst dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n  \r\n\treturn (\r\n\t\t<NecessityHeadBlock>\r\n\t\t<h1>{dateString}</h1>\r\n\t\t<div className=\"day\">{dayName}</div>\r\n\t\t<div className=\"tasks-left\">구매할 것 {}개 남음</div>\r\n\t\t</NecessityHeadBlock>\r\n\t);\r\n}\r\n\r\nexport default NecessityHead;\r\n","import React from 'react';\r\n\r\nimport { ArticleProps } from '../Article/Article';\r\nimport './Header.css';\r\n\r\n// each HTML component\r\nfunction Header(props: ArticleProps) {\r\n    return (\r\n      <header className={props.className}>\r\n        <h1>{props.title}</h1>\r\n        {/* 소개글 넣기 */}\r\n        <p>Since. 2020.04.12.</p>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { ArticleProps } from '../Article/Article';\r\nimport './StudyInfo.css';\r\n\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nfunction StudyInfo(props: ArticleProps) {\r\n    return (\r\n      <div className={props.className}>\r\n        <section>\r\n          <h2 className=\"deep-orange\">스터디 멤버</h2>\r\n          <ul>\r\n            <strong>웹 개발 참여</strong>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/davin111\")}\r\n              > 다빈\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/palpitate2015\")}\r\n              > 상현\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/YeonghyeonKO\")}\r\n              > 영현\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/JSKeum\")}\r\n              > 진섭\r\n              </a>\r\n            </li>\r\n            <br />\r\n            <strong>세미나 참여</strong>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/anneKwon\")}\r\n              > 민재\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/Eunsung-k\")}\r\n              > 은성\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a \r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/jadeyyun\")}\r\n              > 재연\r\n              </a>\r\n            </li>          \r\n          </ul>\r\n        </section>\r\n        <section>\r\n          <h2 className=\"deep-orange\">GitHub</h2>\r\n          <ul>\r\n            <li>\r\n              <a\r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://github.com/gongmyeong-study\")}\r\n              >\r\n                GitHub 방문하기\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n        <section>\r\n          <h2 className=\"deep-orange\">Slack</h2>\r\n          <ul>\r\n            <li>\r\n              <a\r\n                className=\"VisitLink\"\r\n                onClick={() => window.open(\"https://gongmyeongstudy.slack.com\")}\r\n              >\r\n                Slack 방문하기\r\n              </a>\r\n            </li>       \r\n          </ul>\r\n        </section>  \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StudyInfo;\r\n","import React from 'react';\r\nimport { ArticleProps } from '../Article/Article';\r\n\r\nfunction Articles(props: ArticleProps) {\r\n    return (\r\n      <div className={props.className}>\r\n        <article>\r\n        </article>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Articles;\r\n","export const userStatus = {\r\n    NONE: 'NONE',\r\n    WAITING: 'WAITING',\r\n    SUCCESS: 'SUCCESS',\r\n    FAILURE: 'FAILURE',\r\n    FAILURE_USERNAME: 'FAILURE_USERNAME',\r\n};\r\n\r\nexport const necessityStatus = {\r\n    NONE: 'NONE',\r\n    WAITING: 'WAITING',\r\n    SUCCESS: 'SUCCESS',\r\n    FAILURE: 'FAILURE',\r\n}\r\n","export const userConstants = {\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGIN_FAILURE_USERNAME: 'LOGIN_FAILURE_USERNAME',\r\n    SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\r\n    SIGNUP_FAILURE: 'SIGNUP_FAILURE',\r\n    SIGNUP_FAILURE_USERNAME: 'SIGNUP_FAILURE_USERNAME',\r\n};\r\n\r\nexport const necessityConstants = {\r\n    CREATE_SUCCESS: 'CREATE_SUCCESS',\r\n    CREATE_FAILURE: 'CREATE_FAILURE',\r\n    REMOVE_SUCCESS: 'REMOVE_SUCCESS',\r\n    REMOVE_FAILURE: 'REMOVE_FAILURE',\r\n};\r\n","import {\r\n    login,\r\n    signUp\r\n} from './user/user';\r\n\r\nimport {\r\n    createNecessity,\r\n} from './necessity/necessity';\r\n\r\nexport const userActions = {\r\n    login,\r\n    signUp,\r\n};\r\n\r\nexport const necessityActions = {\r\n    createNecessity,\r\n}\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { userConstants } from '../actionTypes';\r\n\r\n\r\nconst loginSuccess = (user: any) => ({\r\n  type: userConstants.LOGIN_SUCCESS,\r\n  target: user,\r\n});\r\n\r\nconst loginFailure = (error: any) => {\r\n  let actionType = null;\r\n  switch (error.response.status) {\r\n    default:\r\n      actionType = userConstants.LOGIN_FAILURE;\r\n      break;\r\n  }\r\n  return {\r\n    type: actionType,\r\n    target: error,\r\n  };\r\n};\r\n\r\nconst signupSuccess = (user: any) => ({\r\n  type: userConstants.SIGNUP_SUCCESS,\r\n  target: user,\r\n});\r\n\r\nconst signupFailure = (error: any) => {\r\n  let actionType = null;\r\n  switch (error.response.status) {\r\n    case 409:\r\n      actionType = userConstants.SIGNUP_FAILURE_USERNAME;\r\n      break;\r\n    default:\r\n      actionType = userConstants.SIGNUP_FAILURE;\r\n  }\r\n  return {\r\n    type: actionType,\r\n    target: error,\r\n  };\r\n};\r\n\r\nexport const login = (\r\n  username: string, password: string,\r\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\r\n  .then((res) => dispatch(loginSuccess(res.data)))\r\n  .catch((err) => dispatch(loginFailure(err)));\r\n\r\nexport const signUp = (\r\n  email: string, username: string, password: string,\r\n) => (dispatch: Dispatch) => axios.post('/api/v1/user/', { email, username, password })\r\n  .then((res) => dispatch(signupSuccess(res.data)))\r\n  .catch((err) => dispatch(signupFailure(err)));\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { necessityConstants } from '../actionTypes';\r\n\r\n\r\n// 생필품 구매목록 추가 기능\r\n\r\nconst createSuccess = (necessities: any) => ({\r\n\ttype: necessityConstants.CREATE_SUCCESS,\r\n\ttarget: necessities,\r\n});\r\n\r\nconst createFailure = (error: any) => {\r\n\tlet actionType = null;\r\n\tswitch (error.response.status) {\r\n\t\tdefault:\r\n\t\t\tactionType = necessityConstants.CREATE_FAILURE;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn {\r\n\t\ttype: actionType,\r\n\t\ttarget: error,\r\n\t};\r\n};\r\n\r\nconst removeSuccess = (necessities: any) => ({\r\n\ttype: necessityConstants.REMOVE_SUCCESS,\r\n\ttarget: necessities,\r\n});\r\n\r\nconst removeFailure = (error: any) => {\r\n\tlet actionType = null;\r\n\tswitch (error.response.status){\r\n\t\tdefault:\r\n\t\t\tactionType = necessityConstants.REMOVE_FAILURE;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn {\r\n\t\ttype: actionType,\r\n\t\ttarget: error,\r\n\t};\r\n};\r\n\r\nexport const createNecessity = (\r\n\tname: string, option: string, description: string, price: number\r\n\t) => (dispatch: Dispatch) => axios.post('/api/v1/necessity/', { name, option, description, price })\r\n\t.then((createResponse) => dispatch(createSuccess(createResponse.data)))\r\n\t.catch((createError) => dispatch(createFailure(createError)));\r\n\r\nexport const removeNecessity = (\r\n\tname: string, option: string, description: string, price: number\r\n\t) => (dispatch: Dispatch) => axios.put('/api/v1/necessity/', { name, option, description, price })\r\n\t.then((removeResponse) => dispatch(removeSuccess(removeResponse.data)))\r\n\t.catch((removeError) => dispatch(removeFailure(removeError)));\r\n","import React, { Component, Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { userStatus } from '../../constants/constants';\r\nimport { userActions } from '../../store/actions';\r\nimport './Login.css';\r\n\r\ninterface Props {\r\n  history: any;\r\n  loginStatus: string;\r\n  onLogin: (username: string, password: string) => any;\r\n}\r\n\r\ninterface State {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n  // NOTE: this Login Component is just for example about api call. it can be changed completely differently.\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  clickLoginHandler() {\r\n    this.props.onLogin(this.state.username, this.state.password)\r\n      .then(() => {\r\n        if (this.props.loginStatus === userStatus.SUCCESS) {\r\n          alert(\"로그인에 성공하였습니다!\")\r\n          this.props.history.push('/main');\r\n        }\r\n        else {\r\n          alert(\"로그인에 실패하였습니다. \\n이름과 비밀번호를 확인해 주세요!\")\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <h1>Login</h1>\r\n        <div className=\"LoginField\">\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={(e) => this.setState({ username: e.target.value })}\r\n          />\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => this.setState({ password: e.target.value })}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"LoginButton\"\r\n          disabled={!this.state.username || !this.state.password}\r\n          onClick={() => this.clickLoginHandler()}\r\n        >\r\n          go\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  loginStatus: state.user.loginStatus,\r\n  user: state.user.login,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  onLogin: (username: string, password: string) => dispatch(userActions.login(username, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component, Dispatch } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { userActions } from \"../../store/actions\";\r\nimport { userStatus } from \"../../constants/constants\";\r\nimport \"./SignUpModal.css\";\r\n\r\ninterface Props {\r\n  history?: any;\r\n  signUp: (email: string, username: string, password: string) => any; // for redux dispatch\r\n  me: any;\r\n  signupStatus: string;\r\n}\r\n\r\ninterface State {\r\n  appearing: Boolean; // for modal appearing\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nclass SignUpModal extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      appearing: true,\r\n      email: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  signUp = () => {\r\n    this.props.signUp(this.state.email, this.state.username, this.state.password)\r\n      .then(() => {\r\n        if (this.props.signupStatus === userStatus.SUCCESS) {\r\n          window.alert(\"성공!\");\r\n          this.setState({ appearing: false });\r\n          this.props.history.push('/main');\r\n        }\r\n        else if (this.props.signupStatus === userStatus.FAILURE_USERNAME) {\r\n          window.alert(\"중복된 사용자 이름!\");\r\n        }\r\n        else {\r\n          window.alert(\"실패!\");\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"modal\"\r\n        style={this.state.appearing ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        <form>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"close\"\r\n            title=\"Close Modal\"\r\n            style={{ background: \"none\", border: \"none\" }}\r\n          >\r\n            &times;\r\n          </button>\r\n        </form>\r\n        <form className=\"modal-content\">\r\n          <div className=\"container\">\r\n            <p>오렌지 농장을 이용하기 전에 회원가입을 해주세요</p>\r\n            <hr />\r\n            <label htmlFor=\"email\">\r\n              <b>이메일 (Email)</b>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"haksaeng@snu.ac.kr\"\r\n              required\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n            />\r\n\r\n            <label htmlFor=\"email\">\r\n              <b>이름 (Name)</b>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Jinsup\"\r\n              required\r\n              onChange={(e) => this.setState({ username: e.target.value })}\r\n            />\r\n\r\n            <label htmlFor=\"psw\">\r\n              <b>비밀번호 (Password)</b>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              required\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n\r\n            {/* <label htmlFor=\"psw-repeat\">\r\n              <b>비밀번호 확인 (Repeat Password)</b>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Repeat Password\"\r\n              name=\"psw-repeat\"\r\n              required\r\n            /> */}\r\n\r\n            <div className=\"clearfix\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"signupbtn\"\r\n                disabled={this.state.email===\"\" || this.state.password===\"\" || this.state.username===\"\"}\r\n                onClick={this.signUp}\r\n              >\r\n                회원가입\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  signUp: (email: string, username: string, password: string) =>\r\n    dispatch(userActions.signUp(email, username, password)),\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  signupStatus: state.user.signupStatus,\r\n  me: state.user.me,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpModal);\r\n","import React, { Component, Dispatch } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { necessityActions } from \"../../store/actions\";\r\nimport { necessityStatus } from \"../../constants/constants\";\r\nimport \"./NecessityCreateModal.css\";\r\n\r\ninterface Props {\r\n    history?: any;\r\n    create: (name: string, option: string, description: string, price: number) => any; // for redux dispatch\r\n    me: any;\r\n    createStatus: string;\r\n}\r\n\r\ninterface State {\r\n    appearing: Boolean; // for modal appearing\r\n    name: string, \r\n    option: string, \r\n    description: string, \r\n    price: number,\r\n}\r\n\r\nclass NecessityCreateModal extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n        appearing: true,\r\n        name: '',\r\n        option: '',\r\n        description: '',\r\n        price: 0,\r\n        };\r\n    }\r\n\r\n    create = () => {\r\n        this.props.create(this.state.name, this.state.option, this.state.description, this.state.price)\r\n            .then(() => {\r\n                console.log(this.props.createStatus)\r\n                if (this.props.createStatus === necessityStatus.SUCCESS) {\r\n                    window.alert(\"입력 완료!\");\r\n                    this.setState({ appearing: false });\r\n                    this.props.history.push('/main');\r\n                }\r\n                else if (this.props.createStatus === necessityStatus.FAILURE) {\r\n                    window.alert(\"이미 존재하는 생필품입니다.\");\r\n                }\r\n                else {\r\n                    window.alert(\"실패!\");\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"necessity-create-modal\"\r\n                style={this.state.appearing ? { display: \"block\" } : { display: \"none\" }}\r\n            >\r\n                <form>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"necessity-create-close\"\r\n                        title=\"Close Modal\"\r\n                        style={{ background: \"none\", border: \"none\" }}\r\n                    >\r\n                    &times;\r\n                    </button>\r\n                </form>\r\n\r\n                <form className=\"necessity-create-modal-content\">\r\n                    <div className=\"necessity-create-container\">\r\n                        <p>생필품 정보를 입력해주세요.</p>\r\n                        <hr />\r\n                        <label htmlFor=\"name\">\r\n                            <b>생필품 (Necessity)</b>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"오렌지\"\r\n                            required\r\n                            onChange={(e) => this.setState({ name: e.target.value })}\r\n                        />\r\n\r\n                        <label htmlFor=\"option\">\r\n                            <b>옵션 (Option)</b>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"발렌시아 품종\"\r\n                            required\r\n                            onChange={(e) => this.setState({ option: e.target.value })}\r\n                        />\r\n\r\n                        <label htmlFor=\"description\">\r\n                            <b>설명 (Description)</b>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"식후 비타민 C 섭취용\"\r\n                            required\r\n                            onChange={(e) => this.setState({ description: e.target.value })}\r\n                        />\r\n\r\n                        <label htmlFor=\"price\">\r\n                            <b>가격 (Price)</b>\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"2900\"\r\n                            required\r\n                            onChange={(e) => this.setState({ price: parseInt(e.target.value) })}\r\n                        />\r\n\r\n                        <div className=\"necessity-create-clearfix\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"necessity-create-createbtn\"\r\n                            disabled={this.state.name===\"\"}\r\n                            onClick={this.create}\r\n                        >\r\n                            생필품 등록\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n    create: (name: string, option: string, description: string, price: number) => \r\n        dispatch(necessityActions.createNecessity(name, option, description, price)),\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    createStatus: state.necessity.createStatus,\r\n    me: state.user.me,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityCreateModal);\r\n","import React, { useState } from 'react';\r\nimport NecessityList from '../../components/Necessity/NecessityList'\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport NecessityTemplate from '../../components/Necessity/NecessityTemplate';\r\nimport NecessityHead from '../../components/Necessity/NecessityHead';\r\nimport { NecessityCreateModal } from \"../../components/index\";\r\n\r\nimport styled from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\n\r\ninterface ICircleButtonProps {\r\n    transition? : any;\r\n    open?: any;\r\n}\r\n\r\nconst CircleButton = styled.button<ICircleButtonProps>`\r\n  \tbackground: #38d9a9;\r\n  \t&:hover {\r\n  \t \tbackground: #63e6be;\r\n  \t}\r\n  \t&:active {\r\n\t\topacity: 0.2;\r\n   \t\tbackground: #20c997;\r\n  \t}\r\n\t\r\n  \tz-index: 0;\r\n  \tcursor: pointer;\r\n  \twidth: 80px;\r\n \theight: 80px;\r\n  \tdisplay: block;\r\n  \talign-items: center;\r\n  \tjustify-content: center;\r\n  \tfont-size: 60px;\r\n  \tposition: absolute;\r\n  \tleft: 50%;\r\n  \tbottom: 0px;\r\n  \ttransform: translate(-50%, 50%);\r\n\tcolor: white;\r\n\tborder-radius: 50%;\r\n\tborder: none;\r\n\toutline: none;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n \tbody {\r\n    \tbackground: #e9ecef;\r\n  \t}\r\n`;\r\n\r\ninterface Props {\r\n \thistory: any;\r\n}\r\n\r\n\r\nfunction Main(props: Props) {\r\n\tconst [showNecessityCreateModal, setShowNecessityCreateModal] = useState(false);\r\n\tconst showModal = () => setShowNecessityCreateModal(true);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<GlobalStyle />\r\n\t\t<h1>Main page</h1>\r\n\t\t\t<NecessityTemplate>\r\n\t\t\t\t<NecessityHead />\r\n\t\t\t\t<NecessityList />\r\n\t\t\t\t<CircleButton onClick={showModal}>\r\n\t\t\t\t\t<MdAdd />\r\n\t\t\t\t</CircleButton>\r\n\t\t\t\t{showNecessityCreateModal ? <NecessityCreateModal history={props.history} /> : null}\r\n\t\t\t</NecessityTemplate>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Login, SignUpModal } from \"../../components/index\";\r\n\r\ninterface Props {\r\n  history?: any;\r\n}\r\n\r\nfunction SignUp(props: Props) {\r\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\r\n  const showModal = () => setShowSignUpModal(true);\r\n\r\n  return (\r\n    <div>\r\n      <Login history={props.history} />\r\n      <button onClick={showModal}>회원가입 </button>\r\n      {showSignUpModal ? <SignUpModal history={props.history} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Header, StudyInfo, Articles } from '../../components';\r\nimport './Info.css';\r\n\r\nclass Info extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"info-ui\">\r\n        <Header className=\"main-header\" title=\"오렌지 농장\"/>\r\n        <main>\r\n          <StudyInfo className=\"left-info\" />\r\n          <Articles className=\"right-articles\" />  \r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { Main, SignUp, Info } from \"./containers\";\r\nimport \"./App.css\";\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nfunction App(props: Props): JSX.Element {\r\n  return (\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={props.history}>\r\n        <Switch>\r\n          <Route exact path=\"/main\" component={Main} history={props.history} />} />\r\n          <Route exact path=\"/signup\" component={SignUp} history={props.history} />} />\r\n          <Route exact path=\"/info\" component={Info} />\r\n          <Redirect exact to=\"/signup\" />\r\n        </Switch>\r\n      </ConnectedRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { userConstants } from '../../actions/actionTypes';\r\nimport { userStatus } from '../../../constants/constants';\r\n\r\nconst initialState = {\r\n  me: {},\r\n  loginStatus: userStatus.NONE,\r\n  signupStatus: userStatus.NONE,\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  const data = action.target;\r\n  switch (action.type) {\r\n    case userConstants.LOGIN_SUCCESS:\r\n        // NOTE: just friendly logging - please remove below logging line later\r\n        console.log(data);\r\n        return {\r\n            ...state,\r\n            loginStatus: userStatus.SUCCESS,\r\n            me: {\r\n                id: data.id,\r\n                username: data.username,\r\n                email: data.email,\r\n                lastLogin: data.last_login,\r\n                dateJoined: data.date_joined,\r\n            },\r\n        };\r\n    case userConstants.LOGIN_FAILURE:\r\n      return { ...state, loginStatus: userStatus.FAILURE };\r\n    case userConstants.SIGNUP_SUCCESS:\r\n      return { ...state,\r\n        signupStatus: userStatus.SUCCESS,\r\n        me: {\r\n          id: data.id,\r\n          username: data.username,\r\n          email: data.email,\r\n          lastLogin: data.last_login,\r\n          dateJoined: data.date_joined,\r\n        }\r\n      };\r\n    case userConstants.SIGNUP_FAILURE_USERNAME:\r\n      return { ...state, signupStatus: userStatus.FAILURE_USERNAME };\r\n    case userConstants.SIGNUP_FAILURE:\r\n      return { ...state, signupStatus: userStatus.FAILURE };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { necessityConstants } from '../../actions/actionTypes';\r\nimport { necessityStatus } from '../../../constants/constants';\r\n\r\n\r\ntype Action = { \r\n  actiontype: string; \r\n  actiontarget: any;\r\n}\r\n\r\nconst initialState = {\r\n    createStatus: necessityStatus.NONE,\r\n    necessities: [],\r\n};\r\n\r\n\r\n\r\nfunction necessityreducer (state = initialState, action: Action) {\r\n    const data = action.actiontarget;\r\n    switch (action.actiontype) {\r\n\r\n\t\t// 생필품 추가\r\n        case necessityConstants.CREATE_SUCCESS:\r\n            return {\r\n                createStatus: necessityStatus.SUCCESS,\r\n                necessities: data,\r\n            };\r\n        case necessityConstants.CREATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                createStatus: necessityStatus.FAILURE,\r\n            };\r\n\t\t\r\n\t\t// 생필품 제거\r\n        case necessityConstants.REMOVE_SUCCESS:\r\n          \treturn {\r\n\t\t\t\tremoveStatus: necessityStatus.SUCCESS,\r\n\t\t\t\tnecessities: data,\r\n\t\t\t};\r\n\t\tcase necessityConstants.REMOVE_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tremoveStatus: necessityStatus.FAILURE,\r\n\t\t\t};\r\n\r\n        // case 'REMOVE':\r\n        //     return state.filter(Necessity => Necessity.id !== action.id);\r\n\t\t\r\n\t\tdefault:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default necessityreducer;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport userReducer from './user/user';\r\nimport necessityReducer from './necessity/necessity';\r\n\r\nconst rootReducer = (history: any) => combineReducers({\r\n  user: userReducer,\r\n  necessity: necessityReducer,\r\n  router: connectRouter(history),\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\n\r\nconst logger = (store: any) => (next: any) => (action: any) => {\r\n  window.console.log('[Middleware] Dispatching', action);\r\n  const result = next(action);\r\n  window.console.log('[Middleware] Next State', store.getState());\r\n  return result;\r\n};\r\n\r\nexport const history = createBrowserHistory();\r\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\r\n\r\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store, { history } from './store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App history={history} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}