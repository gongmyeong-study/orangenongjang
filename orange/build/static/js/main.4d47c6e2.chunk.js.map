{"version":3,"sources":["store/actions/actionTypes.ts","store/actions/index.ts","store/actions/user/user.tsx","store/actions/necessity/necessity.tsx","constants/constants.ts","components/Header/Header.tsx","components/Login/Login.tsx","components/Necessity/NecessityCreateModal/NecessityCreateModal.tsx","components/Necessity/NecessityHead/NecessityHead.tsx","components/Necessity/NecessityItem/NecessityItem.tsx","components/Necessity/NecessityCounter/NecessityCounter.tsx","components/Necessity/NecessityList/NecessityList.tsx","components/Necessity/NecessityTemplate/NecessityTemplate.tsx","components/SignUpModal/SignUpModal.tsx","components/StudyInfo/StudyInfo.tsx","components/LogList/LogList.tsx","containers/NecessityPage/NecessityPage.tsx","containers/StatisticsPage/StatisticsPage.tsx","containers/TimelinePage/TimelinePage.tsx","containers/WorkPage/WorkPage.tsx","containers/MainPage/MainPage.tsx","containers/IntroPage/IntroPage.tsx","containers/InfoPage/InfoPage.tsx","containers/HousePage/HousePage.tsx","App.tsx","serviceWorker.ts","store/reducers/user/user.tsx","store/reducers/necessity/necessity.tsx","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["userConstants","necessityConstants","userActions","email","username","password","dispatch","axios","post","then","res","user","data","type","target","catch","err","error","actionType","response","status","signupFailure","put","get","necessityActions","name","option","description","price","count","houseId","createResponse","necessities","createError","createFailure","getResponse","getError","necessityId","delete","removeResponse","window","alert","removeError","countResponse","countError","userStatus","necessityStatus","necessityUserLogStatus","Header","this","props","onGetMe","whereToGo","whereToGoDisplay","logoutButton","getMeStatus","pathname","history","push","className","onClick","onLogout","logoutStatus","location","reload","helloUser","me","Component","connect","state","router","loginStatus","Login","onLogin","id","placeholder","onChange","e","setState","value","disabled","clickLoginHandler","login","NecessityCreateModal","onCreateNecessityHouse","createStatus","restoreModal","appearing","style","display","title","background","border","htmlFor","required","min","step","parseFloat","parseInt","NaN","necessity","NecessityHead","NecessityItemRemove","styled","div","NecessityItemBlock","Text","onRemoveNecessityHouse","NecessityItemCount","onCountNecessityHouse","key","onSubmit","Array","from","map","house_id","NecessityTemplate","children","SignUpModal","signUp","signupStatus","StudyInfo","open","LogList","logs","necessityname","createdAt","Date","created_at","toLocaleString","activity_category","activityCategory","CircleButton","button","GlobalStyle","createGlobalStyle","onGetNecessityHouse","dateString","toLocaleDateString","year","month","day","useState","showNecessityCreateModal","setShowNecessityCreateModal","useEffect","StatisticsPage","TimelinePage","getLogStatus","params","logList","log","WorkPage","MainPage","activeTab","match","body","backgroundColor","IntroPage","showSignUpModal","setShowSignUpModal","InfoPage","HousePage","houses","setHouses","nameToCreate","setNameToCreate","introductionToCreate","setIntroductionToCreate","source","CancelToken","cancelToken","token","cancel","goToTheRoom","url","showUserHouses","house","index","introduction","event","preventDefault","App","exact","path","component","hisory","to","Boolean","hostname","initialState","reducer","action","lastLogin","last_login","dateJoined","date_joined","getStatus","removeStatus","necessityreducer","countStatus","rootReducer","combineReducers","userReducer","necessityReducer","connectRouter","createBrowserHistory","middlewares","store","next","console","result","getState","thunk","routerMiddleware","createStore","applyMiddleware","ReactDOM","render","document","getElementById","defaults","xsrfHeaderName","xsrfCookieName","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d47c6e2.chunk.js","sourcesContent":["export const userConstants = {\n  SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\n  SIGNUP_FAILURE: 'SIGNUP_FAILURE',\n  SIGNUP_FAILURE_USERNAME: 'SIGNUP_FAILURE_USERNAME',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGIN_FAILURE_USERNAME: 'LOGIN_FAILURE_USERNAME',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_FAILURE: 'LOGOUT_FAILURE',\n  GET_ME_SUCCESS: 'GET_ME_SUCCESS',\n  GET_ME_FAILURE: 'GET_ME_FAILURE',\n};\n\nexport const necessityConstants = {\n  CREATE_SUCCESS: 'CREATE_SUCCESS',\n  CREATE_FAILURE: 'CREATE_FAILURE',\n  CREATE_FAILURE_NAME: 'CREATE_FAILURE_NAME',\n  REMOVE_SUCCESS: 'REMOVE_SUCCESS',\n  REMOVE_FAILURE: 'REMOVE_FAILURE',\n  GET_SUCCESS: 'GET_SUCCESS',\n  GET_FAILURE: 'GET_FAILURE',\n  COUNT_SUCCESS: 'COUNT_SUCCESS',\n  COUNT_FAILURE: 'COUNT_FAILURE',\n};\n","import {\n  signUp,\n  login,\n  logout,\n  getMe,\n} from './user/user';\n\nimport {\n  createNecessityHouse,\n  getNecessityHouse,\n  removeNecessityHouse,\n  countNecessityHouse,\n} from './necessity/necessity';\n\nexport const userActions = {\n  signUp,\n  login,\n  logout,\n  getMe,\n};\n\nexport const necessityActions = {\n  createNecessityHouse,\n  getNecessityHouse,\n  removeNecessityHouse,\n  countNecessityHouse,\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { userConstants } from '../actionTypes';\n\nconst signupSuccess = (user: any) => ({\n  type: userConstants.SIGNUP_SUCCESS,\n  target: user,\n});\n\nconst signupFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    case 409:\n      actionType = userConstants.SIGNUP_FAILURE_USERNAME;\n      break;\n    default:\n      actionType = userConstants.SIGNUP_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const signUp = (\n  email: string, username: string, password: string,\n) => (dispatch: Dispatch) => axios.post('/api/v1/user/', { email, username, password })\n  .then((res) => dispatch(signupSuccess(res.data)))\n  .catch((err) => dispatch(signupFailure(err)));\n\nconst loginSuccess = (user: any) => ({\n  type: userConstants.LOGIN_SUCCESS,\n  target: user,\n});\n\nconst loginFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = userConstants.LOGIN_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const login = (\n  username: string, password: string,\n) => (dispatch: Dispatch) => axios.put('/api/v1/user/login/', { username, password })\n  .then((res) => dispatch(loginSuccess(res.data)))\n  .catch((err) => dispatch(loginFailure(err)));\n\nconst logoutSuccess = () => ({\n  type: userConstants.LOGOUT_SUCCESS,\n  target: null,\n});\n\nconst logoutFailure = (error: any) => ({\n  type: userConstants.LOGOUT_FAILURE,\n  target: error,\n});\n\nexport const logout = () => (dispatch: Dispatch) => axios.get('/api/v1/user/logout/')\n  .then(() => dispatch(logoutSuccess()))\n  .catch((err) => dispatch(logoutFailure(err)));\n\nconst getMeSuccess = (user: any) => ({\n  type: userConstants.GET_ME_SUCCESS,\n  target: user,\n});\n\nconst getMeFailure = (error: any) => ({\n  type: userConstants.GET_ME_FAILURE,\n  target: error,\n});\n\nexport const getMe = () => (dispatch: Dispatch) => axios.get('/api/v1/user/me/')\n  .then((res) => dispatch(getMeSuccess(res.data)))\n  .catch((err) => dispatch(getMeFailure(err)));\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { necessityConstants } from '../actionTypes';\n\n// 생필품 호출 기능\nconst getSuccess = (data: any) => ({\n  type: necessityConstants.GET_SUCCESS,\n  target: data.necessities,\n});\n\nconst getFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = necessityConstants.GET_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\n// 생필품 추가 기능\nconst createSuccess = (necessities: any) => ({\n  type: necessityConstants.CREATE_SUCCESS,\n  target: necessities,\n});\n\nconst createFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    case 409:\n      actionType = necessityConstants.CREATE_FAILURE_NAME;\n      break;\n    default:\n      actionType = necessityConstants.CREATE_FAILURE;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\n// 생필품 삭제 기능\nconst removeSuccess = (necessities: any) => {\n  window.alert('삭제되었습니다!');\n  return {\n    type: necessityConstants.REMOVE_SUCCESS,\n    target: necessities,\n  };\n};\n\nconst removeFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      window.alert('실패!');\n      actionType = necessityConstants.REMOVE_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\n// 생필품 수량 기능\nconst countSuccess = (necessities: any) => ({\n  type: necessityConstants.COUNT_SUCCESS,\n  target: necessities,\n});\n\nconst countFailure = (error: any) => {\n  let actionType = null;\n  switch (error.response.status) {\n    default:\n      actionType = necessityConstants.COUNT_FAILURE;\n      break;\n  }\n  return {\n    type: actionType,\n    target: error,\n  };\n};\n\nexport const createNecessityHouse = (\n  name: string, option: string, description: string, price: number, count: number, houseId: number,\n) => (dispatch: Dispatch) => axios.post(`/api/v1/house/${houseId}/necessity/`, {\n  houseId, name, option, description, price, count,\n})\n  .then((createResponse) => dispatch(createSuccess(createResponse.data)))\n  .catch((createError) => dispatch(createFailure(createError)));\n\nexport const removeNecessityHouse = (\n  houseId: number, necessityId: number,\n) => (dispatch: Dispatch) => axios.delete(`/api/v1/house/${houseId}/necessity/${necessityId}/`)\n  .then((removeResponse) => dispatch(removeSuccess(removeResponse.data)))\n  .catch((removeError) => dispatch(removeFailure(removeError)));\n\nexport const getNecessityHouse = (houseId: number) => (dispatch: Dispatch) => axios.get(`/api/v1/house/${houseId}/necessity/`)\n  .then((getResponse) => dispatch(getSuccess(getResponse.data)))\n  .catch((getError) => dispatch(getFailure(getError)));\n\nexport const countNecessityHouse = (\n  houseId: number, necessityId: number, count: number,\n) => (dispatch: Dispatch) => axios.put(`/api/v1/house/${houseId}/necessity/${necessityId}/count/`, { count })\n  .then((countResponse) => dispatch(countSuccess(countResponse.data)))\n  .catch((countError) => dispatch(countFailure(countError)));\n","export const userStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_USERNAME: 'FAILURE_USERNAME',\n};\n\nexport const necessityStatus = {\n  NONE: 'NONE',\n  WAITING: 'WAITING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  FAILURE_NAME: 'FAILURE_NAME',\n};\n\nexport const necessityUserLogStatus = {\n  NONE: 'NONE',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n};\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\n\nimport { userActions } from '../../store/actions';\nimport { userStatus } from '../../constants/constants';\nimport './Header.css';\n\ninterface Props {\n  history: any;\n  pathname: string;\n  loginStatus: string;\n  logoutStatus: string;\n  getMeStatus: string;\n  me: any;\n  onGetMe: () => any;\n  onLogout: () => any;\n}\n\nclass Header extends Component<Props> {\n  componentDidMount() {\n    this.props.onGetMe();\n  }\n\n  render() {\n    let whereToGo = '/info';\n    let whereToGoDisplay = '오렌지농장 소개';\n    let logoutButton = null;\n\n    // if not logged-in, userStatus would be FAILURE\n    if (this.props.getMeStatus === userStatus.FAILURE) {\n      if (this.props.pathname === '/info') {\n        // anonymous user can access InfoPage\n        whereToGo = '/intro';\n        whereToGoDisplay = '로그인';\n      } else {\n        // force anonymous user to redirect to IntroPage\n        this.props.history.push('/intro');\n      }\n    } else {\n      // if logged-in, there should be logout button\n      logoutButton = (\n        <li className=\"main-header-li\">\n          <button\n            className=\"logout-button\"\n            type=\"button\"\n            onClick={() => this.props.onLogout()\n              .then(() => {\n                if (this.props.logoutStatus === userStatus.SUCCESS) {\n                  this.props.history.push('/intro');\n                  window.location.reload();\n                }\n              })}\n          >\n            로그아웃\n          </button>\n        </li>\n      );\n      if (this.props.pathname === '/intro') {\n      // force logged-in user to redirect to MainPage\n        this.props.history.push('/');\n      } else if (this.props.pathname !== '/') {\n        whereToGo = '/';\n        whereToGoDisplay = '메인 페이지';\n      }\n    }\n\n    let helloUser = null;\n    if (this.props.pathname !== '/intro' && this.props.pathname !== '/info') {\n      helloUser = (\n        <li className=\"main-header-li main-header-li-hello\">\n          {this.props.me.username}\n          님 안녕하세요!&nbsp;&nbsp;\n        </li>\n      );\n    }\n\n    return (\n      <ul className=\"main-header\">\n        {helloUser}\n        <li className=\"main-header-li\">\n          <button\n            className=\"header-page-button\"\n            type=\"button\"\n            onClick={() => this.props.history.push(whereToGo)}\n          >\n            {whereToGoDisplay}\n          </button>\n        </li>\n        {logoutButton}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  pathname: state.router.location.pathname,\n  getMeStatus: state.user.getMeStatus,\n  loginStatus: state.user.loginStatus,\n  logoutStatus: state.user.logoutStatus,\n  me: state.user.me,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onGetMe: () => dispatch(userActions.getMe()),\n  onLogout: () => dispatch(userActions.logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\n\nimport { userStatus } from '../../constants/constants';\nimport { userActions } from '../../store/actions';\nimport './Login.css';\n\ninterface Props {\n  history: any;\n  loginStatus: string;\n  onLogin: (username: string, password: string) => any;\n}\n\ninterface State {\n  username: string;\n  password: string;\n}\n\nclass Login extends Component<Props, State> {\n  // NOTE: this Login Component is just for example about api call.\n  //       it can be changed completely differently.\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  clickLoginHandler() {\n    this.props.onLogin(this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.loginStatus === userStatus.SUCCESS) {\n          this.props.history.push('/');\n          window.location.reload();\n        } else {\n          alert('로그인에 실패하였습니다. \\n이름과 비밀번호를 확인해 주세요!');\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Login</h1>\n        <div className=\"LoginField\">\n          <input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"username\"\n            onChange={(e) => this.setState({ username: e.target.value })}\n          />\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => this.setState({ password: e.target.value })}\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"LoginButton\"\n          disabled={!this.state.username || !this.state.password}\n          onClick={() => this.clickLoginHandler()}\n        >\n          go\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginStatus: state.user.loginStatus,\n  user: state.user.login,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onLogin: (username: string, password: string) => dispatch(userActions.login(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component, Dispatch } from 'react';\nimport { History } from 'history';\nimport { connect } from 'react-redux';\nimport { necessityActions } from '../../../store/actions';\nimport { necessityStatus } from '../../../constants/constants';\nimport './NecessityCreateModal.css';\n\ninterface Props {\n  history: History;\n  onCreateNecessityHouse: (\n    name: string,\n    option: string,\n    description: string,\n    price: number,\n    count: number,\n    houseId: number\n  ) => any;\n  me: any;\n  createStatus: string;\n  restoreModal: any;\n  houseId: number;\n}\n\ninterface State {\n  appearing: boolean; // for modal appearing\n  name: string;\n  option: string;\n  description: string;\n  price: number;\n  count: number;\n}\n\nclass NecessityCreateModal extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      appearing: true,\n      name: '',\n      option: '',\n      description: '',\n      price: 0,\n      count: 1,\n    };\n  }\n\n  onCreateNecessityHouse = (): void => {\n    this.props.onCreateNecessityHouse(\n      this.state.name,\n      this.state.option,\n      this.state.description,\n      this.state.price,\n      this.state.count,\n      this.props.houseId,\n    )\n      .then(() => {\n        if (this.props.createStatus === necessityStatus.SUCCESS) {\n          window.alert('입력 완료!');\n          this.props.restoreModal();\n        } else if (this.props.createStatus === necessityStatus.FAILURE_NAME) {\n          window.alert('이미 존재하는 생필품입니다.');\n        } else {\n          window.alert('실패!');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"necessity-create-modal\"\n        style={this.state.appearing ? { display: 'block' } : { display: 'none' }}\n      >\n        <form>\n          <button\n            className=\"necessity-create-close\"\n            onClick={() => this.props.restoreModal}\n            type=\"submit\"\n            title=\"Close Modal\"\n            style={{ background: 'none', border: 'none' }}\n          >\n            &times;\n          </button>\n        </form>\n\n        <form className=\"necessity-create-modal-content\">\n          <div className=\"necessity-create-container\">\n            <p>생필품 정보를 입력해주세요.</p>\n            <hr />\n            <label htmlFor=\"name\">\n              <b>생필품 (Necessity)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"오렌지\"\n              required\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n\n            <label htmlFor=\"count\">\n              <b>개수 (Count)</b>\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"1\"\n              placeholder=\"1\"\n              required\n              onChange={(e) => this.setState({\n                count: (parseFloat(e.target.value) === parseInt(e.target.value, 10))\n                  ? parseFloat(e.target.value) : NaN,\n              })}\n            />\n\n            <label htmlFor=\"option\">\n              <b>옵션 (Option)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"발렌시아 품종\"\n              required\n              onChange={(e) => this.setState({ option: e.target.value })}\n            />\n\n            <label htmlFor=\"description\">\n              <b>설명 (Description)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"식후 비타민 C 섭취용\"\n              required\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n\n            <label htmlFor=\"price\">\n              <b>가격 (Price)</b>\n            </label>\n            <input\n              type=\"number\"\n              placeholder=\"2900\"\n              required\n              onChange={(e) => this.setState({\n                price: (parseFloat(e.target.value) === parseInt(e.target.value, 10))\n                  ? parseFloat(e.target.value) : NaN,\n              })}\n            />\n\n            <div className=\"necessity-create-clearfix\">\n              <button\n                type=\"button\"\n                className=\"necessity-create-createbtn\"\n                disabled={this.state.name === ''}\n                onClick={this.onCreateNecessityHouse}\n              >\n                생필품 등록\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onCreateNecessityHouse: (\n    name: string, option: string, description: string,\n    price: number, count: number, houseId: number,\n  ): void => dispatch(\n    necessityActions.createNecessityHouse(name, option, description, price, count, houseId),\n  ),\n});\n\nconst mapStateToProps = (state: any) => ({\n  createStatus: state.necessity.createStatus,\n  me: state.user.me,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NecessityCreateModal);\n","import React from 'react';\nimport './NecessityHead.css';\n\nfunction NecessityHead() {\n  return (\n    <div\n      className=\"NecessityHeadBlock\"\n    >\n      <h1>냉장고</h1>\n    </div>\n  );\n}\n\nexport default NecessityHead;\n","import React, { Dispatch } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { MdDelete } from 'react-icons/md';\nimport { necessityActions } from '../../../store/actions';\n\nconst NecessityItemRemove = styled.div`\n    display: none;\n    align-items: center;\n    justify-content: center;\n    color: #F1948A;\n    font-size: 20px;\n    float: right;\n    cursor: pointer;\n    &:hover {\n        color: #B03A2E;\n    }\n`;\n\nconst NecessityItemBlock = styled.div`\n    display: inline-flex;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    &:hover {\n        ${NecessityItemRemove}{\n            display: inline-flex;\n            float: right;\n        }\n    }\n`;\n\nconst Text = styled.div`\n    flex: 1;\n    font-size: 21px;\n    color: #495057;\n    .option {\n      color: #868e96;\n      font-size: 12px;\n    }\n}\n`;\n\ninterface Props {\n  key: number;\n  id: number;\n  name: string;\n  count: number;\n  description: string;\n  option: string;\n  price: number;\n  houseId: number;\n  necessityId: number;\n  onRemoveNecessityHouse(houseId: number, necessityId: number): any;\n}\n\nfunction NecessityItem(props: Props) {\n  return (\n    <NecessityItemBlock id={`necessity-item-${props.necessityId}`}>\n      <Text>\n        {`${props.name}`}\n        <span className=\"option\">\n          <br />\n          {` ${props.count}개 / ${props.price}원 / ${props.option} `}\n        </span>\n      </Text>\n      <NecessityItemRemove\n        onClick={() => {\n          props.onRemoveNecessityHouse(props.houseId, props.necessityId);\n          window.location.reload();\n        }}\n\n      >\n        <MdDelete />\n      </NecessityItemRemove>\n    </NecessityItemBlock>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onRemoveNecessityHouse: (houseId: number, necessityId: number): void => dispatch(\n    necessityActions.removeNecessityHouse(houseId, necessityId),\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(NecessityItem);\n","import React, { Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { necessityActions } from '../../../store/actions';\n\nconst NecessityItemCount = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #ffa500;\n    font-size: 20px;\n    cursor: text\n    &:hover {\n        color: #B03A2E;\n    }\n`;\n\nconst NecessityItemBlock = styled.div`\n    display: flex;\n    align-items: center;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    &:hover {\n        ${NecessityItemCount}{\n            display: initial;\n        }\n    }\n`;\n\ninterface Props {\n  key: number;\n  houseId: number;\n  necessityId: number;\n  count: number;\n  onCountNecessityHouse(houseId: number, necessityId: number, count: number): any;\n}\n\nfunction NecessityCounter(props: Props) {\n  return (\n    <NecessityItemBlock key={props.key}>\n      <table>\n        <td>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                props.onCountNecessityHouse(props.houseId, props.necessityId, props.count + 1);\n                window.location.reload();\n              }}\n            >\n              +\n            </button>\n          </div>\n\n          <div>\n            <NecessityItemCount\n              onSubmit={() => props.onCountNecessityHouse(\n                props.houseId, props.necessityId, props.count,\n              )}\n            >\n              { `${props.count}`}\n            </NecessityItemCount>\n          </div>\n\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                props.onCountNecessityHouse(props.houseId, props.necessityId, props.count - 1);\n                window.location.reload();\n              }}\n            >\n              -\n            </button>\n          </div>\n        </td>\n\n      </table>\n    </NecessityItemBlock>\n\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onCountNecessityHouse: (houseId: number, necessityId: number, count: number): void => dispatch(\n    necessityActions.countNecessityHouse(houseId, necessityId, count),\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(NecessityCounter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NecessityItem from '../NecessityItem/NecessityItem';\nimport NecessityCounter from '../NecessityCounter/NecessityCounter';\nimport './NecessityList.css';\n\ninterface Props {\n  necessities: any;\n}\n\nfunction NecessityList(props: Props) {\n  const { necessities } = props;\n\n  return (\n    <>\n      {Array.from(necessities).map((necessity: any) => (\n        <div\n          className=\"necessity-list-block\"\n          key={necessity.id}\n        >\n          <div className=\"necessity-item-block\">\n            <NecessityItem\n              key={necessity.id}\n              id={necessity.id}\n              name={necessity.name}\n              count={necessity.count}\n              description={necessity.description}\n              option={necessity.option}\n              price={necessity.price}\n              houseId={necessity.house_id}\n              necessityId={necessity.id}\n            />\n          </div>\n          <div>\n            <NecessityCounter\n              key={necessity.id}\n              houseId={necessity.house_id}\n              necessityId={necessity.id}\n              count={necessity.count}\n            />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  necessities: state.necessity.necessities,\n});\n\nexport default connect(mapStateToProps)(NecessityList);\n","import React from 'react';\nimport './NecessityTemplate.css';\n\ninterface Props {\n  children: any;\n}\n\nfunction NecessityTemplate({ children }: Props) {\n  return (\n    <div\n      className=\"necessity-template-block\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default NecessityTemplate;\n","import React, { Component, Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../store/actions';\nimport { userStatus } from '../../constants/constants';\nimport './SignUpModal.css';\n\ninterface Props {\n  history?: any;\n  signUp: (email: string, username: string, password: string) => any; // for redux dispatch\n  me: any;\n  signupStatus: string;\n}\n\ninterface State {\n  appearing: boolean; // for modal appearing\n  email: string;\n  username: string;\n  password: string;\n}\n\nclass SignUpModal extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      appearing: true,\n      email: '',\n      username: '',\n      password: '',\n    };\n  }\n\n  signUp = () => {\n    this.props.signUp(this.state.email, this.state.username, this.state.password)\n      .then(() => {\n        if (this.props.signupStatus === userStatus.SUCCESS) {\n          window.alert('성공!');\n          this.setState({ appearing: false });\n          this.props.history.push('/');\n        } else if (this.props.signupStatus === userStatus.FAILURE_USERNAME) {\n          window.alert('중복된 사용자 이름!');\n        } else {\n          window.alert('실패!');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal\"\n        style={this.state.appearing ? { display: 'block' } : { display: 'none' }}\n      >\n        <form>\n          <button\n            type=\"submit\"\n            className=\"close\"\n            title=\"Close Modal\"\n            style={{ background: 'none', border: 'none' }}\n          >\n            &times;\n          </button>\n        </form>\n        <form className=\"modal-content\">\n          <div className=\"container\">\n            <p>오렌지 농장을 이용하기 전에 회원가입을 해주세요</p>\n            <hr />\n            <label htmlFor=\"email\">\n              <b>이메일 (Email)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"haksaeng@snu.ac.kr\"\n              required\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n\n            <label htmlFor=\"email\">\n              <b>이름 (Name)</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Jinsup\"\n              required\n              onChange={(e) => this.setState({ username: e.target.value })}\n            />\n\n            <label htmlFor=\"psw\">\n              <b>비밀번호 (Password)</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              required\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n\n            {/* <label htmlFor=\"psw-repeat\">\n              <b>비밀번호 확인 (Repeat Password)</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Repeat Password\"\n              name=\"psw-repeat\"\n              required\n            /> */}\n\n            <div className=\"clearfix\">\n              <button\n                type=\"button\"\n                className=\"signupbtn\"\n                disabled={this.state.email === '' || this.state.password === '' || this.state.username === ''}\n                onClick={this.signUp}\n              >\n                회원가입\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  signUp: (email: string, username: string, password: string) => dispatch(\n    userActions.signUp(email, username, password),\n  ),\n});\n\nconst mapStateToProps = (state: any) => ({\n  signupStatus: state.user.signupStatus,\n  me: state.user.me,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpModal);\n","import React from 'react';\n\nimport './StudyInfo.css';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nfunction StudyInfo() {\n  return (\n    <div className=\"study-info\">\n      <section>\n        <h2 className=\"deep-orange\">스터디 멤버</h2>\n        <ul>\n          <strong>웹 개발 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/davin111')}\n            >\n              {' '}\n              다빈\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/YeonghyeonKO')}\n            >\n              {' '}\n              영현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/JSKeum')}\n            >\n              {' '}\n              진섭\n            </a>\n          </li>\n          <br />\n          <strong>세미나 참여</strong>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/anneKwon')}\n            >\n              {' '}\n              민재\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/palpitate2015')}\n            >\n              {' '}\n              상현\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/Eunsung-k')}\n            >\n              {' '}\n              은성\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/jadeyyun')}\n            >\n              {' '}\n              재연\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">GitHub</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://github.com/gongmyeong-study')}\n            >\n              GitHub 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h2 className=\"deep-orange\">Slack</h2>\n        <ul>\n          <li>\n            <a\n              className=\"VisitLink\"\n              onClick={() => window.open('https://gongmyeongstudy.slack.com')}\n            >\n              Slack 방문하기\n            </a>\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default StudyInfo;\n","import React from 'react';\n\ninterface Props {\n  logs: any;\n}\n\nfunction LogList(props: Props) {\n  const { username } = props.logs.user;\n  const necessityname = props.logs.necessity.name;\n  const createdAt = (new Date(props.logs.created_at)).toLocaleString();\n\n  const activityCategory = () => {\n    switch (props.logs.activity_category) {\n      case 'CREATE':\n        return '를(을) 생필품 목록에 추가했습니다.';\n      case 'UPDATE':\n        return '를(을) 수정했습니다.';\n      case 'DELETE':\n        return '를(을) 생필품 목록에서 삭제했습니다.';\n      default:\n        return '를(을) 수정했습니다.';\n    }\n  };\n\n  return (\n    <div className=\"logList\">\n      <p>\n        {username}\n        {' '}\n        이(가)\n        {' '}\n        &apos;\n        {necessityname}\n        &apos;\n        {activityCategory()}\n        {' '}\n        (\n        {createdAt}\n        )\n      </p>\n    </div>\n  );\n}\n\nexport default LogList;\n","import React, {\n  useState, useEffect, ReactElement, Dispatch,\n} from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { connect } from 'react-redux';\n\nimport {\n  NecessityCreateModal, NecessityHead, NecessityList, NecessityTemplate,\n} from '../../components';\nimport { necessityActions } from '../../store/actions';\nimport './NecessityPage.css';\n\nconst CircleButton = styled.button`\n    background: lightgray;\n    transition: 0.3s;\n    &:hover {\n        background: gray;\n    }\n    &:active {\n        opacity: 0.2;\n        background: gray;\n    }\n    \n    z-index: 0;\n    cursor: pointer;\n    width: 160px;\n    height: 137.69px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 60px;\n    position : static;\n    left: 10%;\n    bottom: 20px;\n    color: white;\n    border-radius: 10%;\n    border: none;\n    outline: none;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        background: #e9ecef;\n    }\n`;\n\ninterface Props {\n  history: any;\n  onGetNecessityHouse(houseId: number): void;\n  houseId: number;\n}\n\nfunction NecessityPage(props: Props): ReactElement {\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const [showNecessityCreateModal, setShowNecessityCreateModal] = useState(false);\n  const showModal = (): void => setShowNecessityCreateModal(true);\n\n  const restoreModal = () => {\n    setShowNecessityCreateModal(false);\n  };\n\n  useEffect(() => {\n    props.onGetNecessityHouse(props.houseId);\n  });\n\n  return (\n    <>\n      <span>\n        <h1 className=\"NecessityPageBlock\">{dateString}</h1>\n      </span>\n\n      <GlobalStyle />\n      <NecessityTemplate>\n        <NecessityHead />\n        <div className=\"necessity-list-column\">\n          <CircleButton onClick={showModal}>\n            <MdAdd />\n          </CircleButton>\n          {showNecessityCreateModal ? (\n            <NecessityCreateModal\n              history={props.history}\n              restoreModal={restoreModal}\n              houseId={props.houseId}\n            />\n          ) : null}\n\n          <NecessityList />\n        </div>\n      </NecessityTemplate>\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  onGetNecessityHouse: (houseId: number): void => dispatch(\n    necessityActions.getNecessityHouse(houseId),\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(NecessityPage);\n","import React, { Component } from 'react';\n\nclass StatisticsPage extends Component {\n  render() {\n    return (\n      <div className=\"statistics-page\">\n        통계 페이지\n      </div>\n    );\n  }\n}\n\nexport default StatisticsPage;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { LogList } from '../../components';\nimport { necessityUserLogStatus } from '../../constants/constants';\n\ninterface Props {\n  history: any;\n  houseId: string;\n}\n\ninterface State {\n  logs: any[];\n  getLogStatus: string;\n}\n\nclass TimelinePage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logs: [],\n      getLogStatus: necessityUserLogStatus.NONE,\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/v1/necessity/log/', { params: this.props.houseId })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({ logs: res.data, getLogStatus: necessityUserLogStatus.SUCCESS });\n        }\n      });\n  }\n\n  render() {\n    const { logs, getLogStatus } = this.state;\n    const logList = logs.map((log) => <LogList key={log.id} logs={log} />);\n\n    return (\n      <div className=\"timeline-page\">\n        타임라인 페이지\n        {getLogStatus === necessityUserLogStatus.SUCCESS ? logList : null}\n      </div>\n    );\n  }\n}\n\nexport default TimelinePage;\n","import React, { Component } from 'react';\n\nclass WorkPage extends Component {\n  render() {\n    return (\n      <div className=\"work-page\">\n        가사노동 관리 페이지\n      </div>\n    );\n  }\n}\n\nexport default WorkPage;\n","import React, { Component } from 'react';\n\nimport NecessityPage from '../NecessityPage/NecessityPage';\nimport StatisticsPage from '../StatisticsPage/StatisticsPage';\nimport TimelinePage from '../TimelinePage/TimelinePage';\nimport WorkPage from '../WorkPage/WorkPage';\nimport './MainPage.css';\n\ninterface Props {\n  history: any;\n  match: any;\n}\n\ninterface State {\n  activeTab: number;\n}\n\nclass MainPage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTab: 0,\n    };\n  }\n\n  render() {\n    const houseId = this.props.match.params.id;\n\n    let body = null;\n    switch (this.state.activeTab) {\n      case 1:\n        body = <WorkPage />;\n        break;\n      case 2:\n        body = <TimelinePage history={this.props.history} houseId={houseId} />;\n        break;\n      case 3:\n        body = <StatisticsPage />;\n        break;\n      default:\n        body = <NecessityPage history={this.props.history} houseId={houseId} />;\n    }\n\n    return (\n      <div className=\"main-page\">\n        <div\n          className=\"main-tabs\"\n        >\n          <div\n            className=\"main-tab\"\n            id=\"necessity-tab\"\n            onClick={() => this.setState({ activeTab: 0 })}\n            style={this.state.activeTab === 0 ? { backgroundColor: 'orange' } : {}}\n          >\n            생필품 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"work-tab\"\n            onClick={() => this.setState({ activeTab: 1 })}\n            style={this.state.activeTab === 1 ? { backgroundColor: 'orange' } : {}}\n          >\n            가사노동 관리\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"timeline-tab\"\n            onClick={() => this.setState({ activeTab: 2 })}\n            style={this.state.activeTab === 2 ? { backgroundColor: 'orange' } : {}}\n          >\n            타임라인\n          </div>\n          <div\n            className=\"main-tab\"\n            id=\"statistics-tab\"\n            onClick={() => this.setState({ activeTab: 3 })}\n            style={this.state.activeTab === 3 ? { backgroundColor: 'orange' } : {}}\n          >\n            통계\n          </div>\n        </div>\n        {body}\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { useState } from 'react';\n\nimport { Login, SignUpModal } from '../../components/index';\n\ninterface Props {\n  history: any;\n}\n\nfunction IntroPage(props: Props) {\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const showModal = () => setShowSignUpModal(true);\n  return (\n    <div>\n      <Login history={props.history} />\n      <button\n        onClick={showModal}\n        type=\"button\"\n      >\n        회원가입\n        {' '}\n      </button>\n      {showSignUpModal ? <SignUpModal history={props.history} /> : null}\n    </div>\n  );\n}\n\nexport default IntroPage;\n","import React, { Component } from 'react';\n\nimport { StudyInfo } from '../../components';\nimport './InfoPage.css';\n\nclass InfoPage extends Component {\n  render() {\n    return (\n      <div className=\"info-ui\">\n        <main>\n          <StudyInfo />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default InfoPage;\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport axios from 'axios';\n\ninterface House {\n  id: string;\n  name: string;\n  introduction: string;\n  users?: object;\n}\n\ninterface Props {\n  history: any;\n}\n\nfunction HousePage(props: Props) {\n  const [houses, setHouses] = useState<[House]>();\n  const [nameToCreate, setNameToCreate] = useState('');\n  const [introductionToCreate, setIntroductionToCreate] = useState('');\n\n  useEffect(() => {\n    const { CancelToken } = axios;\n    const source = CancelToken.source();\n\n    axios.get('/api/v1/house/', { cancelToken: source.token })\n      .then((res) => setHouses(res.data));\n\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  const goToTheRoom = (houseId: string) => {\n    const url = `/main/${houseId}`;\n    props.history.push(url);\n  };\n\n  const createHouse = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    axios.post('/api/v1/house/', { name: nameToCreate, introduction: introductionToCreate })\n      .then((res) => {\n        const { data } = res;\n        goToTheRoom(data.id);\n      });\n  };\n\n  const showUserHouses = houses?.map((house, index) => (\n    <div key={index}>\n      <h1>\n        {house.name}\n      </h1>\n      <h2>\n        {house.introduction}\n      </h2>\n      <button\n        type=\"button\"\n        onClick={() => goToTheRoom(house.id)}\n      >\n        들어가기\n      </button>\n      <hr />\n    </div>\n  ));\n\n  return (\n    <main>\n      <section>\n        <form onSubmit={createHouse}>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              onChange={(e) => setNameToCreate(e.target.value)}\n              placeholder=\"예쁜 우리집\"\n            />\n          </label>\n          <label>\n            Introduction:\n            <input\n              type=\"text\"\n              onChange={(e) => setIntroductionToCreate(e.target.value)}\n              placeholder=\"친구들과 함께 사는 공간\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </section>\n      <section>\n        {showUserHouses}\n      </section>\n    </main>\n  );\n}\n\nexport default HousePage;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './components';\nimport {\n  MainPage, IntroPage, InfoPage, HousePage,\n} from './containers';\nimport './App.css';\n\ninterface Props {\n  history: any;\n}\n\nfunction App(props: Props): JSX.Element {\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={props.history}>\n        <Header history={props.history} />\n        <Switch>\n          <Route exact path=\"/\" component={HousePage} hisory={props.history} />\n          <Route exact path=\"/main/:id\" component={MainPage} history={props.history} />\n          <Route exact path=\"/intro\" component={IntroPage} history={props.history} />\n          <Route exact path=\"/info\" component={InfoPage} />\n          <Route exact path=\"/house\" component={HousePage} history={props.history} />\n          <Redirect exact to=\"/intro\" />\n        </Switch>\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userConstants } from '../../actions/actionTypes';\nimport { userStatus } from '../../../constants/constants';\n\nconst initialState = {\n  me: {},\n  signupStatus: userStatus.NONE,\n  loginStatus: userStatus.NONE,\n  logoutStatus: userStatus.NONE,\n  getMeStatus: userStatus.NONE,\n};\n\nconst reducer = (state = initialState, action: any) => {\n  const data = action.target;\n  switch (action.type) {\n    case userConstants.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupStatus: userStatus.SUCCESS,\n        me: {\n          id: data.id,\n          username: data.username,\n          email: data.email,\n          lastLogin: data.last_login,\n          dateJoined: data.date_joined,\n        },\n      };\n    case userConstants.SIGNUP_FAILURE_USERNAME:\n      return { ...state, signupStatus: userStatus.FAILURE_USERNAME };\n    case userConstants.SIGNUP_FAILURE:\n      return { ...state, signupStatus: userStatus.FAILURE };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginStatus: userStatus.SUCCESS,\n        me: {\n          id: data.id,\n          username: data.username,\n          email: data.email,\n          lastLogin: data.last_login,\n          dateJoined: data.date_joined,\n        },\n      };\n    case userConstants.LOGIN_FAILURE:\n      return { ...state, loginStatus: userStatus.FAILURE };\n    case userConstants.LOGOUT_SUCCESS:\n      return { ...state, logoutStatus: userStatus.SUCCESS };\n    case userConstants.LOGOUT_FAILURE:\n      return { ...state, logoutStatus: userStatus.FAILURE };\n    case userConstants.GET_ME_SUCCESS:\n      return {\n        ...state,\n        me: {\n          id: data.id,\n          username: data.username,\n          email: data.email,\n          lastLogin: data.last_login,\n          dateJoined: data.date_joined,\n        },\n        getMeStatus: userStatus.SUCCESS,\n      };\n    case userConstants.GET_ME_FAILURE:\n      return { ...state, getMeStatus: userStatus.FAILURE };\n    default:\n      return { ...state };\n  }\n};\n\nexport default reducer;\n","import { necessityConstants } from '../../actions/actionTypes';\nimport { necessityStatus } from '../../../constants/constants';\n\ntype Action = {\n  type: string;\n  target: any;\n};\n\nconst initialState = {\n  createStatus: necessityStatus.NONE,\n  getStatus: necessityStatus.NONE,\n  removeStatus: necessityStatus.NONE,\n  necessities: [],\n};\n\nfunction necessityreducer(state = initialState, action: Action) {\n  const data = action.target;\n  switch (action.type) {\n    // 생필품 호출\n    case necessityConstants.GET_SUCCESS:\n      return {\n        ...state,\n        getStatus: necessityStatus.SUCCESS,\n        necessities: data,\n      };\n    case necessityConstants.GET_FAILURE:\n      return {\n        ...state,\n        getStatus: necessityStatus.FAILURE,\n      };\n\n    // 생필품 추가\n    case necessityConstants.CREATE_SUCCESS:\n      return {\n        ...state,\n        createStatus: necessityStatus.SUCCESS,\n        necessities: data,\n      };\n    case necessityConstants.CREATE_FAILURE:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE,\n      };\n    case necessityConstants.CREATE_FAILURE_NAME:\n      return {\n        ...state,\n        createStatus: necessityStatus.FAILURE_NAME,\n      };\n\n    // 생필품 제거\n    case necessityConstants.REMOVE_SUCCESS:\n      return {\n        ...state,\n        removeStatus: necessityStatus.SUCCESS,\n        necessities: data,\n      };\n    case necessityConstants.REMOVE_FAILURE:\n      return {\n        ...state,\n        removeStatus: necessityStatus.FAILURE,\n      };\n\n      // 생필품 수량\n    case necessityConstants.COUNT_SUCCESS:\n      return {\n        ...state,\n        countStatus: necessityStatus.SUCCESS,\n        necessities: data,\n      };\n    case necessityConstants.COUNT_FAILURE:\n      return {\n        ...state,\n        countStatus: necessityStatus.FAILURE,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default necessityreducer;\n","import { History } from 'history';\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport userReducer from './user/user';\nimport necessityReducer from './necessity/necessity';\n\nconst rootReducer = (history: History) => combineReducers({\n  user: userReducer,\n  necessity: necessityReducer,\n  router: connectRouter(history),\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from './reducers/index';\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  window.console.log('[Middleware] Dispatching', action);\n  const result = next(action);\n  window.console.log('[Middleware] Next State', store.getState());\n  return result;\n};\n\nexport const history = createBrowserHistory();\nexport const middlewares = [logger, thunk, routerMiddleware(history)];\n\nconst store = createStore(rootReducer(history), applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root'),\n);\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}